
DIO_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003380  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00003380  00003414  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800068  00800068  0000341c  2**0
                  ALLOC
  3 .stab         00001f80  00000000  00000000  0000341c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000cd3  00000000  00000000  0000539c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  0000606f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  000061af  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  0000631f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  00007f68  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  00008e53  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  00009c00  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  00009d60  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  00009fed  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000a7bb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a8 e6       	ldi	r26, 0x68	; 104
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	aa 36       	cpi	r26, 0x6A	; 106
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	10 e0       	ldi	r17, 0x00	; 0
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	e0 e8       	ldi	r30, 0x80	; 128
      78:	f3 e3       	ldi	r31, 0x33	; 51
      7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>
      86:	0e 94 f3 0c 	call	0x19e6	; 0x19e6 <main>
      8a:	0c 94 be 19 	jmp	0x337c	; 0x337c <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 87 19 	jmp	0x330e	; 0x330e <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 a3 19 	jmp	0x3346	; 0x3346 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 93 19 	jmp	0x3326	; 0x3326 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 af 19 	jmp	0x335e	; 0x335e <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 93 19 	jmp	0x3326	; 0x3326 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 af 19 	jmp	0x335e	; 0x335e <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 87 19 	jmp	0x330e	; 0x330e <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 a3 19 	jmp	0x3346	; 0x3346 <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 93 19 	jmp	0x3326	; 0x3326 <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 af 19 	jmp	0x335e	; 0x335e <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 93 19 	jmp	0x3326	; 0x3326 <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 af 19 	jmp	0x335e	; 0x335e <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 93 19 	jmp	0x3326	; 0x3326 <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 af 19 	jmp	0x335e	; 0x335e <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 97 19 	jmp	0x332e	; 0x332e <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 b3 19 	jmp	0x3366	; 0x3366 <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <DIO_voidInit>:

#include "DIO_Private.h"
#include "DIO_Config.h"

void DIO_voidInit(void)
{
     b46:	df 93       	push	r29
     b48:	cf 93       	push	r28
     b4a:	cd b7       	in	r28, 0x3d	; 61
     b4c:	de b7       	in	r29, 0x3e	; 62
	DIO_u8_DDRA_REG = Conc(DIO_u8_PA7_INITIAL_DIRECTION, DIO_u8_PA6_INITIAL_DIRECTION, DIO_u8_PA5_INITIAL_DIRECTION, DIO_u8_PA4_INITIAL_DIRECTION, DIO_u8_PA3_INITIAL_DIRECTION, DIO_u8_PA2_INITIAL_DIRECTION, DIO_u8_PA1_INITIAL_DIRECTION, DIO_u8_PA0_INITIAL_DIRECTION);
     b4e:	ea e3       	ldi	r30, 0x3A	; 58
     b50:	f0 e0       	ldi	r31, 0x00	; 0
     b52:	10 82       	st	Z, r1
	DIO_u8_DDRB_REG = Conc(DIO_u8_PB7_INITIAL_DIRECTION, DIO_u8_PB6_INITIAL_DIRECTION, DIO_u8_PB5_INITIAL_DIRECTION, DIO_u8_PB4_INITIAL_DIRECTION, DIO_u8_PB3_INITIAL_DIRECTION, DIO_u8_PB2_INITIAL_DIRECTION, DIO_u8_PB1_INITIAL_DIRECTION, DIO_u8_PB0_INITIAL_DIRECTION);
     b54:	e7 e3       	ldi	r30, 0x37	; 55
     b56:	f0 e0       	ldi	r31, 0x00	; 0
     b58:	10 82       	st	Z, r1
	DIO_u8_DDRC_REG = Conc(DIO_u8_PC7_INITIAL_DIRECTION, DIO_u8_PC6_INITIAL_DIRECTION, DIO_u8_PC5_INITIAL_DIRECTION, DIO_u8_PC4_INITIAL_DIRECTION, DIO_u8_PC3_INITIAL_DIRECTION, DIO_u8_PC2_INITIAL_DIRECTION, DIO_u8_PC1_INITIAL_DIRECTION, DIO_u8_PC0_INITIAL_DIRECTION);
     b5a:	e4 e3       	ldi	r30, 0x34	; 52
     b5c:	f0 e0       	ldi	r31, 0x00	; 0
     b5e:	8f ef       	ldi	r24, 0xFF	; 255
     b60:	80 83       	st	Z, r24
	DIO_u8_DDRD_REG = Conc(DIO_u8_PD7_INITIAL_DIRECTION, DIO_u8_PD6_INITIAL_DIRECTION, DIO_u8_PD5_INITIAL_DIRECTION, DIO_u8_PD4_INITIAL_DIRECTION, DIO_u8_PD3_INITIAL_DIRECTION, DIO_u8_PD2_INITIAL_DIRECTION, DIO_u8_PD1_INITIAL_DIRECTION, DIO_u8_PD0_INITIAL_DIRECTION);
     b62:	e1 e3       	ldi	r30, 0x31	; 49
     b64:	f0 e0       	ldi	r31, 0x00	; 0
     b66:	80 e3       	ldi	r24, 0x30	; 48
     b68:	80 83       	st	Z, r24


	DIO_u8_PORTA_REG = Conc(DIO_u8_PA0_INITIAL_VALUE, DIO_u8_PA1_INITIAL_VALUE, DIO_u8_PA2_INITIAL_VALUE, DIO_u8_PA3_INITIAL_VALUE, DIO_u8_PA4_INITIAL_VALUE, DIO_u8_PA5_INITIAL_VALUE, DIO_u8_PA6_INITIAL_VALUE, DIO_u8_PA7_INITIAL_VALUE);
     b6a:	eb e3       	ldi	r30, 0x3B	; 59
     b6c:	f0 e0       	ldi	r31, 0x00	; 0
     b6e:	10 82       	st	Z, r1
	DIO_u8_PORTB_REG = Conc(DIO_u8_PB0_INITIAL_VALUE, DIO_u8_PB1_INITIAL_VALUE, DIO_u8_PB2_INITIAL_VALUE, DIO_u8_PB3_INITIAL_VALUE, DIO_u8_PB4_INITIAL_VALUE, DIO_u8_PB5_INITIAL_VALUE, DIO_u8_PB6_INITIAL_VALUE, DIO_u8_PB7_INITIAL_VALUE);
     b70:	e8 e3       	ldi	r30, 0x38	; 56
     b72:	f0 e0       	ldi	r31, 0x00	; 0
     b74:	10 82       	st	Z, r1
	DIO_u8_PORTC_REG = Conc(DIO_u8_PC0_INITIAL_VALUE, DIO_u8_PC1_INITIAL_VALUE, DIO_u8_PC2_INITIAL_VALUE, DIO_u8_PC3_INITIAL_VALUE, DIO_u8_PC4_INITIAL_VALUE, DIO_u8_PC5_INITIAL_VALUE, DIO_u8_PC6_INITIAL_VALUE, DIO_u8_PC7_INITIAL_VALUE);
     b76:	e5 e3       	ldi	r30, 0x35	; 53
     b78:	f0 e0       	ldi	r31, 0x00	; 0
     b7a:	10 82       	st	Z, r1
	DIO_u8_PORTD_REG = Conc(DIO_u8_PD0_INITIAL_VALUE, DIO_u8_PD1_INITIAL_VALUE, DIO_u8_PD2_INITIAL_VALUE, DIO_u8_PD3_INITIAL_VALUE, DIO_u8_PD4_INITIAL_VALUE, DIO_u8_PD5_INITIAL_VALUE, DIO_u8_PD6_INITIAL_VALUE, DIO_u8_PD7_INITIAL_VALUE);
     b7c:	e2 e3       	ldi	r30, 0x32	; 50
     b7e:	f0 e0       	ldi	r31, 0x00	; 0
     b80:	10 82       	st	Z, r1

}
     b82:	cf 91       	pop	r28
     b84:	df 91       	pop	r29
     b86:	08 95       	ret

00000b88 <DIO_u8SetPinDirection>:

u8 DIO_u8SetPinDirection(u8 Copy_u8PortId, u8 Copy_u8PinId, u8 Copy_u8PinDirection)
{
     b88:	df 93       	push	r29
     b8a:	cf 93       	push	r28
     b8c:	cd b7       	in	r28, 0x3d	; 61
     b8e:	de b7       	in	r29, 0x3e	; 62
     b90:	2e 97       	sbiw	r28, 0x0e	; 14
     b92:	0f b6       	in	r0, 0x3f	; 63
     b94:	f8 94       	cli
     b96:	de bf       	out	0x3e, r29	; 62
     b98:	0f be       	out	0x3f, r0	; 63
     b9a:	cd bf       	out	0x3d, r28	; 61
     b9c:	8a 83       	std	Y+2, r24	; 0x02
     b9e:	6b 83       	std	Y+3, r22	; 0x03
     ba0:	4c 83       	std	Y+4, r20	; 0x04

	u8 Local_u8ErrorState = STD_TYPES_OK;
     ba2:	81 e0       	ldi	r24, 0x01	; 1
     ba4:	89 83       	std	Y+1, r24	; 0x01

	if (Copy_u8PortId <= DIO_u8_PORTD && Copy_u8PinId <= DIO_u8_PIN7 && (Copy_u8PinDirection == DIO_u8_OUTPUT || Copy_u8PinDirection == DIO_u8_INPUT))
     ba6:	8a 81       	ldd	r24, Y+2	; 0x02
     ba8:	84 30       	cpi	r24, 0x04	; 4
     baa:	08 f0       	brcs	.+2      	; 0xbae <DIO_u8SetPinDirection+0x26>
     bac:	0c c1       	rjmp	.+536    	; 0xdc6 <DIO_u8SetPinDirection+0x23e>
     bae:	8b 81       	ldd	r24, Y+3	; 0x03
     bb0:	88 30       	cpi	r24, 0x08	; 8
     bb2:	08 f0       	brcs	.+2      	; 0xbb6 <DIO_u8SetPinDirection+0x2e>
     bb4:	08 c1       	rjmp	.+528    	; 0xdc6 <DIO_u8SetPinDirection+0x23e>
     bb6:	8c 81       	ldd	r24, Y+4	; 0x04
     bb8:	81 30       	cpi	r24, 0x01	; 1
     bba:	21 f0       	breq	.+8      	; 0xbc4 <DIO_u8SetPinDirection+0x3c>
     bbc:	8c 81       	ldd	r24, Y+4	; 0x04
     bbe:	88 23       	and	r24, r24
     bc0:	09 f0       	breq	.+2      	; 0xbc4 <DIO_u8SetPinDirection+0x3c>
     bc2:	01 c1       	rjmp	.+514    	; 0xdc6 <DIO_u8SetPinDirection+0x23e>
	{

		switch (Copy_u8PortId)
     bc4:	8a 81       	ldd	r24, Y+2	; 0x02
     bc6:	28 2f       	mov	r18, r24
     bc8:	30 e0       	ldi	r19, 0x00	; 0
     bca:	3e 87       	std	Y+14, r19	; 0x0e
     bcc:	2d 87       	std	Y+13, r18	; 0x0d
     bce:	8d 85       	ldd	r24, Y+13	; 0x0d
     bd0:	9e 85       	ldd	r25, Y+14	; 0x0e
     bd2:	81 30       	cpi	r24, 0x01	; 1
     bd4:	91 05       	cpc	r25, r1
     bd6:	09 f4       	brne	.+2      	; 0xbda <DIO_u8SetPinDirection+0x52>
     bd8:	4f c0       	rjmp	.+158    	; 0xc78 <DIO_u8SetPinDirection+0xf0>
     bda:	2d 85       	ldd	r18, Y+13	; 0x0d
     bdc:	3e 85       	ldd	r19, Y+14	; 0x0e
     bde:	22 30       	cpi	r18, 0x02	; 2
     be0:	31 05       	cpc	r19, r1
     be2:	2c f4       	brge	.+10     	; 0xbee <DIO_u8SetPinDirection+0x66>
     be4:	8d 85       	ldd	r24, Y+13	; 0x0d
     be6:	9e 85       	ldd	r25, Y+14	; 0x0e
     be8:	00 97       	sbiw	r24, 0x00	; 0
     bea:	71 f0       	breq	.+28     	; 0xc08 <DIO_u8SetPinDirection+0x80>
     bec:	ed c0       	rjmp	.+474    	; 0xdc8 <DIO_u8SetPinDirection+0x240>
     bee:	2d 85       	ldd	r18, Y+13	; 0x0d
     bf0:	3e 85       	ldd	r19, Y+14	; 0x0e
     bf2:	22 30       	cpi	r18, 0x02	; 2
     bf4:	31 05       	cpc	r19, r1
     bf6:	09 f4       	brne	.+2      	; 0xbfa <DIO_u8SetPinDirection+0x72>
     bf8:	77 c0       	rjmp	.+238    	; 0xce8 <DIO_u8SetPinDirection+0x160>
     bfa:	8d 85       	ldd	r24, Y+13	; 0x0d
     bfc:	9e 85       	ldd	r25, Y+14	; 0x0e
     bfe:	83 30       	cpi	r24, 0x03	; 3
     c00:	91 05       	cpc	r25, r1
     c02:	09 f4       	brne	.+2      	; 0xc06 <DIO_u8SetPinDirection+0x7e>
     c04:	a9 c0       	rjmp	.+338    	; 0xd58 <DIO_u8SetPinDirection+0x1d0>
     c06:	e0 c0       	rjmp	.+448    	; 0xdc8 <DIO_u8SetPinDirection+0x240>
		{
		case DIO_u8_PORTA:
			switch (Copy_u8PinDirection)
     c08:	8c 81       	ldd	r24, Y+4	; 0x04
     c0a:	28 2f       	mov	r18, r24
     c0c:	30 e0       	ldi	r19, 0x00	; 0
     c0e:	3c 87       	std	Y+12, r19	; 0x0c
     c10:	2b 87       	std	Y+11, r18	; 0x0b
     c12:	8b 85       	ldd	r24, Y+11	; 0x0b
     c14:	9c 85       	ldd	r25, Y+12	; 0x0c
     c16:	00 97       	sbiw	r24, 0x00	; 0
     c18:	d1 f0       	breq	.+52     	; 0xc4e <DIO_u8SetPinDirection+0xc6>
     c1a:	2b 85       	ldd	r18, Y+11	; 0x0b
     c1c:	3c 85       	ldd	r19, Y+12	; 0x0c
     c1e:	21 30       	cpi	r18, 0x01	; 1
     c20:	31 05       	cpc	r19, r1
     c22:	09 f0       	breq	.+2      	; 0xc26 <DIO_u8SetPinDirection+0x9e>
     c24:	d1 c0       	rjmp	.+418    	; 0xdc8 <DIO_u8SetPinDirection+0x240>
			{
			case DIO_u8_OUTPUT:
				SET_BIT(DIO_u8_DDRA_REG, Copy_u8PinId);
     c26:	aa e3       	ldi	r26, 0x3A	; 58
     c28:	b0 e0       	ldi	r27, 0x00	; 0
     c2a:	ea e3       	ldi	r30, 0x3A	; 58
     c2c:	f0 e0       	ldi	r31, 0x00	; 0
     c2e:	80 81       	ld	r24, Z
     c30:	48 2f       	mov	r20, r24
     c32:	8b 81       	ldd	r24, Y+3	; 0x03
     c34:	28 2f       	mov	r18, r24
     c36:	30 e0       	ldi	r19, 0x00	; 0
     c38:	81 e0       	ldi	r24, 0x01	; 1
     c3a:	90 e0       	ldi	r25, 0x00	; 0
     c3c:	02 2e       	mov	r0, r18
     c3e:	02 c0       	rjmp	.+4      	; 0xc44 <DIO_u8SetPinDirection+0xbc>
     c40:	88 0f       	add	r24, r24
     c42:	99 1f       	adc	r25, r25
     c44:	0a 94       	dec	r0
     c46:	e2 f7       	brpl	.-8      	; 0xc40 <DIO_u8SetPinDirection+0xb8>
     c48:	84 2b       	or	r24, r20
     c4a:	8c 93       	st	X, r24
     c4c:	bd c0       	rjmp	.+378    	; 0xdc8 <DIO_u8SetPinDirection+0x240>
				break;

			case DIO_u8_INPUT:
				CLR_BIT(DIO_u8_DDRA_REG, Copy_u8PinId);
     c4e:	aa e3       	ldi	r26, 0x3A	; 58
     c50:	b0 e0       	ldi	r27, 0x00	; 0
     c52:	ea e3       	ldi	r30, 0x3A	; 58
     c54:	f0 e0       	ldi	r31, 0x00	; 0
     c56:	80 81       	ld	r24, Z
     c58:	48 2f       	mov	r20, r24
     c5a:	8b 81       	ldd	r24, Y+3	; 0x03
     c5c:	28 2f       	mov	r18, r24
     c5e:	30 e0       	ldi	r19, 0x00	; 0
     c60:	81 e0       	ldi	r24, 0x01	; 1
     c62:	90 e0       	ldi	r25, 0x00	; 0
     c64:	02 2e       	mov	r0, r18
     c66:	02 c0       	rjmp	.+4      	; 0xc6c <DIO_u8SetPinDirection+0xe4>
     c68:	88 0f       	add	r24, r24
     c6a:	99 1f       	adc	r25, r25
     c6c:	0a 94       	dec	r0
     c6e:	e2 f7       	brpl	.-8      	; 0xc68 <DIO_u8SetPinDirection+0xe0>
     c70:	80 95       	com	r24
     c72:	84 23       	and	r24, r20
     c74:	8c 93       	st	X, r24
     c76:	a8 c0       	rjmp	.+336    	; 0xdc8 <DIO_u8SetPinDirection+0x240>
				break;
			}
			break;

		case DIO_u8_PORTB:
			switch (Copy_u8PinDirection)
     c78:	8c 81       	ldd	r24, Y+4	; 0x04
     c7a:	28 2f       	mov	r18, r24
     c7c:	30 e0       	ldi	r19, 0x00	; 0
     c7e:	3a 87       	std	Y+10, r19	; 0x0a
     c80:	29 87       	std	Y+9, r18	; 0x09
     c82:	89 85       	ldd	r24, Y+9	; 0x09
     c84:	9a 85       	ldd	r25, Y+10	; 0x0a
     c86:	00 97       	sbiw	r24, 0x00	; 0
     c88:	d1 f0       	breq	.+52     	; 0xcbe <DIO_u8SetPinDirection+0x136>
     c8a:	29 85       	ldd	r18, Y+9	; 0x09
     c8c:	3a 85       	ldd	r19, Y+10	; 0x0a
     c8e:	21 30       	cpi	r18, 0x01	; 1
     c90:	31 05       	cpc	r19, r1
     c92:	09 f0       	breq	.+2      	; 0xc96 <DIO_u8SetPinDirection+0x10e>
     c94:	99 c0       	rjmp	.+306    	; 0xdc8 <DIO_u8SetPinDirection+0x240>
			{
			case DIO_u8_OUTPUT:
				SET_BIT(DIO_u8_DDRB_REG, Copy_u8PinId);
     c96:	a7 e3       	ldi	r26, 0x37	; 55
     c98:	b0 e0       	ldi	r27, 0x00	; 0
     c9a:	e7 e3       	ldi	r30, 0x37	; 55
     c9c:	f0 e0       	ldi	r31, 0x00	; 0
     c9e:	80 81       	ld	r24, Z
     ca0:	48 2f       	mov	r20, r24
     ca2:	8b 81       	ldd	r24, Y+3	; 0x03
     ca4:	28 2f       	mov	r18, r24
     ca6:	30 e0       	ldi	r19, 0x00	; 0
     ca8:	81 e0       	ldi	r24, 0x01	; 1
     caa:	90 e0       	ldi	r25, 0x00	; 0
     cac:	02 2e       	mov	r0, r18
     cae:	02 c0       	rjmp	.+4      	; 0xcb4 <DIO_u8SetPinDirection+0x12c>
     cb0:	88 0f       	add	r24, r24
     cb2:	99 1f       	adc	r25, r25
     cb4:	0a 94       	dec	r0
     cb6:	e2 f7       	brpl	.-8      	; 0xcb0 <DIO_u8SetPinDirection+0x128>
     cb8:	84 2b       	or	r24, r20
     cba:	8c 93       	st	X, r24
     cbc:	85 c0       	rjmp	.+266    	; 0xdc8 <DIO_u8SetPinDirection+0x240>
				break;

			case DIO_u8_INPUT:
				CLR_BIT(DIO_u8_DDRB_REG, Copy_u8PinId);
     cbe:	a7 e3       	ldi	r26, 0x37	; 55
     cc0:	b0 e0       	ldi	r27, 0x00	; 0
     cc2:	e7 e3       	ldi	r30, 0x37	; 55
     cc4:	f0 e0       	ldi	r31, 0x00	; 0
     cc6:	80 81       	ld	r24, Z
     cc8:	48 2f       	mov	r20, r24
     cca:	8b 81       	ldd	r24, Y+3	; 0x03
     ccc:	28 2f       	mov	r18, r24
     cce:	30 e0       	ldi	r19, 0x00	; 0
     cd0:	81 e0       	ldi	r24, 0x01	; 1
     cd2:	90 e0       	ldi	r25, 0x00	; 0
     cd4:	02 2e       	mov	r0, r18
     cd6:	02 c0       	rjmp	.+4      	; 0xcdc <DIO_u8SetPinDirection+0x154>
     cd8:	88 0f       	add	r24, r24
     cda:	99 1f       	adc	r25, r25
     cdc:	0a 94       	dec	r0
     cde:	e2 f7       	brpl	.-8      	; 0xcd8 <DIO_u8SetPinDirection+0x150>
     ce0:	80 95       	com	r24
     ce2:	84 23       	and	r24, r20
     ce4:	8c 93       	st	X, r24
     ce6:	70 c0       	rjmp	.+224    	; 0xdc8 <DIO_u8SetPinDirection+0x240>
				break;
			}
			break;

		case DIO_u8_PORTC:
			switch (Copy_u8PinDirection)
     ce8:	8c 81       	ldd	r24, Y+4	; 0x04
     cea:	28 2f       	mov	r18, r24
     cec:	30 e0       	ldi	r19, 0x00	; 0
     cee:	38 87       	std	Y+8, r19	; 0x08
     cf0:	2f 83       	std	Y+7, r18	; 0x07
     cf2:	8f 81       	ldd	r24, Y+7	; 0x07
     cf4:	98 85       	ldd	r25, Y+8	; 0x08
     cf6:	00 97       	sbiw	r24, 0x00	; 0
     cf8:	d1 f0       	breq	.+52     	; 0xd2e <DIO_u8SetPinDirection+0x1a6>
     cfa:	2f 81       	ldd	r18, Y+7	; 0x07
     cfc:	38 85       	ldd	r19, Y+8	; 0x08
     cfe:	21 30       	cpi	r18, 0x01	; 1
     d00:	31 05       	cpc	r19, r1
     d02:	09 f0       	breq	.+2      	; 0xd06 <DIO_u8SetPinDirection+0x17e>
     d04:	61 c0       	rjmp	.+194    	; 0xdc8 <DIO_u8SetPinDirection+0x240>
			{
			case DIO_u8_OUTPUT:
				SET_BIT(DIO_u8_DDRC_REG, Copy_u8PinId);
     d06:	a4 e3       	ldi	r26, 0x34	; 52
     d08:	b0 e0       	ldi	r27, 0x00	; 0
     d0a:	e4 e3       	ldi	r30, 0x34	; 52
     d0c:	f0 e0       	ldi	r31, 0x00	; 0
     d0e:	80 81       	ld	r24, Z
     d10:	48 2f       	mov	r20, r24
     d12:	8b 81       	ldd	r24, Y+3	; 0x03
     d14:	28 2f       	mov	r18, r24
     d16:	30 e0       	ldi	r19, 0x00	; 0
     d18:	81 e0       	ldi	r24, 0x01	; 1
     d1a:	90 e0       	ldi	r25, 0x00	; 0
     d1c:	02 2e       	mov	r0, r18
     d1e:	02 c0       	rjmp	.+4      	; 0xd24 <DIO_u8SetPinDirection+0x19c>
     d20:	88 0f       	add	r24, r24
     d22:	99 1f       	adc	r25, r25
     d24:	0a 94       	dec	r0
     d26:	e2 f7       	brpl	.-8      	; 0xd20 <DIO_u8SetPinDirection+0x198>
     d28:	84 2b       	or	r24, r20
     d2a:	8c 93       	st	X, r24
     d2c:	4d c0       	rjmp	.+154    	; 0xdc8 <DIO_u8SetPinDirection+0x240>
				break;

			case DIO_u8_INPUT:
				CLR_BIT(DIO_u8_DDRC_REG, Copy_u8PinId);
     d2e:	a4 e3       	ldi	r26, 0x34	; 52
     d30:	b0 e0       	ldi	r27, 0x00	; 0
     d32:	e4 e3       	ldi	r30, 0x34	; 52
     d34:	f0 e0       	ldi	r31, 0x00	; 0
     d36:	80 81       	ld	r24, Z
     d38:	48 2f       	mov	r20, r24
     d3a:	8b 81       	ldd	r24, Y+3	; 0x03
     d3c:	28 2f       	mov	r18, r24
     d3e:	30 e0       	ldi	r19, 0x00	; 0
     d40:	81 e0       	ldi	r24, 0x01	; 1
     d42:	90 e0       	ldi	r25, 0x00	; 0
     d44:	02 2e       	mov	r0, r18
     d46:	02 c0       	rjmp	.+4      	; 0xd4c <DIO_u8SetPinDirection+0x1c4>
     d48:	88 0f       	add	r24, r24
     d4a:	99 1f       	adc	r25, r25
     d4c:	0a 94       	dec	r0
     d4e:	e2 f7       	brpl	.-8      	; 0xd48 <DIO_u8SetPinDirection+0x1c0>
     d50:	80 95       	com	r24
     d52:	84 23       	and	r24, r20
     d54:	8c 93       	st	X, r24
     d56:	38 c0       	rjmp	.+112    	; 0xdc8 <DIO_u8SetPinDirection+0x240>
				break;
			}
			break;

		case DIO_u8_PORTD:
			switch (Copy_u8PinDirection)
     d58:	8c 81       	ldd	r24, Y+4	; 0x04
     d5a:	28 2f       	mov	r18, r24
     d5c:	30 e0       	ldi	r19, 0x00	; 0
     d5e:	3e 83       	std	Y+6, r19	; 0x06
     d60:	2d 83       	std	Y+5, r18	; 0x05
     d62:	8d 81       	ldd	r24, Y+5	; 0x05
     d64:	9e 81       	ldd	r25, Y+6	; 0x06
     d66:	00 97       	sbiw	r24, 0x00	; 0
     d68:	c9 f0       	breq	.+50     	; 0xd9c <DIO_u8SetPinDirection+0x214>
     d6a:	2d 81       	ldd	r18, Y+5	; 0x05
     d6c:	3e 81       	ldd	r19, Y+6	; 0x06
     d6e:	21 30       	cpi	r18, 0x01	; 1
     d70:	31 05       	cpc	r19, r1
     d72:	51 f5       	brne	.+84     	; 0xdc8 <DIO_u8SetPinDirection+0x240>
			{
			case DIO_u8_OUTPUT:
				SET_BIT(DIO_u8_DDRD_REG, Copy_u8PinId);
     d74:	a1 e3       	ldi	r26, 0x31	; 49
     d76:	b0 e0       	ldi	r27, 0x00	; 0
     d78:	e1 e3       	ldi	r30, 0x31	; 49
     d7a:	f0 e0       	ldi	r31, 0x00	; 0
     d7c:	80 81       	ld	r24, Z
     d7e:	48 2f       	mov	r20, r24
     d80:	8b 81       	ldd	r24, Y+3	; 0x03
     d82:	28 2f       	mov	r18, r24
     d84:	30 e0       	ldi	r19, 0x00	; 0
     d86:	81 e0       	ldi	r24, 0x01	; 1
     d88:	90 e0       	ldi	r25, 0x00	; 0
     d8a:	02 2e       	mov	r0, r18
     d8c:	02 c0       	rjmp	.+4      	; 0xd92 <DIO_u8SetPinDirection+0x20a>
     d8e:	88 0f       	add	r24, r24
     d90:	99 1f       	adc	r25, r25
     d92:	0a 94       	dec	r0
     d94:	e2 f7       	brpl	.-8      	; 0xd8e <DIO_u8SetPinDirection+0x206>
     d96:	84 2b       	or	r24, r20
     d98:	8c 93       	st	X, r24
     d9a:	16 c0       	rjmp	.+44     	; 0xdc8 <DIO_u8SetPinDirection+0x240>
				break;

			case DIO_u8_INPUT:
				CLR_BIT(DIO_u8_DDRD_REG, Copy_u8PinId);
     d9c:	a1 e3       	ldi	r26, 0x31	; 49
     d9e:	b0 e0       	ldi	r27, 0x00	; 0
     da0:	e1 e3       	ldi	r30, 0x31	; 49
     da2:	f0 e0       	ldi	r31, 0x00	; 0
     da4:	80 81       	ld	r24, Z
     da6:	48 2f       	mov	r20, r24
     da8:	8b 81       	ldd	r24, Y+3	; 0x03
     daa:	28 2f       	mov	r18, r24
     dac:	30 e0       	ldi	r19, 0x00	; 0
     dae:	81 e0       	ldi	r24, 0x01	; 1
     db0:	90 e0       	ldi	r25, 0x00	; 0
     db2:	02 2e       	mov	r0, r18
     db4:	02 c0       	rjmp	.+4      	; 0xdba <DIO_u8SetPinDirection+0x232>
     db6:	88 0f       	add	r24, r24
     db8:	99 1f       	adc	r25, r25
     dba:	0a 94       	dec	r0
     dbc:	e2 f7       	brpl	.-8      	; 0xdb6 <DIO_u8SetPinDirection+0x22e>
     dbe:	80 95       	com	r24
     dc0:	84 23       	and	r24, r20
     dc2:	8c 93       	st	X, r24
     dc4:	01 c0       	rjmp	.+2      	; 0xdc8 <DIO_u8SetPinDirection+0x240>
		}
	}

	else
	{
		Local_u8ErrorState = STD_TYPES_NOK;
     dc6:	19 82       	std	Y+1, r1	; 0x01
	}

	return Local_u8ErrorState;
     dc8:	89 81       	ldd	r24, Y+1	; 0x01
}
     dca:	2e 96       	adiw	r28, 0x0e	; 14
     dcc:	0f b6       	in	r0, 0x3f	; 63
     dce:	f8 94       	cli
     dd0:	de bf       	out	0x3e, r29	; 62
     dd2:	0f be       	out	0x3f, r0	; 63
     dd4:	cd bf       	out	0x3d, r28	; 61
     dd6:	cf 91       	pop	r28
     dd8:	df 91       	pop	r29
     dda:	08 95       	ret

00000ddc <DIO_u8SetPinValue>:

u8 DIO_u8SetPinValue(u8 Copy_u8PortId, u8 Copy_u8PinId, u8 Copy_u8PinValue)
{
     ddc:	df 93       	push	r29
     dde:	cf 93       	push	r28
     de0:	cd b7       	in	r28, 0x3d	; 61
     de2:	de b7       	in	r29, 0x3e	; 62
     de4:	2f 97       	sbiw	r28, 0x0f	; 15
     de6:	0f b6       	in	r0, 0x3f	; 63
     de8:	f8 94       	cli
     dea:	de bf       	out	0x3e, r29	; 62
     dec:	0f be       	out	0x3f, r0	; 63
     dee:	cd bf       	out	0x3d, r28	; 61
     df0:	8b 83       	std	Y+3, r24	; 0x03
     df2:	6c 83       	std	Y+4, r22	; 0x04
     df4:	4d 83       	std	Y+5, r20	; 0x05
	u8 Local_u8ErrorState = STD_TYPES_OK;
     df6:	81 e0       	ldi	r24, 0x01	; 1
     df8:	8a 83       	std	Y+2, r24	; 0x02

	if (Copy_u8PortId <= DIO_u8_PORTD && Copy_u8PinId <= DIO_u8_PIN7 && (Copy_u8PinValue == DIO_u8_LOW || Copy_u8PinValue == DIO_u8_HIGH))
     dfa:	8b 81       	ldd	r24, Y+3	; 0x03
     dfc:	84 30       	cpi	r24, 0x04	; 4
     dfe:	08 f0       	brcs	.+2      	; 0xe02 <DIO_u8SetPinValue+0x26>
     e00:	13 c1       	rjmp	.+550    	; 0x1028 <DIO_u8SetPinValue+0x24c>
     e02:	8c 81       	ldd	r24, Y+4	; 0x04
     e04:	88 30       	cpi	r24, 0x08	; 8
     e06:	08 f0       	brcs	.+2      	; 0xe0a <DIO_u8SetPinValue+0x2e>
     e08:	0f c1       	rjmp	.+542    	; 0x1028 <DIO_u8SetPinValue+0x24c>
     e0a:	8d 81       	ldd	r24, Y+5	; 0x05
     e0c:	88 23       	and	r24, r24
     e0e:	21 f0       	breq	.+8      	; 0xe18 <DIO_u8SetPinValue+0x3c>
     e10:	8d 81       	ldd	r24, Y+5	; 0x05
     e12:	81 30       	cpi	r24, 0x01	; 1
     e14:	09 f0       	breq	.+2      	; 0xe18 <DIO_u8SetPinValue+0x3c>
     e16:	08 c1       	rjmp	.+528    	; 0x1028 <DIO_u8SetPinValue+0x24c>
	{
		switch (Copy_u8PortId)
     e18:	8b 81       	ldd	r24, Y+3	; 0x03
     e1a:	28 2f       	mov	r18, r24
     e1c:	30 e0       	ldi	r19, 0x00	; 0
     e1e:	3f 87       	std	Y+15, r19	; 0x0f
     e20:	2e 87       	std	Y+14, r18	; 0x0e
     e22:	8e 85       	ldd	r24, Y+14	; 0x0e
     e24:	9f 85       	ldd	r25, Y+15	; 0x0f
     e26:	81 30       	cpi	r24, 0x01	; 1
     e28:	91 05       	cpc	r25, r1
     e2a:	09 f4       	brne	.+2      	; 0xe2e <DIO_u8SetPinValue+0x52>
     e2c:	50 c0       	rjmp	.+160    	; 0xece <DIO_u8SetPinValue+0xf2>
     e2e:	2e 85       	ldd	r18, Y+14	; 0x0e
     e30:	3f 85       	ldd	r19, Y+15	; 0x0f
     e32:	22 30       	cpi	r18, 0x02	; 2
     e34:	31 05       	cpc	r19, r1
     e36:	2c f4       	brge	.+10     	; 0xe42 <DIO_u8SetPinValue+0x66>
     e38:	8e 85       	ldd	r24, Y+14	; 0x0e
     e3a:	9f 85       	ldd	r25, Y+15	; 0x0f
     e3c:	00 97       	sbiw	r24, 0x00	; 0
     e3e:	71 f0       	breq	.+28     	; 0xe5c <DIO_u8SetPinValue+0x80>
     e40:	f4 c0       	rjmp	.+488    	; 0x102a <DIO_u8SetPinValue+0x24e>
     e42:	2e 85       	ldd	r18, Y+14	; 0x0e
     e44:	3f 85       	ldd	r19, Y+15	; 0x0f
     e46:	22 30       	cpi	r18, 0x02	; 2
     e48:	31 05       	cpc	r19, r1
     e4a:	09 f4       	brne	.+2      	; 0xe4e <DIO_u8SetPinValue+0x72>
     e4c:	79 c0       	rjmp	.+242    	; 0xf40 <DIO_u8SetPinValue+0x164>
     e4e:	8e 85       	ldd	r24, Y+14	; 0x0e
     e50:	9f 85       	ldd	r25, Y+15	; 0x0f
     e52:	83 30       	cpi	r24, 0x03	; 3
     e54:	91 05       	cpc	r25, r1
     e56:	09 f4       	brne	.+2      	; 0xe5a <DIO_u8SetPinValue+0x7e>
     e58:	ad c0       	rjmp	.+346    	; 0xfb4 <DIO_u8SetPinValue+0x1d8>
     e5a:	e7 c0       	rjmp	.+462    	; 0x102a <DIO_u8SetPinValue+0x24e>
		{
		case DIO_u8_PORTA:
			switch (Copy_u8PinValue)
     e5c:	8d 81       	ldd	r24, Y+5	; 0x05
     e5e:	28 2f       	mov	r18, r24
     e60:	30 e0       	ldi	r19, 0x00	; 0
     e62:	3d 87       	std	Y+13, r19	; 0x0d
     e64:	2c 87       	std	Y+12, r18	; 0x0c
     e66:	8c 85       	ldd	r24, Y+12	; 0x0c
     e68:	9d 85       	ldd	r25, Y+13	; 0x0d
     e6a:	00 97       	sbiw	r24, 0x00	; 0
     e6c:	c9 f0       	breq	.+50     	; 0xea0 <DIO_u8SetPinValue+0xc4>
     e6e:	2c 85       	ldd	r18, Y+12	; 0x0c
     e70:	3d 85       	ldd	r19, Y+13	; 0x0d
     e72:	21 30       	cpi	r18, 0x01	; 1
     e74:	31 05       	cpc	r19, r1
     e76:	49 f5       	brne	.+82     	; 0xeca <DIO_u8SetPinValue+0xee>
			{

			case DIO_u8_HIGH:
				SET_BIT(DIO_u8_PORTA_REG, Copy_u8PinId);
     e78:	ab e3       	ldi	r26, 0x3B	; 59
     e7a:	b0 e0       	ldi	r27, 0x00	; 0
     e7c:	eb e3       	ldi	r30, 0x3B	; 59
     e7e:	f0 e0       	ldi	r31, 0x00	; 0
     e80:	80 81       	ld	r24, Z
     e82:	48 2f       	mov	r20, r24
     e84:	8c 81       	ldd	r24, Y+4	; 0x04
     e86:	28 2f       	mov	r18, r24
     e88:	30 e0       	ldi	r19, 0x00	; 0
     e8a:	81 e0       	ldi	r24, 0x01	; 1
     e8c:	90 e0       	ldi	r25, 0x00	; 0
     e8e:	02 2e       	mov	r0, r18
     e90:	02 c0       	rjmp	.+4      	; 0xe96 <DIO_u8SetPinValue+0xba>
     e92:	88 0f       	add	r24, r24
     e94:	99 1f       	adc	r25, r25
     e96:	0a 94       	dec	r0
     e98:	e2 f7       	brpl	.-8      	; 0xe92 <DIO_u8SetPinValue+0xb6>
     e9a:	84 2b       	or	r24, r20
     e9c:	8c 93       	st	X, r24
     e9e:	c5 c0       	rjmp	.+394    	; 0x102a <DIO_u8SetPinValue+0x24e>
				break;

			case DIO_u8_LOW:
				CLR_BIT(DIO_u8_PORTA_REG, Copy_u8PinId);
     ea0:	ab e3       	ldi	r26, 0x3B	; 59
     ea2:	b0 e0       	ldi	r27, 0x00	; 0
     ea4:	eb e3       	ldi	r30, 0x3B	; 59
     ea6:	f0 e0       	ldi	r31, 0x00	; 0
     ea8:	80 81       	ld	r24, Z
     eaa:	48 2f       	mov	r20, r24
     eac:	8c 81       	ldd	r24, Y+4	; 0x04
     eae:	28 2f       	mov	r18, r24
     eb0:	30 e0       	ldi	r19, 0x00	; 0
     eb2:	81 e0       	ldi	r24, 0x01	; 1
     eb4:	90 e0       	ldi	r25, 0x00	; 0
     eb6:	02 2e       	mov	r0, r18
     eb8:	02 c0       	rjmp	.+4      	; 0xebe <DIO_u8SetPinValue+0xe2>
     eba:	88 0f       	add	r24, r24
     ebc:	99 1f       	adc	r25, r25
     ebe:	0a 94       	dec	r0
     ec0:	e2 f7       	brpl	.-8      	; 0xeba <DIO_u8SetPinValue+0xde>
     ec2:	80 95       	com	r24
     ec4:	84 23       	and	r24, r20
     ec6:	8c 93       	st	X, r24
     ec8:	b0 c0       	rjmp	.+352    	; 0x102a <DIO_u8SetPinValue+0x24e>
				break;
			default:
				Local_u8ErrorState = STD_TYPES_NOK;
     eca:	1a 82       	std	Y+2, r1	; 0x02
     ecc:	ae c0       	rjmp	.+348    	; 0x102a <DIO_u8SetPinValue+0x24e>
			}
			break;

		case DIO_u8_PORTB:
			switch (Copy_u8PinValue)
     ece:	8d 81       	ldd	r24, Y+5	; 0x05
     ed0:	28 2f       	mov	r18, r24
     ed2:	30 e0       	ldi	r19, 0x00	; 0
     ed4:	3b 87       	std	Y+11, r19	; 0x0b
     ed6:	2a 87       	std	Y+10, r18	; 0x0a
     ed8:	8a 85       	ldd	r24, Y+10	; 0x0a
     eda:	9b 85       	ldd	r25, Y+11	; 0x0b
     edc:	00 97       	sbiw	r24, 0x00	; 0
     ede:	c9 f0       	breq	.+50     	; 0xf12 <DIO_u8SetPinValue+0x136>
     ee0:	2a 85       	ldd	r18, Y+10	; 0x0a
     ee2:	3b 85       	ldd	r19, Y+11	; 0x0b
     ee4:	21 30       	cpi	r18, 0x01	; 1
     ee6:	31 05       	cpc	r19, r1
     ee8:	49 f5       	brne	.+82     	; 0xf3c <DIO_u8SetPinValue+0x160>
			{

			case DIO_u8_HIGH:
				SET_BIT(DIO_u8_PORTB_REG, Copy_u8PinId);
     eea:	a8 e3       	ldi	r26, 0x38	; 56
     eec:	b0 e0       	ldi	r27, 0x00	; 0
     eee:	e8 e3       	ldi	r30, 0x38	; 56
     ef0:	f0 e0       	ldi	r31, 0x00	; 0
     ef2:	80 81       	ld	r24, Z
     ef4:	48 2f       	mov	r20, r24
     ef6:	8c 81       	ldd	r24, Y+4	; 0x04
     ef8:	28 2f       	mov	r18, r24
     efa:	30 e0       	ldi	r19, 0x00	; 0
     efc:	81 e0       	ldi	r24, 0x01	; 1
     efe:	90 e0       	ldi	r25, 0x00	; 0
     f00:	02 2e       	mov	r0, r18
     f02:	02 c0       	rjmp	.+4      	; 0xf08 <DIO_u8SetPinValue+0x12c>
     f04:	88 0f       	add	r24, r24
     f06:	99 1f       	adc	r25, r25
     f08:	0a 94       	dec	r0
     f0a:	e2 f7       	brpl	.-8      	; 0xf04 <DIO_u8SetPinValue+0x128>
     f0c:	84 2b       	or	r24, r20
     f0e:	8c 93       	st	X, r24
     f10:	8c c0       	rjmp	.+280    	; 0x102a <DIO_u8SetPinValue+0x24e>
				break;
			case DIO_u8_LOW:
				CLR_BIT(DIO_u8_PORTB_REG, Copy_u8PinId);
     f12:	a8 e3       	ldi	r26, 0x38	; 56
     f14:	b0 e0       	ldi	r27, 0x00	; 0
     f16:	e8 e3       	ldi	r30, 0x38	; 56
     f18:	f0 e0       	ldi	r31, 0x00	; 0
     f1a:	80 81       	ld	r24, Z
     f1c:	48 2f       	mov	r20, r24
     f1e:	8c 81       	ldd	r24, Y+4	; 0x04
     f20:	28 2f       	mov	r18, r24
     f22:	30 e0       	ldi	r19, 0x00	; 0
     f24:	81 e0       	ldi	r24, 0x01	; 1
     f26:	90 e0       	ldi	r25, 0x00	; 0
     f28:	02 2e       	mov	r0, r18
     f2a:	02 c0       	rjmp	.+4      	; 0xf30 <DIO_u8SetPinValue+0x154>
     f2c:	88 0f       	add	r24, r24
     f2e:	99 1f       	adc	r25, r25
     f30:	0a 94       	dec	r0
     f32:	e2 f7       	brpl	.-8      	; 0xf2c <DIO_u8SetPinValue+0x150>
     f34:	80 95       	com	r24
     f36:	84 23       	and	r24, r20
     f38:	8c 93       	st	X, r24
     f3a:	77 c0       	rjmp	.+238    	; 0x102a <DIO_u8SetPinValue+0x24e>
				break;
			default:
				Local_u8ErrorState = STD_TYPES_NOK;
     f3c:	1a 82       	std	Y+2, r1	; 0x02
     f3e:	75 c0       	rjmp	.+234    	; 0x102a <DIO_u8SetPinValue+0x24e>
			}
			break;

		case DIO_u8_PORTC:
			switch (Copy_u8PinValue)
     f40:	8d 81       	ldd	r24, Y+5	; 0x05
     f42:	28 2f       	mov	r18, r24
     f44:	30 e0       	ldi	r19, 0x00	; 0
     f46:	39 87       	std	Y+9, r19	; 0x09
     f48:	28 87       	std	Y+8, r18	; 0x08
     f4a:	88 85       	ldd	r24, Y+8	; 0x08
     f4c:	99 85       	ldd	r25, Y+9	; 0x09
     f4e:	00 97       	sbiw	r24, 0x00	; 0
     f50:	31 f0       	breq	.+12     	; 0xf5e <DIO_u8SetPinValue+0x182>
     f52:	28 85       	ldd	r18, Y+8	; 0x08
     f54:	39 85       	ldd	r19, Y+9	; 0x09
     f56:	21 30       	cpi	r18, 0x01	; 1
     f58:	31 05       	cpc	r19, r1
     f5a:	b1 f0       	breq	.+44     	; 0xf88 <DIO_u8SetPinValue+0x1ac>
     f5c:	29 c0       	rjmp	.+82     	; 0xfb0 <DIO_u8SetPinValue+0x1d4>
			{
			case DIO_u8_LOW:
				CLR_BIT(DIO_u8_PORTC_REG, Copy_u8PinId);
     f5e:	a5 e3       	ldi	r26, 0x35	; 53
     f60:	b0 e0       	ldi	r27, 0x00	; 0
     f62:	e5 e3       	ldi	r30, 0x35	; 53
     f64:	f0 e0       	ldi	r31, 0x00	; 0
     f66:	80 81       	ld	r24, Z
     f68:	48 2f       	mov	r20, r24
     f6a:	8c 81       	ldd	r24, Y+4	; 0x04
     f6c:	28 2f       	mov	r18, r24
     f6e:	30 e0       	ldi	r19, 0x00	; 0
     f70:	81 e0       	ldi	r24, 0x01	; 1
     f72:	90 e0       	ldi	r25, 0x00	; 0
     f74:	02 2e       	mov	r0, r18
     f76:	02 c0       	rjmp	.+4      	; 0xf7c <DIO_u8SetPinValue+0x1a0>
     f78:	88 0f       	add	r24, r24
     f7a:	99 1f       	adc	r25, r25
     f7c:	0a 94       	dec	r0
     f7e:	e2 f7       	brpl	.-8      	; 0xf78 <DIO_u8SetPinValue+0x19c>
     f80:	80 95       	com	r24
     f82:	84 23       	and	r24, r20
     f84:	8c 93       	st	X, r24
     f86:	51 c0       	rjmp	.+162    	; 0x102a <DIO_u8SetPinValue+0x24e>
				break;

			case DIO_u8_HIGH:
				SET_BIT(DIO_u8_PORTC_REG, Copy_u8PinId);
     f88:	a5 e3       	ldi	r26, 0x35	; 53
     f8a:	b0 e0       	ldi	r27, 0x00	; 0
     f8c:	e5 e3       	ldi	r30, 0x35	; 53
     f8e:	f0 e0       	ldi	r31, 0x00	; 0
     f90:	80 81       	ld	r24, Z
     f92:	48 2f       	mov	r20, r24
     f94:	8c 81       	ldd	r24, Y+4	; 0x04
     f96:	28 2f       	mov	r18, r24
     f98:	30 e0       	ldi	r19, 0x00	; 0
     f9a:	81 e0       	ldi	r24, 0x01	; 1
     f9c:	90 e0       	ldi	r25, 0x00	; 0
     f9e:	02 2e       	mov	r0, r18
     fa0:	02 c0       	rjmp	.+4      	; 0xfa6 <DIO_u8SetPinValue+0x1ca>
     fa2:	88 0f       	add	r24, r24
     fa4:	99 1f       	adc	r25, r25
     fa6:	0a 94       	dec	r0
     fa8:	e2 f7       	brpl	.-8      	; 0xfa2 <DIO_u8SetPinValue+0x1c6>
     faa:	84 2b       	or	r24, r20
     fac:	8c 93       	st	X, r24
     fae:	3d c0       	rjmp	.+122    	; 0x102a <DIO_u8SetPinValue+0x24e>
				break;
			default:
				Local_u8ErrorState = STD_TYPES_NOK;
     fb0:	1a 82       	std	Y+2, r1	; 0x02
     fb2:	3b c0       	rjmp	.+118    	; 0x102a <DIO_u8SetPinValue+0x24e>
			}
			break;

		case DIO_u8_PORTD:
			switch (Copy_u8PinValue)
     fb4:	8d 81       	ldd	r24, Y+5	; 0x05
     fb6:	28 2f       	mov	r18, r24
     fb8:	30 e0       	ldi	r19, 0x00	; 0
     fba:	3f 83       	std	Y+7, r19	; 0x07
     fbc:	2e 83       	std	Y+6, r18	; 0x06
     fbe:	8e 81       	ldd	r24, Y+6	; 0x06
     fc0:	9f 81       	ldd	r25, Y+7	; 0x07
     fc2:	00 97       	sbiw	r24, 0x00	; 0
     fc4:	31 f0       	breq	.+12     	; 0xfd2 <DIO_u8SetPinValue+0x1f6>
     fc6:	2e 81       	ldd	r18, Y+6	; 0x06
     fc8:	3f 81       	ldd	r19, Y+7	; 0x07
     fca:	21 30       	cpi	r18, 0x01	; 1
     fcc:	31 05       	cpc	r19, r1
     fce:	b1 f0       	breq	.+44     	; 0xffc <DIO_u8SetPinValue+0x220>
     fd0:	29 c0       	rjmp	.+82     	; 0x1024 <DIO_u8SetPinValue+0x248>
			{
			case DIO_u8_LOW:
				CLR_BIT(DIO_u8_PORTC_REG, Copy_u8PinId);
     fd2:	a5 e3       	ldi	r26, 0x35	; 53
     fd4:	b0 e0       	ldi	r27, 0x00	; 0
     fd6:	e5 e3       	ldi	r30, 0x35	; 53
     fd8:	f0 e0       	ldi	r31, 0x00	; 0
     fda:	80 81       	ld	r24, Z
     fdc:	48 2f       	mov	r20, r24
     fde:	8c 81       	ldd	r24, Y+4	; 0x04
     fe0:	28 2f       	mov	r18, r24
     fe2:	30 e0       	ldi	r19, 0x00	; 0
     fe4:	81 e0       	ldi	r24, 0x01	; 1
     fe6:	90 e0       	ldi	r25, 0x00	; 0
     fe8:	02 2e       	mov	r0, r18
     fea:	02 c0       	rjmp	.+4      	; 0xff0 <DIO_u8SetPinValue+0x214>
     fec:	88 0f       	add	r24, r24
     fee:	99 1f       	adc	r25, r25
     ff0:	0a 94       	dec	r0
     ff2:	e2 f7       	brpl	.-8      	; 0xfec <DIO_u8SetPinValue+0x210>
     ff4:	80 95       	com	r24
     ff6:	84 23       	and	r24, r20
     ff8:	8c 93       	st	X, r24
     ffa:	17 c0       	rjmp	.+46     	; 0x102a <DIO_u8SetPinValue+0x24e>
				break;

			case DIO_u8_HIGH:
				SET_BIT(DIO_u8_PORTD_REG, Copy_u8PinId);
     ffc:	a2 e3       	ldi	r26, 0x32	; 50
     ffe:	b0 e0       	ldi	r27, 0x00	; 0
    1000:	e2 e3       	ldi	r30, 0x32	; 50
    1002:	f0 e0       	ldi	r31, 0x00	; 0
    1004:	80 81       	ld	r24, Z
    1006:	48 2f       	mov	r20, r24
    1008:	8c 81       	ldd	r24, Y+4	; 0x04
    100a:	28 2f       	mov	r18, r24
    100c:	30 e0       	ldi	r19, 0x00	; 0
    100e:	81 e0       	ldi	r24, 0x01	; 1
    1010:	90 e0       	ldi	r25, 0x00	; 0
    1012:	02 2e       	mov	r0, r18
    1014:	02 c0       	rjmp	.+4      	; 0x101a <DIO_u8SetPinValue+0x23e>
    1016:	88 0f       	add	r24, r24
    1018:	99 1f       	adc	r25, r25
    101a:	0a 94       	dec	r0
    101c:	e2 f7       	brpl	.-8      	; 0x1016 <DIO_u8SetPinValue+0x23a>
    101e:	84 2b       	or	r24, r20
    1020:	8c 93       	st	X, r24
    1022:	03 c0       	rjmp	.+6      	; 0x102a <DIO_u8SetPinValue+0x24e>
				break;
			default:
				Local_u8ErrorState = STD_TYPES_NOK;
    1024:	1a 82       	std	Y+2, r1	; 0x02
    1026:	01 c0       	rjmp	.+2      	; 0x102a <DIO_u8SetPinValue+0x24e>
		}
	}

	else
	{
		u8 Local_u8ErrorState = STD_TYPES_NOK;
    1028:	19 82       	std	Y+1, r1	; 0x01
	}

	return Local_u8ErrorState;
    102a:	8a 81       	ldd	r24, Y+2	; 0x02
}
    102c:	2f 96       	adiw	r28, 0x0f	; 15
    102e:	0f b6       	in	r0, 0x3f	; 63
    1030:	f8 94       	cli
    1032:	de bf       	out	0x3e, r29	; 62
    1034:	0f be       	out	0x3f, r0	; 63
    1036:	cd bf       	out	0x3d, r28	; 61
    1038:	cf 91       	pop	r28
    103a:	df 91       	pop	r29
    103c:	08 95       	ret

0000103e <DIO_u8GetPinValue>:

u8 DIO_u8GetPinValue(u8 Copy_u8PortId, u8 Copy_u8PinId, u8 *Copy_pu8ReturnedPinValue)
{
    103e:	df 93       	push	r29
    1040:	cf 93       	push	r28
    1042:	cd b7       	in	r28, 0x3d	; 61
    1044:	de b7       	in	r29, 0x3e	; 62
    1046:	28 97       	sbiw	r28, 0x08	; 8
    1048:	0f b6       	in	r0, 0x3f	; 63
    104a:	f8 94       	cli
    104c:	de bf       	out	0x3e, r29	; 62
    104e:	0f be       	out	0x3f, r0	; 63
    1050:	cd bf       	out	0x3d, r28	; 61
    1052:	8b 83       	std	Y+3, r24	; 0x03
    1054:	6c 83       	std	Y+4, r22	; 0x04
    1056:	5e 83       	std	Y+6, r21	; 0x06
    1058:	4d 83       	std	Y+5, r20	; 0x05
	u8 Local_u8ErrorState = STD_TYPES_OK;
    105a:	81 e0       	ldi	r24, 0x01	; 1
    105c:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8PinValue;

	if (Copy_u8PortId <= DIO_u8_PORTD && Copy_u8PinId <= DIO_u8_PIN7 && Copy_pu8ReturnedPinValue != NULL)
    105e:	8b 81       	ldd	r24, Y+3	; 0x03
    1060:	84 30       	cpi	r24, 0x04	; 4
    1062:	08 f0       	brcs	.+2      	; 0x1066 <DIO_u8GetPinValue+0x28>
    1064:	9f c0       	rjmp	.+318    	; 0x11a4 <DIO_u8GetPinValue+0x166>
    1066:	8c 81       	ldd	r24, Y+4	; 0x04
    1068:	88 30       	cpi	r24, 0x08	; 8
    106a:	08 f0       	brcs	.+2      	; 0x106e <DIO_u8GetPinValue+0x30>
    106c:	9b c0       	rjmp	.+310    	; 0x11a4 <DIO_u8GetPinValue+0x166>
    106e:	8d 81       	ldd	r24, Y+5	; 0x05
    1070:	9e 81       	ldd	r25, Y+6	; 0x06
    1072:	00 97       	sbiw	r24, 0x00	; 0
    1074:	09 f4       	brne	.+2      	; 0x1078 <DIO_u8GetPinValue+0x3a>
    1076:	96 c0       	rjmp	.+300    	; 0x11a4 <DIO_u8GetPinValue+0x166>
	{

		switch (Copy_u8PortId)
    1078:	8b 81       	ldd	r24, Y+3	; 0x03
    107a:	28 2f       	mov	r18, r24
    107c:	30 e0       	ldi	r19, 0x00	; 0
    107e:	38 87       	std	Y+8, r19	; 0x08
    1080:	2f 83       	std	Y+7, r18	; 0x07
    1082:	4f 81       	ldd	r20, Y+7	; 0x07
    1084:	58 85       	ldd	r21, Y+8	; 0x08
    1086:	41 30       	cpi	r20, 0x01	; 1
    1088:	51 05       	cpc	r21, r1
    108a:	a9 f1       	breq	.+106    	; 0x10f6 <DIO_u8GetPinValue+0xb8>
    108c:	8f 81       	ldd	r24, Y+7	; 0x07
    108e:	98 85       	ldd	r25, Y+8	; 0x08
    1090:	82 30       	cpi	r24, 0x02	; 2
    1092:	91 05       	cpc	r25, r1
    1094:	34 f4       	brge	.+12     	; 0x10a2 <DIO_u8GetPinValue+0x64>
    1096:	2f 81       	ldd	r18, Y+7	; 0x07
    1098:	38 85       	ldd	r19, Y+8	; 0x08
    109a:	21 15       	cp	r18, r1
    109c:	31 05       	cpc	r19, r1
    109e:	71 f0       	breq	.+28     	; 0x10bc <DIO_u8GetPinValue+0x7e>
    10a0:	82 c0       	rjmp	.+260    	; 0x11a6 <DIO_u8GetPinValue+0x168>
    10a2:	4f 81       	ldd	r20, Y+7	; 0x07
    10a4:	58 85       	ldd	r21, Y+8	; 0x08
    10a6:	42 30       	cpi	r20, 0x02	; 2
    10a8:	51 05       	cpc	r21, r1
    10aa:	09 f4       	brne	.+2      	; 0x10ae <DIO_u8GetPinValue+0x70>
    10ac:	41 c0       	rjmp	.+130    	; 0x1130 <DIO_u8GetPinValue+0xf2>
    10ae:	8f 81       	ldd	r24, Y+7	; 0x07
    10b0:	98 85       	ldd	r25, Y+8	; 0x08
    10b2:	83 30       	cpi	r24, 0x03	; 3
    10b4:	91 05       	cpc	r25, r1
    10b6:	09 f4       	brne	.+2      	; 0x10ba <DIO_u8GetPinValue+0x7c>
    10b8:	58 c0       	rjmp	.+176    	; 0x116a <DIO_u8GetPinValue+0x12c>
    10ba:	75 c0       	rjmp	.+234    	; 0x11a6 <DIO_u8GetPinValue+0x168>
		{
		case DIO_u8_PORTA:
			Local_u8PinValue = GET_BIT(DIO_u8_PINA_REG, Copy_u8PinId);
    10bc:	e9 e3       	ldi	r30, 0x39	; 57
    10be:	f0 e0       	ldi	r31, 0x00	; 0
    10c0:	80 81       	ld	r24, Z
    10c2:	28 2f       	mov	r18, r24
    10c4:	30 e0       	ldi	r19, 0x00	; 0
    10c6:	8c 81       	ldd	r24, Y+4	; 0x04
    10c8:	88 2f       	mov	r24, r24
    10ca:	90 e0       	ldi	r25, 0x00	; 0
    10cc:	a9 01       	movw	r20, r18
    10ce:	02 c0       	rjmp	.+4      	; 0x10d4 <DIO_u8GetPinValue+0x96>
    10d0:	55 95       	asr	r21
    10d2:	47 95       	ror	r20
    10d4:	8a 95       	dec	r24
    10d6:	e2 f7       	brpl	.-8      	; 0x10d0 <DIO_u8GetPinValue+0x92>
    10d8:	ca 01       	movw	r24, r20
    10da:	81 70       	andi	r24, 0x01	; 1
    10dc:	89 83       	std	Y+1, r24	; 0x01
			if (Local_u8PinValue == DIO_u8_LOW)
    10de:	89 81       	ldd	r24, Y+1	; 0x01
    10e0:	88 23       	and	r24, r24
    10e2:	21 f4       	brne	.+8      	; 0x10ec <DIO_u8GetPinValue+0xae>
			{
				*Copy_pu8ReturnedPinValue = DIO_u8_LOW;
    10e4:	ed 81       	ldd	r30, Y+5	; 0x05
    10e6:	fe 81       	ldd	r31, Y+6	; 0x06
    10e8:	10 82       	st	Z, r1
    10ea:	5d c0       	rjmp	.+186    	; 0x11a6 <DIO_u8GetPinValue+0x168>
			}

			else
			{
				*Copy_pu8ReturnedPinValue = DIO_u8_HIGH;
    10ec:	ed 81       	ldd	r30, Y+5	; 0x05
    10ee:	fe 81       	ldd	r31, Y+6	; 0x06
    10f0:	81 e0       	ldi	r24, 0x01	; 1
    10f2:	80 83       	st	Z, r24
    10f4:	58 c0       	rjmp	.+176    	; 0x11a6 <DIO_u8GetPinValue+0x168>
			}
			break;

		case DIO_u8_PORTB:
			Local_u8PinValue = GET_BIT(DIO_u8_PINB_REG, Copy_u8PinId);
    10f6:	e6 e3       	ldi	r30, 0x36	; 54
    10f8:	f0 e0       	ldi	r31, 0x00	; 0
    10fa:	80 81       	ld	r24, Z
    10fc:	28 2f       	mov	r18, r24
    10fe:	30 e0       	ldi	r19, 0x00	; 0
    1100:	8c 81       	ldd	r24, Y+4	; 0x04
    1102:	88 2f       	mov	r24, r24
    1104:	90 e0       	ldi	r25, 0x00	; 0
    1106:	a9 01       	movw	r20, r18
    1108:	02 c0       	rjmp	.+4      	; 0x110e <DIO_u8GetPinValue+0xd0>
    110a:	55 95       	asr	r21
    110c:	47 95       	ror	r20
    110e:	8a 95       	dec	r24
    1110:	e2 f7       	brpl	.-8      	; 0x110a <DIO_u8GetPinValue+0xcc>
    1112:	ca 01       	movw	r24, r20
    1114:	81 70       	andi	r24, 0x01	; 1
    1116:	89 83       	std	Y+1, r24	; 0x01
			if (Local_u8PinValue == DIO_u8_LOW)
    1118:	89 81       	ldd	r24, Y+1	; 0x01
    111a:	88 23       	and	r24, r24
    111c:	21 f4       	brne	.+8      	; 0x1126 <DIO_u8GetPinValue+0xe8>
			{
				*Copy_pu8ReturnedPinValue = DIO_u8_LOW;
    111e:	ed 81       	ldd	r30, Y+5	; 0x05
    1120:	fe 81       	ldd	r31, Y+6	; 0x06
    1122:	10 82       	st	Z, r1
    1124:	40 c0       	rjmp	.+128    	; 0x11a6 <DIO_u8GetPinValue+0x168>
			}

			else
			{
				*Copy_pu8ReturnedPinValue = DIO_u8_HIGH;
    1126:	ed 81       	ldd	r30, Y+5	; 0x05
    1128:	fe 81       	ldd	r31, Y+6	; 0x06
    112a:	81 e0       	ldi	r24, 0x01	; 1
    112c:	80 83       	st	Z, r24
    112e:	3b c0       	rjmp	.+118    	; 0x11a6 <DIO_u8GetPinValue+0x168>
			}
			break;

		case DIO_u8_PORTC:
			Local_u8PinValue = GET_BIT(DIO_u8_PINC_REG, Copy_u8PinId);
    1130:	e3 e3       	ldi	r30, 0x33	; 51
    1132:	f0 e0       	ldi	r31, 0x00	; 0
    1134:	80 81       	ld	r24, Z
    1136:	28 2f       	mov	r18, r24
    1138:	30 e0       	ldi	r19, 0x00	; 0
    113a:	8c 81       	ldd	r24, Y+4	; 0x04
    113c:	88 2f       	mov	r24, r24
    113e:	90 e0       	ldi	r25, 0x00	; 0
    1140:	a9 01       	movw	r20, r18
    1142:	02 c0       	rjmp	.+4      	; 0x1148 <DIO_u8GetPinValue+0x10a>
    1144:	55 95       	asr	r21
    1146:	47 95       	ror	r20
    1148:	8a 95       	dec	r24
    114a:	e2 f7       	brpl	.-8      	; 0x1144 <DIO_u8GetPinValue+0x106>
    114c:	ca 01       	movw	r24, r20
    114e:	81 70       	andi	r24, 0x01	; 1
    1150:	89 83       	std	Y+1, r24	; 0x01
			if (Local_u8PinValue == DIO_u8_LOW)
    1152:	89 81       	ldd	r24, Y+1	; 0x01
    1154:	88 23       	and	r24, r24
    1156:	21 f4       	brne	.+8      	; 0x1160 <DIO_u8GetPinValue+0x122>
			{
				*Copy_pu8ReturnedPinValue = DIO_u8_LOW;
    1158:	ed 81       	ldd	r30, Y+5	; 0x05
    115a:	fe 81       	ldd	r31, Y+6	; 0x06
    115c:	10 82       	st	Z, r1
    115e:	23 c0       	rjmp	.+70     	; 0x11a6 <DIO_u8GetPinValue+0x168>
			}

			else
			{
				*Copy_pu8ReturnedPinValue = DIO_u8_HIGH;
    1160:	ed 81       	ldd	r30, Y+5	; 0x05
    1162:	fe 81       	ldd	r31, Y+6	; 0x06
    1164:	81 e0       	ldi	r24, 0x01	; 1
    1166:	80 83       	st	Z, r24
    1168:	1e c0       	rjmp	.+60     	; 0x11a6 <DIO_u8GetPinValue+0x168>
			}
			break;

		case DIO_u8_PORTD:
			Local_u8PinValue = GET_BIT(DIO_u8_PIND_REG, Copy_u8PinId);
    116a:	e0 e3       	ldi	r30, 0x30	; 48
    116c:	f0 e0       	ldi	r31, 0x00	; 0
    116e:	80 81       	ld	r24, Z
    1170:	28 2f       	mov	r18, r24
    1172:	30 e0       	ldi	r19, 0x00	; 0
    1174:	8c 81       	ldd	r24, Y+4	; 0x04
    1176:	88 2f       	mov	r24, r24
    1178:	90 e0       	ldi	r25, 0x00	; 0
    117a:	a9 01       	movw	r20, r18
    117c:	02 c0       	rjmp	.+4      	; 0x1182 <DIO_u8GetPinValue+0x144>
    117e:	55 95       	asr	r21
    1180:	47 95       	ror	r20
    1182:	8a 95       	dec	r24
    1184:	e2 f7       	brpl	.-8      	; 0x117e <DIO_u8GetPinValue+0x140>
    1186:	ca 01       	movw	r24, r20
    1188:	81 70       	andi	r24, 0x01	; 1
    118a:	89 83       	std	Y+1, r24	; 0x01
			if (Local_u8PinValue == DIO_u8_LOW)
    118c:	89 81       	ldd	r24, Y+1	; 0x01
    118e:	88 23       	and	r24, r24
    1190:	21 f4       	brne	.+8      	; 0x119a <DIO_u8GetPinValue+0x15c>
			{
				*Copy_pu8ReturnedPinValue = DIO_u8_LOW;
    1192:	ed 81       	ldd	r30, Y+5	; 0x05
    1194:	fe 81       	ldd	r31, Y+6	; 0x06
    1196:	10 82       	st	Z, r1
    1198:	06 c0       	rjmp	.+12     	; 0x11a6 <DIO_u8GetPinValue+0x168>
			}

			else
			{
				*Copy_pu8ReturnedPinValue = DIO_u8_HIGH;
    119a:	ed 81       	ldd	r30, Y+5	; 0x05
    119c:	fe 81       	ldd	r31, Y+6	; 0x06
    119e:	81 e0       	ldi	r24, 0x01	; 1
    11a0:	80 83       	st	Z, r24
    11a2:	01 c0       	rjmp	.+2      	; 0x11a6 <DIO_u8GetPinValue+0x168>
		}
	}

	else
	{
		Local_u8ErrorState = STD_TYPES_NOK;
    11a4:	1a 82       	std	Y+2, r1	; 0x02
	}

	return Local_u8ErrorState;
    11a6:	8a 81       	ldd	r24, Y+2	; 0x02
}
    11a8:	28 96       	adiw	r28, 0x08	; 8
    11aa:	0f b6       	in	r0, 0x3f	; 63
    11ac:	f8 94       	cli
    11ae:	de bf       	out	0x3e, r29	; 62
    11b0:	0f be       	out	0x3f, r0	; 63
    11b2:	cd bf       	out	0x3d, r28	; 61
    11b4:	cf 91       	pop	r28
    11b6:	df 91       	pop	r29
    11b8:	08 95       	ret

000011ba <DIO_u8SetPortDirection>:

u8 DIO_u8SetPortDirection(u8 Copy_u8PortId, u8 Copy_u8PortDirection)
{
    11ba:	df 93       	push	r29
    11bc:	cf 93       	push	r28
    11be:	cd b7       	in	r28, 0x3d	; 61
    11c0:	de b7       	in	r29, 0x3e	; 62
    11c2:	2d 97       	sbiw	r28, 0x0d	; 13
    11c4:	0f b6       	in	r0, 0x3f	; 63
    11c6:	f8 94       	cli
    11c8:	de bf       	out	0x3e, r29	; 62
    11ca:	0f be       	out	0x3f, r0	; 63
    11cc:	cd bf       	out	0x3d, r28	; 61
    11ce:	89 83       	std	Y+1, r24	; 0x01
    11d0:	6a 83       	std	Y+2, r22	; 0x02
	switch (Copy_u8PortId)
    11d2:	89 81       	ldd	r24, Y+1	; 0x01
    11d4:	28 2f       	mov	r18, r24
    11d6:	30 e0       	ldi	r19, 0x00	; 0
    11d8:	3c 87       	std	Y+12, r19	; 0x0c
    11da:	2b 87       	std	Y+11, r18	; 0x0b
    11dc:	8b 85       	ldd	r24, Y+11	; 0x0b
    11de:	9c 85       	ldd	r25, Y+12	; 0x0c
    11e0:	81 30       	cpi	r24, 0x01	; 1
    11e2:	91 05       	cpc	r25, r1
    11e4:	71 f1       	breq	.+92     	; 0x1242 <DIO_u8SetPortDirection+0x88>
    11e6:	2b 85       	ldd	r18, Y+11	; 0x0b
    11e8:	3c 85       	ldd	r19, Y+12	; 0x0c
    11ea:	22 30       	cpi	r18, 0x02	; 2
    11ec:	31 05       	cpc	r19, r1
    11ee:	2c f4       	brge	.+10     	; 0x11fa <DIO_u8SetPortDirection+0x40>
    11f0:	8b 85       	ldd	r24, Y+11	; 0x0b
    11f2:	9c 85       	ldd	r25, Y+12	; 0x0c
    11f4:	00 97       	sbiw	r24, 0x00	; 0
    11f6:	69 f0       	breq	.+26     	; 0x1212 <DIO_u8SetPortDirection+0x58>
    11f8:	6b c0       	rjmp	.+214    	; 0x12d0 <DIO_u8SetPortDirection+0x116>
    11fa:	2b 85       	ldd	r18, Y+11	; 0x0b
    11fc:	3c 85       	ldd	r19, Y+12	; 0x0c
    11fe:	22 30       	cpi	r18, 0x02	; 2
    1200:	31 05       	cpc	r19, r1
    1202:	b9 f1       	breq	.+110    	; 0x1272 <DIO_u8SetPortDirection+0xb8>
    1204:	8b 85       	ldd	r24, Y+11	; 0x0b
    1206:	9c 85       	ldd	r25, Y+12	; 0x0c
    1208:	83 30       	cpi	r24, 0x03	; 3
    120a:	91 05       	cpc	r25, r1
    120c:	09 f4       	brne	.+2      	; 0x1210 <DIO_u8SetPortDirection+0x56>
    120e:	49 c0       	rjmp	.+146    	; 0x12a2 <DIO_u8SetPortDirection+0xe8>
    1210:	5f c0       	rjmp	.+190    	; 0x12d0 <DIO_u8SetPortDirection+0x116>
	{
	case DIO_u8_PORTA:
		switch (Copy_u8PortDirection)
    1212:	8a 81       	ldd	r24, Y+2	; 0x02
    1214:	28 2f       	mov	r18, r24
    1216:	30 e0       	ldi	r19, 0x00	; 0
    1218:	3a 87       	std	Y+10, r19	; 0x0a
    121a:	29 87       	std	Y+9, r18	; 0x09
    121c:	89 85       	ldd	r24, Y+9	; 0x09
    121e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1220:	00 97       	sbiw	r24, 0x00	; 0
    1222:	31 f0       	breq	.+12     	; 0x1230 <DIO_u8SetPortDirection+0x76>
    1224:	29 85       	ldd	r18, Y+9	; 0x09
    1226:	3a 85       	ldd	r19, Y+10	; 0x0a
    1228:	21 30       	cpi	r18, 0x01	; 1
    122a:	31 05       	cpc	r19, r1
    122c:	29 f0       	breq	.+10     	; 0x1238 <DIO_u8SetPortDirection+0x7e>
    122e:	50 c0       	rjmp	.+160    	; 0x12d0 <DIO_u8SetPortDirection+0x116>
		{
		case DIO_u8_INPUT:
			DIO_u8_DDRA_REG = DIO_u8PortLow;
    1230:	ea e3       	ldi	r30, 0x3A	; 58
    1232:	f0 e0       	ldi	r31, 0x00	; 0
    1234:	10 82       	st	Z, r1
    1236:	4c c0       	rjmp	.+152    	; 0x12d0 <DIO_u8SetPortDirection+0x116>
			break;
		case DIO_u8_OUTPUT:
			DIO_u8_DDRA_REG = DIO_u8PortHigh;
    1238:	ea e3       	ldi	r30, 0x3A	; 58
    123a:	f0 e0       	ldi	r31, 0x00	; 0
    123c:	8f ef       	ldi	r24, 0xFF	; 255
    123e:	80 83       	st	Z, r24
    1240:	47 c0       	rjmp	.+142    	; 0x12d0 <DIO_u8SetPortDirection+0x116>
			break;
		}
		break;

	case DIO_u8_PORTB:
		switch (Copy_u8PortDirection)
    1242:	8a 81       	ldd	r24, Y+2	; 0x02
    1244:	28 2f       	mov	r18, r24
    1246:	30 e0       	ldi	r19, 0x00	; 0
    1248:	38 87       	std	Y+8, r19	; 0x08
    124a:	2f 83       	std	Y+7, r18	; 0x07
    124c:	8f 81       	ldd	r24, Y+7	; 0x07
    124e:	98 85       	ldd	r25, Y+8	; 0x08
    1250:	00 97       	sbiw	r24, 0x00	; 0
    1252:	31 f0       	breq	.+12     	; 0x1260 <DIO_u8SetPortDirection+0xa6>
    1254:	2f 81       	ldd	r18, Y+7	; 0x07
    1256:	38 85       	ldd	r19, Y+8	; 0x08
    1258:	21 30       	cpi	r18, 0x01	; 1
    125a:	31 05       	cpc	r19, r1
    125c:	29 f0       	breq	.+10     	; 0x1268 <DIO_u8SetPortDirection+0xae>
    125e:	38 c0       	rjmp	.+112    	; 0x12d0 <DIO_u8SetPortDirection+0x116>
		{
		case DIO_u8_INPUT:
			DIO_u8_DDRB_REG = DIO_u8PortLow;
    1260:	e7 e3       	ldi	r30, 0x37	; 55
    1262:	f0 e0       	ldi	r31, 0x00	; 0
    1264:	10 82       	st	Z, r1
    1266:	34 c0       	rjmp	.+104    	; 0x12d0 <DIO_u8SetPortDirection+0x116>
			break;
		case DIO_u8_OUTPUT:
			DIO_u8_DDRB_REG = DIO_u8PortHigh;
    1268:	e7 e3       	ldi	r30, 0x37	; 55
    126a:	f0 e0       	ldi	r31, 0x00	; 0
    126c:	8f ef       	ldi	r24, 0xFF	; 255
    126e:	80 83       	st	Z, r24
    1270:	2f c0       	rjmp	.+94     	; 0x12d0 <DIO_u8SetPortDirection+0x116>
			break;
		}
		break;

	case DIO_u8_PORTC:
		switch (Copy_u8PortDirection)
    1272:	8a 81       	ldd	r24, Y+2	; 0x02
    1274:	28 2f       	mov	r18, r24
    1276:	30 e0       	ldi	r19, 0x00	; 0
    1278:	3e 83       	std	Y+6, r19	; 0x06
    127a:	2d 83       	std	Y+5, r18	; 0x05
    127c:	8d 81       	ldd	r24, Y+5	; 0x05
    127e:	9e 81       	ldd	r25, Y+6	; 0x06
    1280:	00 97       	sbiw	r24, 0x00	; 0
    1282:	31 f0       	breq	.+12     	; 0x1290 <DIO_u8SetPortDirection+0xd6>
    1284:	2d 81       	ldd	r18, Y+5	; 0x05
    1286:	3e 81       	ldd	r19, Y+6	; 0x06
    1288:	21 30       	cpi	r18, 0x01	; 1
    128a:	31 05       	cpc	r19, r1
    128c:	29 f0       	breq	.+10     	; 0x1298 <DIO_u8SetPortDirection+0xde>
    128e:	20 c0       	rjmp	.+64     	; 0x12d0 <DIO_u8SetPortDirection+0x116>
		{
		case DIO_u8_INPUT:
			DIO_u8_DDRC_REG = DIO_u8PortLow;
    1290:	e4 e3       	ldi	r30, 0x34	; 52
    1292:	f0 e0       	ldi	r31, 0x00	; 0
    1294:	10 82       	st	Z, r1
    1296:	1c c0       	rjmp	.+56     	; 0x12d0 <DIO_u8SetPortDirection+0x116>
			break;
		case DIO_u8_OUTPUT:
			DIO_u8_DDRC_REG = DIO_u8PortHigh;
    1298:	e4 e3       	ldi	r30, 0x34	; 52
    129a:	f0 e0       	ldi	r31, 0x00	; 0
    129c:	8f ef       	ldi	r24, 0xFF	; 255
    129e:	80 83       	st	Z, r24
    12a0:	17 c0       	rjmp	.+46     	; 0x12d0 <DIO_u8SetPortDirection+0x116>
			break;
		}
		break;

	case DIO_u8_PORTD:
		switch (Copy_u8PortDirection)
    12a2:	8a 81       	ldd	r24, Y+2	; 0x02
    12a4:	28 2f       	mov	r18, r24
    12a6:	30 e0       	ldi	r19, 0x00	; 0
    12a8:	3c 83       	std	Y+4, r19	; 0x04
    12aa:	2b 83       	std	Y+3, r18	; 0x03
    12ac:	8b 81       	ldd	r24, Y+3	; 0x03
    12ae:	9c 81       	ldd	r25, Y+4	; 0x04
    12b0:	00 97       	sbiw	r24, 0x00	; 0
    12b2:	31 f0       	breq	.+12     	; 0x12c0 <DIO_u8SetPortDirection+0x106>
    12b4:	2b 81       	ldd	r18, Y+3	; 0x03
    12b6:	3c 81       	ldd	r19, Y+4	; 0x04
    12b8:	21 30       	cpi	r18, 0x01	; 1
    12ba:	31 05       	cpc	r19, r1
    12bc:	29 f0       	breq	.+10     	; 0x12c8 <DIO_u8SetPortDirection+0x10e>
    12be:	08 c0       	rjmp	.+16     	; 0x12d0 <DIO_u8SetPortDirection+0x116>
		{
		case DIO_u8_INPUT:
			DIO_u8_DDRD_REG = DIO_u8PortLow;
    12c0:	e1 e3       	ldi	r30, 0x31	; 49
    12c2:	f0 e0       	ldi	r31, 0x00	; 0
    12c4:	10 82       	st	Z, r1
    12c6:	04 c0       	rjmp	.+8      	; 0x12d0 <DIO_u8SetPortDirection+0x116>
			break;
		case DIO_u8_OUTPUT:
			DIO_u8_DDRD_REG = DIO_u8PortHigh;
    12c8:	e1 e3       	ldi	r30, 0x31	; 49
    12ca:	f0 e0       	ldi	r31, 0x00	; 0
    12cc:	8f ef       	ldi	r24, 0xFF	; 255
    12ce:	80 83       	st	Z, r24
			break;
		}
		break;
	}
}
    12d0:	2d 96       	adiw	r28, 0x0d	; 13
    12d2:	0f b6       	in	r0, 0x3f	; 63
    12d4:	f8 94       	cli
    12d6:	de bf       	out	0x3e, r29	; 62
    12d8:	0f be       	out	0x3f, r0	; 63
    12da:	cd bf       	out	0x3d, r28	; 61
    12dc:	cf 91       	pop	r28
    12de:	df 91       	pop	r29
    12e0:	08 95       	ret

000012e2 <DIO_u8SetPortValue>:

u8 DIO_u8SetPortValue(u8 Copy_u8PortId, u8 Copy_u8PortValue)
{
    12e2:	df 93       	push	r29
    12e4:	cf 93       	push	r28
    12e6:	cd b7       	in	r28, 0x3d	; 61
    12e8:	de b7       	in	r29, 0x3e	; 62
    12ea:	2d 97       	sbiw	r28, 0x0d	; 13
    12ec:	0f b6       	in	r0, 0x3f	; 63
    12ee:	f8 94       	cli
    12f0:	de bf       	out	0x3e, r29	; 62
    12f2:	0f be       	out	0x3f, r0	; 63
    12f4:	cd bf       	out	0x3d, r28	; 61
    12f6:	8a 83       	std	Y+2, r24	; 0x02
    12f8:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState = STD_TYPES_OK;
    12fa:	81 e0       	ldi	r24, 0x01	; 1
    12fc:	89 83       	std	Y+1, r24	; 0x01
	if (Copy_u8PortId <= DIO_u8_PORTD)
    12fe:	8a 81       	ldd	r24, Y+2	; 0x02
    1300:	84 30       	cpi	r24, 0x04	; 4
    1302:	08 f0       	brcs	.+2      	; 0x1306 <DIO_u8SetPortValue+0x24>
    1304:	80 c0       	rjmp	.+256    	; 0x1406 <DIO_u8SetPortValue+0x124>
	{
		switch (Copy_u8PortId)
    1306:	8a 81       	ldd	r24, Y+2	; 0x02
    1308:	28 2f       	mov	r18, r24
    130a:	30 e0       	ldi	r19, 0x00	; 0
    130c:	3d 87       	std	Y+13, r19	; 0x0d
    130e:	2c 87       	std	Y+12, r18	; 0x0c
    1310:	8c 85       	ldd	r24, Y+12	; 0x0c
    1312:	9d 85       	ldd	r25, Y+13	; 0x0d
    1314:	81 30       	cpi	r24, 0x01	; 1
    1316:	91 05       	cpc	r25, r1
    1318:	71 f1       	breq	.+92     	; 0x1376 <DIO_u8SetPortValue+0x94>
    131a:	2c 85       	ldd	r18, Y+12	; 0x0c
    131c:	3d 85       	ldd	r19, Y+13	; 0x0d
    131e:	22 30       	cpi	r18, 0x02	; 2
    1320:	31 05       	cpc	r19, r1
    1322:	2c f4       	brge	.+10     	; 0x132e <DIO_u8SetPortValue+0x4c>
    1324:	8c 85       	ldd	r24, Y+12	; 0x0c
    1326:	9d 85       	ldd	r25, Y+13	; 0x0d
    1328:	00 97       	sbiw	r24, 0x00	; 0
    132a:	69 f0       	breq	.+26     	; 0x1346 <DIO_u8SetPortValue+0x64>
    132c:	6d c0       	rjmp	.+218    	; 0x1408 <DIO_u8SetPortValue+0x126>
    132e:	2c 85       	ldd	r18, Y+12	; 0x0c
    1330:	3d 85       	ldd	r19, Y+13	; 0x0d
    1332:	22 30       	cpi	r18, 0x02	; 2
    1334:	31 05       	cpc	r19, r1
    1336:	b9 f1       	breq	.+110    	; 0x13a6 <DIO_u8SetPortValue+0xc4>
    1338:	8c 85       	ldd	r24, Y+12	; 0x0c
    133a:	9d 85       	ldd	r25, Y+13	; 0x0d
    133c:	83 30       	cpi	r24, 0x03	; 3
    133e:	91 05       	cpc	r25, r1
    1340:	09 f4       	brne	.+2      	; 0x1344 <DIO_u8SetPortValue+0x62>
    1342:	49 c0       	rjmp	.+146    	; 0x13d6 <DIO_u8SetPortValue+0xf4>
    1344:	61 c0       	rjmp	.+194    	; 0x1408 <DIO_u8SetPortValue+0x126>
		{
		case DIO_u8_PORTA:
			switch (Copy_u8PortValue)
    1346:	8b 81       	ldd	r24, Y+3	; 0x03
    1348:	28 2f       	mov	r18, r24
    134a:	30 e0       	ldi	r19, 0x00	; 0
    134c:	3b 87       	std	Y+11, r19	; 0x0b
    134e:	2a 87       	std	Y+10, r18	; 0x0a
    1350:	8a 85       	ldd	r24, Y+10	; 0x0a
    1352:	9b 85       	ldd	r25, Y+11	; 0x0b
    1354:	00 97       	sbiw	r24, 0x00	; 0
    1356:	31 f0       	breq	.+12     	; 0x1364 <DIO_u8SetPortValue+0x82>
    1358:	2a 85       	ldd	r18, Y+10	; 0x0a
    135a:	3b 85       	ldd	r19, Y+11	; 0x0b
    135c:	21 30       	cpi	r18, 0x01	; 1
    135e:	31 05       	cpc	r19, r1
    1360:	29 f0       	breq	.+10     	; 0x136c <DIO_u8SetPortValue+0x8a>
    1362:	52 c0       	rjmp	.+164    	; 0x1408 <DIO_u8SetPortValue+0x126>
			{
			case DIO_u8_LOW:
				DIO_u8_PORTA_REG = DIO_u8PortLow;
    1364:	eb e3       	ldi	r30, 0x3B	; 59
    1366:	f0 e0       	ldi	r31, 0x00	; 0
    1368:	10 82       	st	Z, r1
    136a:	4e c0       	rjmp	.+156    	; 0x1408 <DIO_u8SetPortValue+0x126>
				break;
			case DIO_u8_HIGH:
				DIO_u8_PORTA_REG = DIO_u8PortHigh;
    136c:	eb e3       	ldi	r30, 0x3B	; 59
    136e:	f0 e0       	ldi	r31, 0x00	; 0
    1370:	8f ef       	ldi	r24, 0xFF	; 255
    1372:	80 83       	st	Z, r24
    1374:	49 c0       	rjmp	.+146    	; 0x1408 <DIO_u8SetPortValue+0x126>
				break;
			}
			break;

		case DIO_u8_PORTB:
			switch (Copy_u8PortValue)
    1376:	8b 81       	ldd	r24, Y+3	; 0x03
    1378:	28 2f       	mov	r18, r24
    137a:	30 e0       	ldi	r19, 0x00	; 0
    137c:	39 87       	std	Y+9, r19	; 0x09
    137e:	28 87       	std	Y+8, r18	; 0x08
    1380:	88 85       	ldd	r24, Y+8	; 0x08
    1382:	99 85       	ldd	r25, Y+9	; 0x09
    1384:	00 97       	sbiw	r24, 0x00	; 0
    1386:	31 f0       	breq	.+12     	; 0x1394 <DIO_u8SetPortValue+0xb2>
    1388:	28 85       	ldd	r18, Y+8	; 0x08
    138a:	39 85       	ldd	r19, Y+9	; 0x09
    138c:	21 30       	cpi	r18, 0x01	; 1
    138e:	31 05       	cpc	r19, r1
    1390:	29 f0       	breq	.+10     	; 0x139c <DIO_u8SetPortValue+0xba>
    1392:	3a c0       	rjmp	.+116    	; 0x1408 <DIO_u8SetPortValue+0x126>
			{
			case DIO_u8_LOW:
				DIO_u8_PORTB_REG = DIO_u8PortLow;
    1394:	e8 e3       	ldi	r30, 0x38	; 56
    1396:	f0 e0       	ldi	r31, 0x00	; 0
    1398:	10 82       	st	Z, r1
    139a:	36 c0       	rjmp	.+108    	; 0x1408 <DIO_u8SetPortValue+0x126>
				break;
			case DIO_u8_HIGH:
				DIO_u8_PORTB_REG = DIO_u8PortHigh;
    139c:	e8 e3       	ldi	r30, 0x38	; 56
    139e:	f0 e0       	ldi	r31, 0x00	; 0
    13a0:	8f ef       	ldi	r24, 0xFF	; 255
    13a2:	80 83       	st	Z, r24
    13a4:	31 c0       	rjmp	.+98     	; 0x1408 <DIO_u8SetPortValue+0x126>
				break;
			}
			break;

		case DIO_u8_PORTC:
			switch (Copy_u8PortValue)
    13a6:	8b 81       	ldd	r24, Y+3	; 0x03
    13a8:	28 2f       	mov	r18, r24
    13aa:	30 e0       	ldi	r19, 0x00	; 0
    13ac:	3f 83       	std	Y+7, r19	; 0x07
    13ae:	2e 83       	std	Y+6, r18	; 0x06
    13b0:	8e 81       	ldd	r24, Y+6	; 0x06
    13b2:	9f 81       	ldd	r25, Y+7	; 0x07
    13b4:	00 97       	sbiw	r24, 0x00	; 0
    13b6:	31 f0       	breq	.+12     	; 0x13c4 <DIO_u8SetPortValue+0xe2>
    13b8:	2e 81       	ldd	r18, Y+6	; 0x06
    13ba:	3f 81       	ldd	r19, Y+7	; 0x07
    13bc:	21 30       	cpi	r18, 0x01	; 1
    13be:	31 05       	cpc	r19, r1
    13c0:	29 f0       	breq	.+10     	; 0x13cc <DIO_u8SetPortValue+0xea>
    13c2:	22 c0       	rjmp	.+68     	; 0x1408 <DIO_u8SetPortValue+0x126>
			{
			case DIO_u8_LOW:
				DIO_u8_PORTC_REG = DIO_u8PortLow;
    13c4:	e5 e3       	ldi	r30, 0x35	; 53
    13c6:	f0 e0       	ldi	r31, 0x00	; 0
    13c8:	10 82       	st	Z, r1
    13ca:	1e c0       	rjmp	.+60     	; 0x1408 <DIO_u8SetPortValue+0x126>
				break;
			case DIO_u8_HIGH:
				DIO_u8_PORTC_REG = DIO_u8PortHigh;
    13cc:	e5 e3       	ldi	r30, 0x35	; 53
    13ce:	f0 e0       	ldi	r31, 0x00	; 0
    13d0:	8f ef       	ldi	r24, 0xFF	; 255
    13d2:	80 83       	st	Z, r24
    13d4:	19 c0       	rjmp	.+50     	; 0x1408 <DIO_u8SetPortValue+0x126>
				break;
			}
			break;

		case DIO_u8_PORTD:
			switch (Copy_u8PortValue)
    13d6:	8b 81       	ldd	r24, Y+3	; 0x03
    13d8:	28 2f       	mov	r18, r24
    13da:	30 e0       	ldi	r19, 0x00	; 0
    13dc:	3d 83       	std	Y+5, r19	; 0x05
    13de:	2c 83       	std	Y+4, r18	; 0x04
    13e0:	8c 81       	ldd	r24, Y+4	; 0x04
    13e2:	9d 81       	ldd	r25, Y+5	; 0x05
    13e4:	00 97       	sbiw	r24, 0x00	; 0
    13e6:	31 f0       	breq	.+12     	; 0x13f4 <DIO_u8SetPortValue+0x112>
    13e8:	2c 81       	ldd	r18, Y+4	; 0x04
    13ea:	3d 81       	ldd	r19, Y+5	; 0x05
    13ec:	21 30       	cpi	r18, 0x01	; 1
    13ee:	31 05       	cpc	r19, r1
    13f0:	29 f0       	breq	.+10     	; 0x13fc <DIO_u8SetPortValue+0x11a>
    13f2:	0a c0       	rjmp	.+20     	; 0x1408 <DIO_u8SetPortValue+0x126>
			{
			case DIO_u8_LOW:
				DIO_u8_PORTD_REG = DIO_u8PortLow;
    13f4:	e2 e3       	ldi	r30, 0x32	; 50
    13f6:	f0 e0       	ldi	r31, 0x00	; 0
    13f8:	10 82       	st	Z, r1
    13fa:	06 c0       	rjmp	.+12     	; 0x1408 <DIO_u8SetPortValue+0x126>
				break;
			case DIO_u8_HIGH:
				DIO_u8_PORTD_REG = DIO_u8PortHigh;
    13fc:	e2 e3       	ldi	r30, 0x32	; 50
    13fe:	f0 e0       	ldi	r31, 0x00	; 0
    1400:	8f ef       	ldi	r24, 0xFF	; 255
    1402:	80 83       	st	Z, r24
    1404:	01 c0       	rjmp	.+2      	; 0x1408 <DIO_u8SetPortValue+0x126>
		}
	}

	else
	{
		Local_u8ErrorState = STD_TYPES_NOK;
    1406:	19 82       	std	Y+1, r1	; 0x01
	}

	return Local_u8ErrorState;
    1408:	89 81       	ldd	r24, Y+1	; 0x01
}
    140a:	2d 96       	adiw	r28, 0x0d	; 13
    140c:	0f b6       	in	r0, 0x3f	; 63
    140e:	f8 94       	cli
    1410:	de bf       	out	0x3e, r29	; 62
    1412:	0f be       	out	0x3f, r0	; 63
    1414:	cd bf       	out	0x3d, r28	; 61
    1416:	cf 91       	pop	r28
    1418:	df 91       	pop	r29
    141a:	08 95       	ret

0000141c <DIO_u8GetPortValue>:

u8 DIO_u8GetPortValue(u8 Copy_u8PortId, u8 *Copy_pu8ReturnedPortValue)
{
    141c:	df 93       	push	r29
    141e:	cf 93       	push	r28
    1420:	00 d0       	rcall	.+0      	; 0x1422 <DIO_u8GetPortValue+0x6>
    1422:	00 d0       	rcall	.+0      	; 0x1424 <DIO_u8GetPortValue+0x8>
    1424:	00 d0       	rcall	.+0      	; 0x1426 <DIO_u8GetPortValue+0xa>
    1426:	cd b7       	in	r28, 0x3d	; 61
    1428:	de b7       	in	r29, 0x3e	; 62
    142a:	8a 83       	std	Y+2, r24	; 0x02
    142c:	7c 83       	std	Y+4, r23	; 0x04
    142e:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState = STD_TYPES_OK;
    1430:	81 e0       	ldi	r24, 0x01	; 1
    1432:	89 83       	std	Y+1, r24	; 0x01
	if (Copy_u8PortId <= DIO_u8_PORTD && Copy_pu8ReturnedPortValue != NULL)
    1434:	8a 81       	ldd	r24, Y+2	; 0x02
    1436:	84 30       	cpi	r24, 0x04	; 4
    1438:	08 f0       	brcs	.+2      	; 0x143c <DIO_u8GetPortValue+0x20>
    143a:	3f c0       	rjmp	.+126    	; 0x14ba <DIO_u8GetPortValue+0x9e>
    143c:	8b 81       	ldd	r24, Y+3	; 0x03
    143e:	9c 81       	ldd	r25, Y+4	; 0x04
    1440:	00 97       	sbiw	r24, 0x00	; 0
    1442:	d9 f1       	breq	.+118    	; 0x14ba <DIO_u8GetPortValue+0x9e>
	{
		switch (Copy_u8PortId)
    1444:	8a 81       	ldd	r24, Y+2	; 0x02
    1446:	28 2f       	mov	r18, r24
    1448:	30 e0       	ldi	r19, 0x00	; 0
    144a:	3e 83       	std	Y+6, r19	; 0x06
    144c:	2d 83       	std	Y+5, r18	; 0x05
    144e:	8d 81       	ldd	r24, Y+5	; 0x05
    1450:	9e 81       	ldd	r25, Y+6	; 0x06
    1452:	81 30       	cpi	r24, 0x01	; 1
    1454:	91 05       	cpc	r25, r1
    1456:	e1 f0       	breq	.+56     	; 0x1490 <DIO_u8GetPortValue+0x74>
    1458:	2d 81       	ldd	r18, Y+5	; 0x05
    145a:	3e 81       	ldd	r19, Y+6	; 0x06
    145c:	22 30       	cpi	r18, 0x02	; 2
    145e:	31 05       	cpc	r19, r1
    1460:	2c f4       	brge	.+10     	; 0x146c <DIO_u8GetPortValue+0x50>
    1462:	8d 81       	ldd	r24, Y+5	; 0x05
    1464:	9e 81       	ldd	r25, Y+6	; 0x06
    1466:	00 97       	sbiw	r24, 0x00	; 0
    1468:	61 f0       	breq	.+24     	; 0x1482 <DIO_u8GetPortValue+0x66>
    146a:	28 c0       	rjmp	.+80     	; 0x14bc <DIO_u8GetPortValue+0xa0>
    146c:	2d 81       	ldd	r18, Y+5	; 0x05
    146e:	3e 81       	ldd	r19, Y+6	; 0x06
    1470:	22 30       	cpi	r18, 0x02	; 2
    1472:	31 05       	cpc	r19, r1
    1474:	a1 f0       	breq	.+40     	; 0x149e <DIO_u8GetPortValue+0x82>
    1476:	8d 81       	ldd	r24, Y+5	; 0x05
    1478:	9e 81       	ldd	r25, Y+6	; 0x06
    147a:	83 30       	cpi	r24, 0x03	; 3
    147c:	91 05       	cpc	r25, r1
    147e:	b1 f0       	breq	.+44     	; 0x14ac <DIO_u8GetPortValue+0x90>
    1480:	1d c0       	rjmp	.+58     	; 0x14bc <DIO_u8GetPortValue+0xa0>
		{
		case DIO_u8_PORTA:
			*Copy_pu8ReturnedPortValue = DIO_u8_PINA_REG;
    1482:	e9 e3       	ldi	r30, 0x39	; 57
    1484:	f0 e0       	ldi	r31, 0x00	; 0
    1486:	80 81       	ld	r24, Z
    1488:	eb 81       	ldd	r30, Y+3	; 0x03
    148a:	fc 81       	ldd	r31, Y+4	; 0x04
    148c:	80 83       	st	Z, r24
    148e:	16 c0       	rjmp	.+44     	; 0x14bc <DIO_u8GetPortValue+0xa0>
			break;
		case DIO_u8_PORTB:
			*Copy_pu8ReturnedPortValue = DIO_u8_PINB_REG;
    1490:	e6 e3       	ldi	r30, 0x36	; 54
    1492:	f0 e0       	ldi	r31, 0x00	; 0
    1494:	80 81       	ld	r24, Z
    1496:	eb 81       	ldd	r30, Y+3	; 0x03
    1498:	fc 81       	ldd	r31, Y+4	; 0x04
    149a:	80 83       	st	Z, r24
    149c:	0f c0       	rjmp	.+30     	; 0x14bc <DIO_u8GetPortValue+0xa0>
			break;

		case DIO_u8_PORTC:
			*Copy_pu8ReturnedPortValue = DIO_u8_PINC_REG;
    149e:	e3 e3       	ldi	r30, 0x33	; 51
    14a0:	f0 e0       	ldi	r31, 0x00	; 0
    14a2:	80 81       	ld	r24, Z
    14a4:	eb 81       	ldd	r30, Y+3	; 0x03
    14a6:	fc 81       	ldd	r31, Y+4	; 0x04
    14a8:	80 83       	st	Z, r24
    14aa:	08 c0       	rjmp	.+16     	; 0x14bc <DIO_u8GetPortValue+0xa0>
			break;

		case DIO_u8_PORTD:
			*Copy_pu8ReturnedPortValue = DIO_u8_PIND_REG;
    14ac:	e0 e3       	ldi	r30, 0x30	; 48
    14ae:	f0 e0       	ldi	r31, 0x00	; 0
    14b0:	80 81       	ld	r24, Z
    14b2:	eb 81       	ldd	r30, Y+3	; 0x03
    14b4:	fc 81       	ldd	r31, Y+4	; 0x04
    14b6:	80 83       	st	Z, r24
    14b8:	01 c0       	rjmp	.+2      	; 0x14bc <DIO_u8GetPortValue+0xa0>
		}
	}

	else
	{
		Local_u8ErrorState = STD_TYPES_NOK;
    14ba:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ErrorState;
    14bc:	89 81       	ldd	r24, Y+1	; 0x01
}
    14be:	26 96       	adiw	r28, 0x06	; 6
    14c0:	0f b6       	in	r0, 0x3f	; 63
    14c2:	f8 94       	cli
    14c4:	de bf       	out	0x3e, r29	; 62
    14c6:	0f be       	out	0x3f, r0	; 63
    14c8:	cd bf       	out	0x3d, r28	; 61
    14ca:	cf 91       	pop	r28
    14cc:	df 91       	pop	r29
    14ce:	08 95       	ret

000014d0 <DIO_u8SetValueToAllPins>:

u8 DIO_u8SetValueToAllPins(u8 Copy_u8PortId, u8 Copy_u8Pin0, u8 Copy_u8Pin1, u8 Copy_u8Pin2, u8 Copy_u8Pin3, u8 Copy_u8Pin4, u8 Copy_u8Pin5, u8 Copy_u8Pin6, u8 Copy_u8Pin7)
{
    14d0:	8f 92       	push	r8
    14d2:	af 92       	push	r10
    14d4:	cf 92       	push	r12
    14d6:	ef 92       	push	r14
    14d8:	0f 93       	push	r16
    14da:	df 93       	push	r29
    14dc:	cf 93       	push	r28
    14de:	cd b7       	in	r28, 0x3d	; 61
    14e0:	de b7       	in	r29, 0x3e	; 62
    14e2:	2c 97       	sbiw	r28, 0x0c	; 12
    14e4:	0f b6       	in	r0, 0x3f	; 63
    14e6:	f8 94       	cli
    14e8:	de bf       	out	0x3e, r29	; 62
    14ea:	0f be       	out	0x3f, r0	; 63
    14ec:	cd bf       	out	0x3d, r28	; 61
    14ee:	89 83       	std	Y+1, r24	; 0x01
    14f0:	6a 83       	std	Y+2, r22	; 0x02
    14f2:	4b 83       	std	Y+3, r20	; 0x03
    14f4:	2c 83       	std	Y+4, r18	; 0x04
    14f6:	0d 83       	std	Y+5, r16	; 0x05
    14f8:	ee 82       	std	Y+6, r14	; 0x06
    14fa:	cf 82       	std	Y+7, r12	; 0x07
    14fc:	a8 86       	std	Y+8, r10	; 0x08
    14fe:	89 86       	std	Y+9, r8	; 0x09
	switch (Copy_u8PortId)
    1500:	89 81       	ldd	r24, Y+1	; 0x01
    1502:	28 2f       	mov	r18, r24
    1504:	30 e0       	ldi	r19, 0x00	; 0
    1506:	3b 87       	std	Y+11, r19	; 0x0b
    1508:	2a 87       	std	Y+10, r18	; 0x0a
    150a:	8a 85       	ldd	r24, Y+10	; 0x0a
    150c:	9b 85       	ldd	r25, Y+11	; 0x0b
    150e:	81 30       	cpi	r24, 0x01	; 1
    1510:	91 05       	cpc	r25, r1
    1512:	09 f4       	brne	.+2      	; 0x1516 <DIO_u8SetValueToAllPins+0x46>
    1514:	a8 c0       	rjmp	.+336    	; 0x1666 <DIO_u8SetValueToAllPins+0x196>
    1516:	2a 85       	ldd	r18, Y+10	; 0x0a
    1518:	3b 85       	ldd	r19, Y+11	; 0x0b
    151a:	22 30       	cpi	r18, 0x02	; 2
    151c:	31 05       	cpc	r19, r1
    151e:	2c f4       	brge	.+10     	; 0x152a <DIO_u8SetValueToAllPins+0x5a>
    1520:	8a 85       	ldd	r24, Y+10	; 0x0a
    1522:	9b 85       	ldd	r25, Y+11	; 0x0b
    1524:	00 97       	sbiw	r24, 0x00	; 0
    1526:	71 f0       	breq	.+28     	; 0x1544 <DIO_u8SetValueToAllPins+0x74>
    1528:	50 c2       	rjmp	.+1184   	; 0x19ca <DIO_u8SetValueToAllPins+0x4fa>
    152a:	2a 85       	ldd	r18, Y+10	; 0x0a
    152c:	3b 85       	ldd	r19, Y+11	; 0x0b
    152e:	22 30       	cpi	r18, 0x02	; 2
    1530:	31 05       	cpc	r19, r1
    1532:	09 f4       	brne	.+2      	; 0x1536 <DIO_u8SetValueToAllPins+0x66>
    1534:	29 c1       	rjmp	.+594    	; 0x1788 <DIO_u8SetValueToAllPins+0x2b8>
    1536:	8a 85       	ldd	r24, Y+10	; 0x0a
    1538:	9b 85       	ldd	r25, Y+11	; 0x0b
    153a:	83 30       	cpi	r24, 0x03	; 3
    153c:	91 05       	cpc	r25, r1
    153e:	09 f4       	brne	.+2      	; 0x1542 <DIO_u8SetValueToAllPins+0x72>
    1540:	b4 c1       	rjmp	.+872    	; 0x18aa <DIO_u8SetValueToAllPins+0x3da>
    1542:	43 c2       	rjmp	.+1158   	; 0x19ca <DIO_u8SetValueToAllPins+0x4fa>
	{
	case DIO_u8_PORTA:
		if (Copy_u8Pin0 == DIO_u8_HIGH)
    1544:	8a 81       	ldd	r24, Y+2	; 0x02
    1546:	81 30       	cpi	r24, 0x01	; 1
    1548:	41 f4       	brne	.+16     	; 0x155a <DIO_u8SetValueToAllPins+0x8a>
		{
			SET_BIT(DIO_u8_PORTA_REG, DIO_u8_PIN0);
    154a:	ab e3       	ldi	r26, 0x3B	; 59
    154c:	b0 e0       	ldi	r27, 0x00	; 0
    154e:	eb e3       	ldi	r30, 0x3B	; 59
    1550:	f0 e0       	ldi	r31, 0x00	; 0
    1552:	80 81       	ld	r24, Z
    1554:	81 60       	ori	r24, 0x01	; 1
    1556:	8c 93       	st	X, r24
    1558:	07 c0       	rjmp	.+14     	; 0x1568 <DIO_u8SetValueToAllPins+0x98>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTA_REG, DIO_u8_PIN0);
    155a:	ab e3       	ldi	r26, 0x3B	; 59
    155c:	b0 e0       	ldi	r27, 0x00	; 0
    155e:	eb e3       	ldi	r30, 0x3B	; 59
    1560:	f0 e0       	ldi	r31, 0x00	; 0
    1562:	80 81       	ld	r24, Z
    1564:	8e 7f       	andi	r24, 0xFE	; 254
    1566:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin1 == DIO_u8_HIGH)
    1568:	8b 81       	ldd	r24, Y+3	; 0x03
    156a:	81 30       	cpi	r24, 0x01	; 1
    156c:	41 f4       	brne	.+16     	; 0x157e <DIO_u8SetValueToAllPins+0xae>
		{
			SET_BIT(DIO_u8_PORTA_REG, DIO_u8_PIN1);
    156e:	ab e3       	ldi	r26, 0x3B	; 59
    1570:	b0 e0       	ldi	r27, 0x00	; 0
    1572:	eb e3       	ldi	r30, 0x3B	; 59
    1574:	f0 e0       	ldi	r31, 0x00	; 0
    1576:	80 81       	ld	r24, Z
    1578:	82 60       	ori	r24, 0x02	; 2
    157a:	8c 93       	st	X, r24
    157c:	07 c0       	rjmp	.+14     	; 0x158c <DIO_u8SetValueToAllPins+0xbc>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTA_REG, DIO_u8_PIN1);
    157e:	ab e3       	ldi	r26, 0x3B	; 59
    1580:	b0 e0       	ldi	r27, 0x00	; 0
    1582:	eb e3       	ldi	r30, 0x3B	; 59
    1584:	f0 e0       	ldi	r31, 0x00	; 0
    1586:	80 81       	ld	r24, Z
    1588:	8d 7f       	andi	r24, 0xFD	; 253
    158a:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin2 == DIO_u8_HIGH)
    158c:	8c 81       	ldd	r24, Y+4	; 0x04
    158e:	81 30       	cpi	r24, 0x01	; 1
    1590:	41 f4       	brne	.+16     	; 0x15a2 <DIO_u8SetValueToAllPins+0xd2>
		{
			SET_BIT(DIO_u8_PORTA_REG, DIO_u8_PIN2);
    1592:	ab e3       	ldi	r26, 0x3B	; 59
    1594:	b0 e0       	ldi	r27, 0x00	; 0
    1596:	eb e3       	ldi	r30, 0x3B	; 59
    1598:	f0 e0       	ldi	r31, 0x00	; 0
    159a:	80 81       	ld	r24, Z
    159c:	84 60       	ori	r24, 0x04	; 4
    159e:	8c 93       	st	X, r24
    15a0:	07 c0       	rjmp	.+14     	; 0x15b0 <DIO_u8SetValueToAllPins+0xe0>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTA_REG, DIO_u8_PIN2);
    15a2:	ab e3       	ldi	r26, 0x3B	; 59
    15a4:	b0 e0       	ldi	r27, 0x00	; 0
    15a6:	eb e3       	ldi	r30, 0x3B	; 59
    15a8:	f0 e0       	ldi	r31, 0x00	; 0
    15aa:	80 81       	ld	r24, Z
    15ac:	8b 7f       	andi	r24, 0xFB	; 251
    15ae:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin3 == DIO_u8_HIGH)
    15b0:	8d 81       	ldd	r24, Y+5	; 0x05
    15b2:	81 30       	cpi	r24, 0x01	; 1
    15b4:	41 f4       	brne	.+16     	; 0x15c6 <DIO_u8SetValueToAllPins+0xf6>
		{
			SET_BIT(DIO_u8_PORTA_REG, DIO_u8_PIN3);
    15b6:	ab e3       	ldi	r26, 0x3B	; 59
    15b8:	b0 e0       	ldi	r27, 0x00	; 0
    15ba:	eb e3       	ldi	r30, 0x3B	; 59
    15bc:	f0 e0       	ldi	r31, 0x00	; 0
    15be:	80 81       	ld	r24, Z
    15c0:	88 60       	ori	r24, 0x08	; 8
    15c2:	8c 93       	st	X, r24
    15c4:	07 c0       	rjmp	.+14     	; 0x15d4 <DIO_u8SetValueToAllPins+0x104>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTA_REG, DIO_u8_PIN3);
    15c6:	ab e3       	ldi	r26, 0x3B	; 59
    15c8:	b0 e0       	ldi	r27, 0x00	; 0
    15ca:	eb e3       	ldi	r30, 0x3B	; 59
    15cc:	f0 e0       	ldi	r31, 0x00	; 0
    15ce:	80 81       	ld	r24, Z
    15d0:	87 7f       	andi	r24, 0xF7	; 247
    15d2:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin4 == DIO_u8_HIGH)
    15d4:	8e 81       	ldd	r24, Y+6	; 0x06
    15d6:	81 30       	cpi	r24, 0x01	; 1
    15d8:	41 f4       	brne	.+16     	; 0x15ea <DIO_u8SetValueToAllPins+0x11a>
		{
			SET_BIT(DIO_u8_PORTA_REG, DIO_u8_PIN4);
    15da:	ab e3       	ldi	r26, 0x3B	; 59
    15dc:	b0 e0       	ldi	r27, 0x00	; 0
    15de:	eb e3       	ldi	r30, 0x3B	; 59
    15e0:	f0 e0       	ldi	r31, 0x00	; 0
    15e2:	80 81       	ld	r24, Z
    15e4:	80 61       	ori	r24, 0x10	; 16
    15e6:	8c 93       	st	X, r24
    15e8:	07 c0       	rjmp	.+14     	; 0x15f8 <DIO_u8SetValueToAllPins+0x128>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTA_REG, DIO_u8_PIN4);
    15ea:	ab e3       	ldi	r26, 0x3B	; 59
    15ec:	b0 e0       	ldi	r27, 0x00	; 0
    15ee:	eb e3       	ldi	r30, 0x3B	; 59
    15f0:	f0 e0       	ldi	r31, 0x00	; 0
    15f2:	80 81       	ld	r24, Z
    15f4:	8f 7e       	andi	r24, 0xEF	; 239
    15f6:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin5 == DIO_u8_HIGH)
    15f8:	8f 81       	ldd	r24, Y+7	; 0x07
    15fa:	81 30       	cpi	r24, 0x01	; 1
    15fc:	41 f4       	brne	.+16     	; 0x160e <DIO_u8SetValueToAllPins+0x13e>
		{
			SET_BIT(DIO_u8_PORTA_REG, DIO_u8_PIN5);
    15fe:	ab e3       	ldi	r26, 0x3B	; 59
    1600:	b0 e0       	ldi	r27, 0x00	; 0
    1602:	eb e3       	ldi	r30, 0x3B	; 59
    1604:	f0 e0       	ldi	r31, 0x00	; 0
    1606:	80 81       	ld	r24, Z
    1608:	80 62       	ori	r24, 0x20	; 32
    160a:	8c 93       	st	X, r24
    160c:	07 c0       	rjmp	.+14     	; 0x161c <DIO_u8SetValueToAllPins+0x14c>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTA_REG, DIO_u8_PIN5);
    160e:	ab e3       	ldi	r26, 0x3B	; 59
    1610:	b0 e0       	ldi	r27, 0x00	; 0
    1612:	eb e3       	ldi	r30, 0x3B	; 59
    1614:	f0 e0       	ldi	r31, 0x00	; 0
    1616:	80 81       	ld	r24, Z
    1618:	8f 7d       	andi	r24, 0xDF	; 223
    161a:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin6 == DIO_u8_HIGH)
    161c:	88 85       	ldd	r24, Y+8	; 0x08
    161e:	81 30       	cpi	r24, 0x01	; 1
    1620:	41 f4       	brne	.+16     	; 0x1632 <DIO_u8SetValueToAllPins+0x162>
		{
			SET_BIT(DIO_u8_PORTA_REG, DIO_u8_PIN6);
    1622:	ab e3       	ldi	r26, 0x3B	; 59
    1624:	b0 e0       	ldi	r27, 0x00	; 0
    1626:	eb e3       	ldi	r30, 0x3B	; 59
    1628:	f0 e0       	ldi	r31, 0x00	; 0
    162a:	80 81       	ld	r24, Z
    162c:	80 64       	ori	r24, 0x40	; 64
    162e:	8c 93       	st	X, r24
    1630:	07 c0       	rjmp	.+14     	; 0x1640 <DIO_u8SetValueToAllPins+0x170>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTA_REG, DIO_u8_PIN6);
    1632:	ab e3       	ldi	r26, 0x3B	; 59
    1634:	b0 e0       	ldi	r27, 0x00	; 0
    1636:	eb e3       	ldi	r30, 0x3B	; 59
    1638:	f0 e0       	ldi	r31, 0x00	; 0
    163a:	80 81       	ld	r24, Z
    163c:	8f 7b       	andi	r24, 0xBF	; 191
    163e:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin7 == DIO_u8_HIGH)
    1640:	89 85       	ldd	r24, Y+9	; 0x09
    1642:	81 30       	cpi	r24, 0x01	; 1
    1644:	41 f4       	brne	.+16     	; 0x1656 <DIO_u8SetValueToAllPins+0x186>
		{
			SET_BIT(DIO_u8_PORTA_REG, DIO_u8_PIN7);
    1646:	ab e3       	ldi	r26, 0x3B	; 59
    1648:	b0 e0       	ldi	r27, 0x00	; 0
    164a:	eb e3       	ldi	r30, 0x3B	; 59
    164c:	f0 e0       	ldi	r31, 0x00	; 0
    164e:	80 81       	ld	r24, Z
    1650:	80 68       	ori	r24, 0x80	; 128
    1652:	8c 93       	st	X, r24
    1654:	ba c1       	rjmp	.+884    	; 0x19ca <DIO_u8SetValueToAllPins+0x4fa>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTA_REG, DIO_u8_PIN7);
    1656:	ab e3       	ldi	r26, 0x3B	; 59
    1658:	b0 e0       	ldi	r27, 0x00	; 0
    165a:	eb e3       	ldi	r30, 0x3B	; 59
    165c:	f0 e0       	ldi	r31, 0x00	; 0
    165e:	80 81       	ld	r24, Z
    1660:	8f 77       	andi	r24, 0x7F	; 127
    1662:	8c 93       	st	X, r24
    1664:	b2 c1       	rjmp	.+868    	; 0x19ca <DIO_u8SetValueToAllPins+0x4fa>
		}
		break;

	case DIO_u8_PORTB:
		if (Copy_u8Pin0 == DIO_u8_HIGH)
    1666:	8a 81       	ldd	r24, Y+2	; 0x02
    1668:	81 30       	cpi	r24, 0x01	; 1
    166a:	41 f4       	brne	.+16     	; 0x167c <DIO_u8SetValueToAllPins+0x1ac>
		{
			SET_BIT(DIO_u8_PORTB_REG, DIO_u8_PIN0);
    166c:	a8 e3       	ldi	r26, 0x38	; 56
    166e:	b0 e0       	ldi	r27, 0x00	; 0
    1670:	e8 e3       	ldi	r30, 0x38	; 56
    1672:	f0 e0       	ldi	r31, 0x00	; 0
    1674:	80 81       	ld	r24, Z
    1676:	81 60       	ori	r24, 0x01	; 1
    1678:	8c 93       	st	X, r24
    167a:	07 c0       	rjmp	.+14     	; 0x168a <DIO_u8SetValueToAllPins+0x1ba>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTB_REG, DIO_u8_PIN0);
    167c:	a8 e3       	ldi	r26, 0x38	; 56
    167e:	b0 e0       	ldi	r27, 0x00	; 0
    1680:	e8 e3       	ldi	r30, 0x38	; 56
    1682:	f0 e0       	ldi	r31, 0x00	; 0
    1684:	80 81       	ld	r24, Z
    1686:	8e 7f       	andi	r24, 0xFE	; 254
    1688:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin1 == DIO_u8_HIGH)
    168a:	8b 81       	ldd	r24, Y+3	; 0x03
    168c:	81 30       	cpi	r24, 0x01	; 1
    168e:	41 f4       	brne	.+16     	; 0x16a0 <DIO_u8SetValueToAllPins+0x1d0>
		{
			SET_BIT(DIO_u8_PORTB_REG, DIO_u8_PIN1);
    1690:	a8 e3       	ldi	r26, 0x38	; 56
    1692:	b0 e0       	ldi	r27, 0x00	; 0
    1694:	e8 e3       	ldi	r30, 0x38	; 56
    1696:	f0 e0       	ldi	r31, 0x00	; 0
    1698:	80 81       	ld	r24, Z
    169a:	82 60       	ori	r24, 0x02	; 2
    169c:	8c 93       	st	X, r24
    169e:	07 c0       	rjmp	.+14     	; 0x16ae <DIO_u8SetValueToAllPins+0x1de>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTB_REG, DIO_u8_PIN1);
    16a0:	a8 e3       	ldi	r26, 0x38	; 56
    16a2:	b0 e0       	ldi	r27, 0x00	; 0
    16a4:	e8 e3       	ldi	r30, 0x38	; 56
    16a6:	f0 e0       	ldi	r31, 0x00	; 0
    16a8:	80 81       	ld	r24, Z
    16aa:	8d 7f       	andi	r24, 0xFD	; 253
    16ac:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin2 == DIO_u8_HIGH)
    16ae:	8c 81       	ldd	r24, Y+4	; 0x04
    16b0:	81 30       	cpi	r24, 0x01	; 1
    16b2:	41 f4       	brne	.+16     	; 0x16c4 <DIO_u8SetValueToAllPins+0x1f4>
		{
			SET_BIT(DIO_u8_PORTB_REG, DIO_u8_PIN2);
    16b4:	a8 e3       	ldi	r26, 0x38	; 56
    16b6:	b0 e0       	ldi	r27, 0x00	; 0
    16b8:	e8 e3       	ldi	r30, 0x38	; 56
    16ba:	f0 e0       	ldi	r31, 0x00	; 0
    16bc:	80 81       	ld	r24, Z
    16be:	84 60       	ori	r24, 0x04	; 4
    16c0:	8c 93       	st	X, r24
    16c2:	07 c0       	rjmp	.+14     	; 0x16d2 <DIO_u8SetValueToAllPins+0x202>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTB_REG, DIO_u8_PIN2);
    16c4:	a8 e3       	ldi	r26, 0x38	; 56
    16c6:	b0 e0       	ldi	r27, 0x00	; 0
    16c8:	e8 e3       	ldi	r30, 0x38	; 56
    16ca:	f0 e0       	ldi	r31, 0x00	; 0
    16cc:	80 81       	ld	r24, Z
    16ce:	8b 7f       	andi	r24, 0xFB	; 251
    16d0:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin3 == DIO_u8_HIGH)
    16d2:	8d 81       	ldd	r24, Y+5	; 0x05
    16d4:	81 30       	cpi	r24, 0x01	; 1
    16d6:	41 f4       	brne	.+16     	; 0x16e8 <DIO_u8SetValueToAllPins+0x218>
		{
			SET_BIT(DIO_u8_PORTB_REG, DIO_u8_PIN3);
    16d8:	a8 e3       	ldi	r26, 0x38	; 56
    16da:	b0 e0       	ldi	r27, 0x00	; 0
    16dc:	e8 e3       	ldi	r30, 0x38	; 56
    16de:	f0 e0       	ldi	r31, 0x00	; 0
    16e0:	80 81       	ld	r24, Z
    16e2:	88 60       	ori	r24, 0x08	; 8
    16e4:	8c 93       	st	X, r24
    16e6:	07 c0       	rjmp	.+14     	; 0x16f6 <DIO_u8SetValueToAllPins+0x226>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTB_REG, DIO_u8_PIN3);
    16e8:	a8 e3       	ldi	r26, 0x38	; 56
    16ea:	b0 e0       	ldi	r27, 0x00	; 0
    16ec:	e8 e3       	ldi	r30, 0x38	; 56
    16ee:	f0 e0       	ldi	r31, 0x00	; 0
    16f0:	80 81       	ld	r24, Z
    16f2:	87 7f       	andi	r24, 0xF7	; 247
    16f4:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin4 == DIO_u8_HIGH)
    16f6:	8e 81       	ldd	r24, Y+6	; 0x06
    16f8:	81 30       	cpi	r24, 0x01	; 1
    16fa:	41 f4       	brne	.+16     	; 0x170c <DIO_u8SetValueToAllPins+0x23c>
		{
			SET_BIT(DIO_u8_PORTB_REG, DIO_u8_PIN4);
    16fc:	a8 e3       	ldi	r26, 0x38	; 56
    16fe:	b0 e0       	ldi	r27, 0x00	; 0
    1700:	e8 e3       	ldi	r30, 0x38	; 56
    1702:	f0 e0       	ldi	r31, 0x00	; 0
    1704:	80 81       	ld	r24, Z
    1706:	80 61       	ori	r24, 0x10	; 16
    1708:	8c 93       	st	X, r24
    170a:	07 c0       	rjmp	.+14     	; 0x171a <DIO_u8SetValueToAllPins+0x24a>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTB_REG, DIO_u8_PIN4);
    170c:	a8 e3       	ldi	r26, 0x38	; 56
    170e:	b0 e0       	ldi	r27, 0x00	; 0
    1710:	e8 e3       	ldi	r30, 0x38	; 56
    1712:	f0 e0       	ldi	r31, 0x00	; 0
    1714:	80 81       	ld	r24, Z
    1716:	8f 7e       	andi	r24, 0xEF	; 239
    1718:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin5 == DIO_u8_HIGH)
    171a:	8f 81       	ldd	r24, Y+7	; 0x07
    171c:	81 30       	cpi	r24, 0x01	; 1
    171e:	41 f4       	brne	.+16     	; 0x1730 <DIO_u8SetValueToAllPins+0x260>
		{
			SET_BIT(DIO_u8_PORTB_REG, DIO_u8_PIN5);
    1720:	a8 e3       	ldi	r26, 0x38	; 56
    1722:	b0 e0       	ldi	r27, 0x00	; 0
    1724:	e8 e3       	ldi	r30, 0x38	; 56
    1726:	f0 e0       	ldi	r31, 0x00	; 0
    1728:	80 81       	ld	r24, Z
    172a:	80 62       	ori	r24, 0x20	; 32
    172c:	8c 93       	st	X, r24
    172e:	07 c0       	rjmp	.+14     	; 0x173e <DIO_u8SetValueToAllPins+0x26e>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTB_REG, DIO_u8_PIN5);
    1730:	a8 e3       	ldi	r26, 0x38	; 56
    1732:	b0 e0       	ldi	r27, 0x00	; 0
    1734:	e8 e3       	ldi	r30, 0x38	; 56
    1736:	f0 e0       	ldi	r31, 0x00	; 0
    1738:	80 81       	ld	r24, Z
    173a:	8f 7d       	andi	r24, 0xDF	; 223
    173c:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin6 == DIO_u8_HIGH)
    173e:	88 85       	ldd	r24, Y+8	; 0x08
    1740:	81 30       	cpi	r24, 0x01	; 1
    1742:	41 f4       	brne	.+16     	; 0x1754 <DIO_u8SetValueToAllPins+0x284>
		{
			SET_BIT(DIO_u8_PORTB_REG, DIO_u8_PIN6);
    1744:	a8 e3       	ldi	r26, 0x38	; 56
    1746:	b0 e0       	ldi	r27, 0x00	; 0
    1748:	e8 e3       	ldi	r30, 0x38	; 56
    174a:	f0 e0       	ldi	r31, 0x00	; 0
    174c:	80 81       	ld	r24, Z
    174e:	80 64       	ori	r24, 0x40	; 64
    1750:	8c 93       	st	X, r24
    1752:	07 c0       	rjmp	.+14     	; 0x1762 <DIO_u8SetValueToAllPins+0x292>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTB_REG, DIO_u8_PIN6);
    1754:	a8 e3       	ldi	r26, 0x38	; 56
    1756:	b0 e0       	ldi	r27, 0x00	; 0
    1758:	e8 e3       	ldi	r30, 0x38	; 56
    175a:	f0 e0       	ldi	r31, 0x00	; 0
    175c:	80 81       	ld	r24, Z
    175e:	8f 7b       	andi	r24, 0xBF	; 191
    1760:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin7 == DIO_u8_HIGH)
    1762:	89 85       	ldd	r24, Y+9	; 0x09
    1764:	81 30       	cpi	r24, 0x01	; 1
    1766:	41 f4       	brne	.+16     	; 0x1778 <DIO_u8SetValueToAllPins+0x2a8>
		{
			SET_BIT(DIO_u8_PORTB_REG, DIO_u8_PIN7);
    1768:	a8 e3       	ldi	r26, 0x38	; 56
    176a:	b0 e0       	ldi	r27, 0x00	; 0
    176c:	e8 e3       	ldi	r30, 0x38	; 56
    176e:	f0 e0       	ldi	r31, 0x00	; 0
    1770:	80 81       	ld	r24, Z
    1772:	80 68       	ori	r24, 0x80	; 128
    1774:	8c 93       	st	X, r24
    1776:	29 c1       	rjmp	.+594    	; 0x19ca <DIO_u8SetValueToAllPins+0x4fa>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTB_REG, DIO_u8_PIN7);
    1778:	a8 e3       	ldi	r26, 0x38	; 56
    177a:	b0 e0       	ldi	r27, 0x00	; 0
    177c:	e8 e3       	ldi	r30, 0x38	; 56
    177e:	f0 e0       	ldi	r31, 0x00	; 0
    1780:	80 81       	ld	r24, Z
    1782:	8f 77       	andi	r24, 0x7F	; 127
    1784:	8c 93       	st	X, r24
    1786:	21 c1       	rjmp	.+578    	; 0x19ca <DIO_u8SetValueToAllPins+0x4fa>
		}
		break;

	case DIO_u8_PORTC:
		if (Copy_u8Pin0 == DIO_u8_HIGH)
    1788:	8a 81       	ldd	r24, Y+2	; 0x02
    178a:	81 30       	cpi	r24, 0x01	; 1
    178c:	41 f4       	brne	.+16     	; 0x179e <DIO_u8SetValueToAllPins+0x2ce>
		{
			SET_BIT(DIO_u8_PORTC_REG, DIO_u8_PIN0);
    178e:	a5 e3       	ldi	r26, 0x35	; 53
    1790:	b0 e0       	ldi	r27, 0x00	; 0
    1792:	e5 e3       	ldi	r30, 0x35	; 53
    1794:	f0 e0       	ldi	r31, 0x00	; 0
    1796:	80 81       	ld	r24, Z
    1798:	81 60       	ori	r24, 0x01	; 1
    179a:	8c 93       	st	X, r24
    179c:	07 c0       	rjmp	.+14     	; 0x17ac <DIO_u8SetValueToAllPins+0x2dc>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTC_REG, DIO_u8_PIN0);
    179e:	a5 e3       	ldi	r26, 0x35	; 53
    17a0:	b0 e0       	ldi	r27, 0x00	; 0
    17a2:	e5 e3       	ldi	r30, 0x35	; 53
    17a4:	f0 e0       	ldi	r31, 0x00	; 0
    17a6:	80 81       	ld	r24, Z
    17a8:	8e 7f       	andi	r24, 0xFE	; 254
    17aa:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin1 == DIO_u8_HIGH)
    17ac:	8b 81       	ldd	r24, Y+3	; 0x03
    17ae:	81 30       	cpi	r24, 0x01	; 1
    17b0:	41 f4       	brne	.+16     	; 0x17c2 <DIO_u8SetValueToAllPins+0x2f2>
		{
			SET_BIT(DIO_u8_PORTC_REG, DIO_u8_PIN1);
    17b2:	a5 e3       	ldi	r26, 0x35	; 53
    17b4:	b0 e0       	ldi	r27, 0x00	; 0
    17b6:	e5 e3       	ldi	r30, 0x35	; 53
    17b8:	f0 e0       	ldi	r31, 0x00	; 0
    17ba:	80 81       	ld	r24, Z
    17bc:	82 60       	ori	r24, 0x02	; 2
    17be:	8c 93       	st	X, r24
    17c0:	07 c0       	rjmp	.+14     	; 0x17d0 <DIO_u8SetValueToAllPins+0x300>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTC_REG, DIO_u8_PIN1);
    17c2:	a5 e3       	ldi	r26, 0x35	; 53
    17c4:	b0 e0       	ldi	r27, 0x00	; 0
    17c6:	e5 e3       	ldi	r30, 0x35	; 53
    17c8:	f0 e0       	ldi	r31, 0x00	; 0
    17ca:	80 81       	ld	r24, Z
    17cc:	8d 7f       	andi	r24, 0xFD	; 253
    17ce:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin2 == DIO_u8_HIGH)
    17d0:	8c 81       	ldd	r24, Y+4	; 0x04
    17d2:	81 30       	cpi	r24, 0x01	; 1
    17d4:	41 f4       	brne	.+16     	; 0x17e6 <DIO_u8SetValueToAllPins+0x316>
		{
			SET_BIT(DIO_u8_PORTC_REG, DIO_u8_PIN2);
    17d6:	a5 e3       	ldi	r26, 0x35	; 53
    17d8:	b0 e0       	ldi	r27, 0x00	; 0
    17da:	e5 e3       	ldi	r30, 0x35	; 53
    17dc:	f0 e0       	ldi	r31, 0x00	; 0
    17de:	80 81       	ld	r24, Z
    17e0:	84 60       	ori	r24, 0x04	; 4
    17e2:	8c 93       	st	X, r24
    17e4:	07 c0       	rjmp	.+14     	; 0x17f4 <DIO_u8SetValueToAllPins+0x324>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTC_REG, DIO_u8_PIN2);
    17e6:	a5 e3       	ldi	r26, 0x35	; 53
    17e8:	b0 e0       	ldi	r27, 0x00	; 0
    17ea:	e5 e3       	ldi	r30, 0x35	; 53
    17ec:	f0 e0       	ldi	r31, 0x00	; 0
    17ee:	80 81       	ld	r24, Z
    17f0:	8b 7f       	andi	r24, 0xFB	; 251
    17f2:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin3 == DIO_u8_HIGH)
    17f4:	8d 81       	ldd	r24, Y+5	; 0x05
    17f6:	81 30       	cpi	r24, 0x01	; 1
    17f8:	41 f4       	brne	.+16     	; 0x180a <DIO_u8SetValueToAllPins+0x33a>
		{
			SET_BIT(DIO_u8_PORTC_REG, DIO_u8_PIN3);
    17fa:	a5 e3       	ldi	r26, 0x35	; 53
    17fc:	b0 e0       	ldi	r27, 0x00	; 0
    17fe:	e5 e3       	ldi	r30, 0x35	; 53
    1800:	f0 e0       	ldi	r31, 0x00	; 0
    1802:	80 81       	ld	r24, Z
    1804:	88 60       	ori	r24, 0x08	; 8
    1806:	8c 93       	st	X, r24
    1808:	07 c0       	rjmp	.+14     	; 0x1818 <DIO_u8SetValueToAllPins+0x348>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTC_REG, DIO_u8_PIN3);
    180a:	a5 e3       	ldi	r26, 0x35	; 53
    180c:	b0 e0       	ldi	r27, 0x00	; 0
    180e:	e5 e3       	ldi	r30, 0x35	; 53
    1810:	f0 e0       	ldi	r31, 0x00	; 0
    1812:	80 81       	ld	r24, Z
    1814:	87 7f       	andi	r24, 0xF7	; 247
    1816:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin4 == DIO_u8_HIGH)
    1818:	8e 81       	ldd	r24, Y+6	; 0x06
    181a:	81 30       	cpi	r24, 0x01	; 1
    181c:	41 f4       	brne	.+16     	; 0x182e <DIO_u8SetValueToAllPins+0x35e>
		{
			SET_BIT(DIO_u8_PORTC_REG, DIO_u8_PIN4);
    181e:	a5 e3       	ldi	r26, 0x35	; 53
    1820:	b0 e0       	ldi	r27, 0x00	; 0
    1822:	e5 e3       	ldi	r30, 0x35	; 53
    1824:	f0 e0       	ldi	r31, 0x00	; 0
    1826:	80 81       	ld	r24, Z
    1828:	80 61       	ori	r24, 0x10	; 16
    182a:	8c 93       	st	X, r24
    182c:	07 c0       	rjmp	.+14     	; 0x183c <DIO_u8SetValueToAllPins+0x36c>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTC_REG, DIO_u8_PIN4);
    182e:	a5 e3       	ldi	r26, 0x35	; 53
    1830:	b0 e0       	ldi	r27, 0x00	; 0
    1832:	e5 e3       	ldi	r30, 0x35	; 53
    1834:	f0 e0       	ldi	r31, 0x00	; 0
    1836:	80 81       	ld	r24, Z
    1838:	8f 7e       	andi	r24, 0xEF	; 239
    183a:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin5 == DIO_u8_HIGH)
    183c:	8f 81       	ldd	r24, Y+7	; 0x07
    183e:	81 30       	cpi	r24, 0x01	; 1
    1840:	41 f4       	brne	.+16     	; 0x1852 <DIO_u8SetValueToAllPins+0x382>
		{
			SET_BIT(DIO_u8_PORTC_REG, DIO_u8_PIN5);
    1842:	a5 e3       	ldi	r26, 0x35	; 53
    1844:	b0 e0       	ldi	r27, 0x00	; 0
    1846:	e5 e3       	ldi	r30, 0x35	; 53
    1848:	f0 e0       	ldi	r31, 0x00	; 0
    184a:	80 81       	ld	r24, Z
    184c:	80 62       	ori	r24, 0x20	; 32
    184e:	8c 93       	st	X, r24
    1850:	07 c0       	rjmp	.+14     	; 0x1860 <DIO_u8SetValueToAllPins+0x390>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTC_REG, DIO_u8_PIN5);
    1852:	a5 e3       	ldi	r26, 0x35	; 53
    1854:	b0 e0       	ldi	r27, 0x00	; 0
    1856:	e5 e3       	ldi	r30, 0x35	; 53
    1858:	f0 e0       	ldi	r31, 0x00	; 0
    185a:	80 81       	ld	r24, Z
    185c:	8f 7d       	andi	r24, 0xDF	; 223
    185e:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin6 == DIO_u8_HIGH)
    1860:	88 85       	ldd	r24, Y+8	; 0x08
    1862:	81 30       	cpi	r24, 0x01	; 1
    1864:	41 f4       	brne	.+16     	; 0x1876 <DIO_u8SetValueToAllPins+0x3a6>
		{
			SET_BIT(DIO_u8_PORTC_REG, DIO_u8_PIN6);
    1866:	a5 e3       	ldi	r26, 0x35	; 53
    1868:	b0 e0       	ldi	r27, 0x00	; 0
    186a:	e5 e3       	ldi	r30, 0x35	; 53
    186c:	f0 e0       	ldi	r31, 0x00	; 0
    186e:	80 81       	ld	r24, Z
    1870:	80 64       	ori	r24, 0x40	; 64
    1872:	8c 93       	st	X, r24
    1874:	07 c0       	rjmp	.+14     	; 0x1884 <DIO_u8SetValueToAllPins+0x3b4>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTC_REG, DIO_u8_PIN6);
    1876:	a5 e3       	ldi	r26, 0x35	; 53
    1878:	b0 e0       	ldi	r27, 0x00	; 0
    187a:	e5 e3       	ldi	r30, 0x35	; 53
    187c:	f0 e0       	ldi	r31, 0x00	; 0
    187e:	80 81       	ld	r24, Z
    1880:	8f 7b       	andi	r24, 0xBF	; 191
    1882:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin7 == DIO_u8_HIGH)
    1884:	89 85       	ldd	r24, Y+9	; 0x09
    1886:	81 30       	cpi	r24, 0x01	; 1
    1888:	41 f4       	brne	.+16     	; 0x189a <DIO_u8SetValueToAllPins+0x3ca>
		{
			SET_BIT(DIO_u8_PORTC_REG, DIO_u8_PIN7);
    188a:	a5 e3       	ldi	r26, 0x35	; 53
    188c:	b0 e0       	ldi	r27, 0x00	; 0
    188e:	e5 e3       	ldi	r30, 0x35	; 53
    1890:	f0 e0       	ldi	r31, 0x00	; 0
    1892:	80 81       	ld	r24, Z
    1894:	80 68       	ori	r24, 0x80	; 128
    1896:	8c 93       	st	X, r24
    1898:	98 c0       	rjmp	.+304    	; 0x19ca <DIO_u8SetValueToAllPins+0x4fa>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTC_REG, DIO_u8_PIN7);
    189a:	a5 e3       	ldi	r26, 0x35	; 53
    189c:	b0 e0       	ldi	r27, 0x00	; 0
    189e:	e5 e3       	ldi	r30, 0x35	; 53
    18a0:	f0 e0       	ldi	r31, 0x00	; 0
    18a2:	80 81       	ld	r24, Z
    18a4:	8f 77       	andi	r24, 0x7F	; 127
    18a6:	8c 93       	st	X, r24
    18a8:	90 c0       	rjmp	.+288    	; 0x19ca <DIO_u8SetValueToAllPins+0x4fa>
		}
		break;

	case DIO_u8_PORTD:
		if (Copy_u8Pin0 == DIO_u8_HIGH)
    18aa:	8a 81       	ldd	r24, Y+2	; 0x02
    18ac:	81 30       	cpi	r24, 0x01	; 1
    18ae:	41 f4       	brne	.+16     	; 0x18c0 <DIO_u8SetValueToAllPins+0x3f0>
		{
			SET_BIT(DIO_u8_PORTD_REG, DIO_u8_PIN0);
    18b0:	a2 e3       	ldi	r26, 0x32	; 50
    18b2:	b0 e0       	ldi	r27, 0x00	; 0
    18b4:	e2 e3       	ldi	r30, 0x32	; 50
    18b6:	f0 e0       	ldi	r31, 0x00	; 0
    18b8:	80 81       	ld	r24, Z
    18ba:	81 60       	ori	r24, 0x01	; 1
    18bc:	8c 93       	st	X, r24
    18be:	07 c0       	rjmp	.+14     	; 0x18ce <DIO_u8SetValueToAllPins+0x3fe>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTD_REG, DIO_u8_PIN0);
    18c0:	a2 e3       	ldi	r26, 0x32	; 50
    18c2:	b0 e0       	ldi	r27, 0x00	; 0
    18c4:	e2 e3       	ldi	r30, 0x32	; 50
    18c6:	f0 e0       	ldi	r31, 0x00	; 0
    18c8:	80 81       	ld	r24, Z
    18ca:	8e 7f       	andi	r24, 0xFE	; 254
    18cc:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin1 == DIO_u8_HIGH)
    18ce:	8b 81       	ldd	r24, Y+3	; 0x03
    18d0:	81 30       	cpi	r24, 0x01	; 1
    18d2:	41 f4       	brne	.+16     	; 0x18e4 <DIO_u8SetValueToAllPins+0x414>
		{
			SET_BIT(DIO_u8_PORTD_REG, DIO_u8_PIN1);
    18d4:	a2 e3       	ldi	r26, 0x32	; 50
    18d6:	b0 e0       	ldi	r27, 0x00	; 0
    18d8:	e2 e3       	ldi	r30, 0x32	; 50
    18da:	f0 e0       	ldi	r31, 0x00	; 0
    18dc:	80 81       	ld	r24, Z
    18de:	82 60       	ori	r24, 0x02	; 2
    18e0:	8c 93       	st	X, r24
    18e2:	07 c0       	rjmp	.+14     	; 0x18f2 <DIO_u8SetValueToAllPins+0x422>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTD_REG, DIO_u8_PIN1);
    18e4:	a2 e3       	ldi	r26, 0x32	; 50
    18e6:	b0 e0       	ldi	r27, 0x00	; 0
    18e8:	e2 e3       	ldi	r30, 0x32	; 50
    18ea:	f0 e0       	ldi	r31, 0x00	; 0
    18ec:	80 81       	ld	r24, Z
    18ee:	8d 7f       	andi	r24, 0xFD	; 253
    18f0:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin2 == DIO_u8_HIGH)
    18f2:	8c 81       	ldd	r24, Y+4	; 0x04
    18f4:	81 30       	cpi	r24, 0x01	; 1
    18f6:	41 f4       	brne	.+16     	; 0x1908 <DIO_u8SetValueToAllPins+0x438>
		{
			SET_BIT(DIO_u8_PORTD_REG, DIO_u8_PIN2);
    18f8:	a2 e3       	ldi	r26, 0x32	; 50
    18fa:	b0 e0       	ldi	r27, 0x00	; 0
    18fc:	e2 e3       	ldi	r30, 0x32	; 50
    18fe:	f0 e0       	ldi	r31, 0x00	; 0
    1900:	80 81       	ld	r24, Z
    1902:	84 60       	ori	r24, 0x04	; 4
    1904:	8c 93       	st	X, r24
    1906:	07 c0       	rjmp	.+14     	; 0x1916 <DIO_u8SetValueToAllPins+0x446>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTD_REG, DIO_u8_PIN2);
    1908:	a2 e3       	ldi	r26, 0x32	; 50
    190a:	b0 e0       	ldi	r27, 0x00	; 0
    190c:	e2 e3       	ldi	r30, 0x32	; 50
    190e:	f0 e0       	ldi	r31, 0x00	; 0
    1910:	80 81       	ld	r24, Z
    1912:	8b 7f       	andi	r24, 0xFB	; 251
    1914:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin3 == DIO_u8_HIGH)
    1916:	8d 81       	ldd	r24, Y+5	; 0x05
    1918:	81 30       	cpi	r24, 0x01	; 1
    191a:	41 f4       	brne	.+16     	; 0x192c <DIO_u8SetValueToAllPins+0x45c>
		{
			SET_BIT(DIO_u8_PORTD_REG, DIO_u8_PIN3);
    191c:	a2 e3       	ldi	r26, 0x32	; 50
    191e:	b0 e0       	ldi	r27, 0x00	; 0
    1920:	e2 e3       	ldi	r30, 0x32	; 50
    1922:	f0 e0       	ldi	r31, 0x00	; 0
    1924:	80 81       	ld	r24, Z
    1926:	88 60       	ori	r24, 0x08	; 8
    1928:	8c 93       	st	X, r24
    192a:	07 c0       	rjmp	.+14     	; 0x193a <DIO_u8SetValueToAllPins+0x46a>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTD_REG, DIO_u8_PIN3);
    192c:	a2 e3       	ldi	r26, 0x32	; 50
    192e:	b0 e0       	ldi	r27, 0x00	; 0
    1930:	e2 e3       	ldi	r30, 0x32	; 50
    1932:	f0 e0       	ldi	r31, 0x00	; 0
    1934:	80 81       	ld	r24, Z
    1936:	87 7f       	andi	r24, 0xF7	; 247
    1938:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin4 == DIO_u8_HIGH)
    193a:	8e 81       	ldd	r24, Y+6	; 0x06
    193c:	81 30       	cpi	r24, 0x01	; 1
    193e:	41 f4       	brne	.+16     	; 0x1950 <DIO_u8SetValueToAllPins+0x480>
		{
			SET_BIT(DIO_u8_PORTD_REG, DIO_u8_PIN4);
    1940:	a2 e3       	ldi	r26, 0x32	; 50
    1942:	b0 e0       	ldi	r27, 0x00	; 0
    1944:	e2 e3       	ldi	r30, 0x32	; 50
    1946:	f0 e0       	ldi	r31, 0x00	; 0
    1948:	80 81       	ld	r24, Z
    194a:	80 61       	ori	r24, 0x10	; 16
    194c:	8c 93       	st	X, r24
    194e:	07 c0       	rjmp	.+14     	; 0x195e <DIO_u8SetValueToAllPins+0x48e>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTD_REG, DIO_u8_PIN4);
    1950:	a2 e3       	ldi	r26, 0x32	; 50
    1952:	b0 e0       	ldi	r27, 0x00	; 0
    1954:	e2 e3       	ldi	r30, 0x32	; 50
    1956:	f0 e0       	ldi	r31, 0x00	; 0
    1958:	80 81       	ld	r24, Z
    195a:	8f 7e       	andi	r24, 0xEF	; 239
    195c:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin5 == DIO_u8_HIGH)
    195e:	8f 81       	ldd	r24, Y+7	; 0x07
    1960:	81 30       	cpi	r24, 0x01	; 1
    1962:	41 f4       	brne	.+16     	; 0x1974 <DIO_u8SetValueToAllPins+0x4a4>
		{
			SET_BIT(DIO_u8_PORTD_REG, DIO_u8_PIN5);
    1964:	a2 e3       	ldi	r26, 0x32	; 50
    1966:	b0 e0       	ldi	r27, 0x00	; 0
    1968:	e2 e3       	ldi	r30, 0x32	; 50
    196a:	f0 e0       	ldi	r31, 0x00	; 0
    196c:	80 81       	ld	r24, Z
    196e:	80 62       	ori	r24, 0x20	; 32
    1970:	8c 93       	st	X, r24
    1972:	07 c0       	rjmp	.+14     	; 0x1982 <DIO_u8SetValueToAllPins+0x4b2>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTD_REG, DIO_u8_PIN5);
    1974:	a2 e3       	ldi	r26, 0x32	; 50
    1976:	b0 e0       	ldi	r27, 0x00	; 0
    1978:	e2 e3       	ldi	r30, 0x32	; 50
    197a:	f0 e0       	ldi	r31, 0x00	; 0
    197c:	80 81       	ld	r24, Z
    197e:	8f 7d       	andi	r24, 0xDF	; 223
    1980:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin6 == DIO_u8_HIGH)
    1982:	88 85       	ldd	r24, Y+8	; 0x08
    1984:	81 30       	cpi	r24, 0x01	; 1
    1986:	41 f4       	brne	.+16     	; 0x1998 <DIO_u8SetValueToAllPins+0x4c8>
		{
			SET_BIT(DIO_u8_PORTD_REG, DIO_u8_PIN6);
    1988:	a2 e3       	ldi	r26, 0x32	; 50
    198a:	b0 e0       	ldi	r27, 0x00	; 0
    198c:	e2 e3       	ldi	r30, 0x32	; 50
    198e:	f0 e0       	ldi	r31, 0x00	; 0
    1990:	80 81       	ld	r24, Z
    1992:	80 64       	ori	r24, 0x40	; 64
    1994:	8c 93       	st	X, r24
    1996:	07 c0       	rjmp	.+14     	; 0x19a6 <DIO_u8SetValueToAllPins+0x4d6>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTD_REG, DIO_u8_PIN6);
    1998:	a2 e3       	ldi	r26, 0x32	; 50
    199a:	b0 e0       	ldi	r27, 0x00	; 0
    199c:	e2 e3       	ldi	r30, 0x32	; 50
    199e:	f0 e0       	ldi	r31, 0x00	; 0
    19a0:	80 81       	ld	r24, Z
    19a2:	8f 7b       	andi	r24, 0xBF	; 191
    19a4:	8c 93       	st	X, r24
		}

		if (Copy_u8Pin7 == DIO_u8_HIGH)
    19a6:	89 85       	ldd	r24, Y+9	; 0x09
    19a8:	81 30       	cpi	r24, 0x01	; 1
    19aa:	41 f4       	brne	.+16     	; 0x19bc <DIO_u8SetValueToAllPins+0x4ec>
		{
			SET_BIT(DIO_u8_PORTD_REG, DIO_u8_PIN7);
    19ac:	a2 e3       	ldi	r26, 0x32	; 50
    19ae:	b0 e0       	ldi	r27, 0x00	; 0
    19b0:	e2 e3       	ldi	r30, 0x32	; 50
    19b2:	f0 e0       	ldi	r31, 0x00	; 0
    19b4:	80 81       	ld	r24, Z
    19b6:	80 68       	ori	r24, 0x80	; 128
    19b8:	8c 93       	st	X, r24
    19ba:	07 c0       	rjmp	.+14     	; 0x19ca <DIO_u8SetValueToAllPins+0x4fa>
		}
		else
		{
			CLR_BIT(DIO_u8_PORTD_REG, DIO_u8_PIN7);
    19bc:	a2 e3       	ldi	r26, 0x32	; 50
    19be:	b0 e0       	ldi	r27, 0x00	; 0
    19c0:	e2 e3       	ldi	r30, 0x32	; 50
    19c2:	f0 e0       	ldi	r31, 0x00	; 0
    19c4:	80 81       	ld	r24, Z
    19c6:	8f 77       	andi	r24, 0x7F	; 127
    19c8:	8c 93       	st	X, r24
		}
		break;
	}
}
    19ca:	2c 96       	adiw	r28, 0x0c	; 12
    19cc:	0f b6       	in	r0, 0x3f	; 63
    19ce:	f8 94       	cli
    19d0:	de bf       	out	0x3e, r29	; 62
    19d2:	0f be       	out	0x3f, r0	; 63
    19d4:	cd bf       	out	0x3d, r28	; 61
    19d6:	cf 91       	pop	r28
    19d8:	df 91       	pop	r29
    19da:	0f 91       	pop	r16
    19dc:	ef 90       	pop	r14
    19de:	cf 90       	pop	r12
    19e0:	af 90       	pop	r10
    19e2:	8f 90       	pop	r8
    19e4:	08 95       	ret

000019e6 <main>:
#include <util/delay.h>

u8 Pin_Value0;
u8 Pin_Value1;
int main(void)
{
    19e6:	8f 92       	push	r8
    19e8:	af 92       	push	r10
    19ea:	cf 92       	push	r12
    19ec:	ef 92       	push	r14
    19ee:	0f 93       	push	r16
    19f0:	1f 93       	push	r17
    19f2:	df 93       	push	r29
    19f4:	cf 93       	push	r28
    19f6:	cd b7       	in	r28, 0x3d	; 61
    19f8:	de b7       	in	r29, 0x3e	; 62
    19fa:	cc 5f       	subi	r28, 0xFC	; 252
    19fc:	d0 40       	sbci	r29, 0x00	; 0
    19fe:	0f b6       	in	r0, 0x3f	; 63
    1a00:	f8 94       	cli
    1a02:	de bf       	out	0x3e, r29	; 62
    1a04:	0f be       	out	0x3f, r0	; 63
    1a06:	cd bf       	out	0x3d, r28	; 61
	DIO_u8SetPinDirection(0, 0, 0);
    1a08:	80 e0       	ldi	r24, 0x00	; 0
    1a0a:	60 e0       	ldi	r22, 0x00	; 0
    1a0c:	40 e0       	ldi	r20, 0x00	; 0
    1a0e:	0e 94 c4 05 	call	0xb88	; 0xb88 <DIO_u8SetPinDirection>
	DIO_u8SetPinDirection(0, 5, 0);
    1a12:	80 e0       	ldi	r24, 0x00	; 0
    1a14:	65 e0       	ldi	r22, 0x05	; 5
    1a16:	40 e0       	ldi	r20, 0x00	; 0
    1a18:	0e 94 c4 05 	call	0xb88	; 0xb88 <DIO_u8SetPinDirection>
	DIO_u8SetPortDirection(2, 1);
    1a1c:	82 e0       	ldi	r24, 0x02	; 2
    1a1e:	61 e0       	ldi	r22, 0x01	; 1
    1a20:	0e 94 dd 08 	call	0x11ba	; 0x11ba <DIO_u8SetPortDirection>

	while (1)
	{
		DIO_u8GetPinValue(0, 0, &Pin_Value0);
    1a24:	29 e6       	ldi	r18, 0x69	; 105
    1a26:	30 e0       	ldi	r19, 0x00	; 0
    1a28:	80 e0       	ldi	r24, 0x00	; 0
    1a2a:	60 e0       	ldi	r22, 0x00	; 0
    1a2c:	a9 01       	movw	r20, r18
    1a2e:	0e 94 1f 08 	call	0x103e	; 0x103e <DIO_u8GetPinValue>
		DIO_u8GetPinValue(0, 5, &Pin_Value1);
    1a32:	28 e6       	ldi	r18, 0x68	; 104
    1a34:	30 e0       	ldi	r19, 0x00	; 0
    1a36:	80 e0       	ldi	r24, 0x00	; 0
    1a38:	65 e0       	ldi	r22, 0x05	; 5
    1a3a:	a9 01       	movw	r20, r18
    1a3c:	0e 94 1f 08 	call	0x103e	; 0x103e <DIO_u8GetPinValue>
		if(Pin_Value0){
    1a40:	80 91 69 00 	lds	r24, 0x0069
    1a44:	88 23       	and	r24, r24
    1a46:	09 f4       	brne	.+2      	; 0x1a4a <main+0x64>
    1a48:	81 c7       	rjmp	.+3842   	; 0x294c <main+0xf66>
			DIO_u8SetValueToAllPins(2, 1, 1, 1, 1, 1, 1, 0, 0); //0
    1a4a:	82 e0       	ldi	r24, 0x02	; 2
    1a4c:	61 e0       	ldi	r22, 0x01	; 1
    1a4e:	41 e0       	ldi	r20, 0x01	; 1
    1a50:	21 e0       	ldi	r18, 0x01	; 1
    1a52:	01 e0       	ldi	r16, 0x01	; 1
    1a54:	ee 24       	eor	r14, r14
    1a56:	e3 94       	inc	r14
    1a58:	cc 24       	eor	r12, r12
    1a5a:	c3 94       	inc	r12
    1a5c:	aa 24       	eor	r10, r10
    1a5e:	88 24       	eor	r8, r8
    1a60:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <DIO_u8SetValueToAllPins>
    1a64:	fe 01       	movw	r30, r28
    1a66:	e7 50       	subi	r30, 0x07	; 7
    1a68:	ff 4f       	sbci	r31, 0xFF	; 255
    1a6a:	80 e0       	ldi	r24, 0x00	; 0
    1a6c:	90 e0       	ldi	r25, 0x00	; 0
    1a6e:	a8 e4       	ldi	r26, 0x48	; 72
    1a70:	b2 e4       	ldi	r27, 0x42	; 66
    1a72:	80 83       	st	Z, r24
    1a74:	91 83       	std	Z+1, r25	; 0x01
    1a76:	a2 83       	std	Z+2, r26	; 0x02
    1a78:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a7a:	8e 01       	movw	r16, r28
    1a7c:	0b 50       	subi	r16, 0x0B	; 11
    1a7e:	1f 4f       	sbci	r17, 0xFF	; 255
    1a80:	fe 01       	movw	r30, r28
    1a82:	e7 50       	subi	r30, 0x07	; 7
    1a84:	ff 4f       	sbci	r31, 0xFF	; 255
    1a86:	60 81       	ld	r22, Z
    1a88:	71 81       	ldd	r23, Z+1	; 0x01
    1a8a:	82 81       	ldd	r24, Z+2	; 0x02
    1a8c:	93 81       	ldd	r25, Z+3	; 0x03
    1a8e:	20 e0       	ldi	r18, 0x00	; 0
    1a90:	30 e0       	ldi	r19, 0x00	; 0
    1a92:	4a e7       	ldi	r20, 0x7A	; 122
    1a94:	55 e4       	ldi	r21, 0x45	; 69
    1a96:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a9a:	dc 01       	movw	r26, r24
    1a9c:	cb 01       	movw	r24, r22
    1a9e:	f8 01       	movw	r30, r16
    1aa0:	80 83       	st	Z, r24
    1aa2:	91 83       	std	Z+1, r25	; 0x01
    1aa4:	a2 83       	std	Z+2, r26	; 0x02
    1aa6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1aa8:	fe 01       	movw	r30, r28
    1aaa:	eb 50       	subi	r30, 0x0B	; 11
    1aac:	ff 4f       	sbci	r31, 0xFF	; 255
    1aae:	60 81       	ld	r22, Z
    1ab0:	71 81       	ldd	r23, Z+1	; 0x01
    1ab2:	82 81       	ldd	r24, Z+2	; 0x02
    1ab4:	93 81       	ldd	r25, Z+3	; 0x03
    1ab6:	20 e0       	ldi	r18, 0x00	; 0
    1ab8:	30 e0       	ldi	r19, 0x00	; 0
    1aba:	40 e8       	ldi	r20, 0x80	; 128
    1abc:	5f e3       	ldi	r21, 0x3F	; 63
    1abe:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1ac2:	88 23       	and	r24, r24
    1ac4:	44 f4       	brge	.+16     	; 0x1ad6 <main+0xf0>
		__ticks = 1;
    1ac6:	fe 01       	movw	r30, r28
    1ac8:	ed 50       	subi	r30, 0x0D	; 13
    1aca:	ff 4f       	sbci	r31, 0xFF	; 255
    1acc:	81 e0       	ldi	r24, 0x01	; 1
    1ace:	90 e0       	ldi	r25, 0x00	; 0
    1ad0:	91 83       	std	Z+1, r25	; 0x01
    1ad2:	80 83       	st	Z, r24
    1ad4:	64 c0       	rjmp	.+200    	; 0x1b9e <main+0x1b8>
	else if (__tmp > 65535)
    1ad6:	fe 01       	movw	r30, r28
    1ad8:	eb 50       	subi	r30, 0x0B	; 11
    1ada:	ff 4f       	sbci	r31, 0xFF	; 255
    1adc:	60 81       	ld	r22, Z
    1ade:	71 81       	ldd	r23, Z+1	; 0x01
    1ae0:	82 81       	ldd	r24, Z+2	; 0x02
    1ae2:	93 81       	ldd	r25, Z+3	; 0x03
    1ae4:	20 e0       	ldi	r18, 0x00	; 0
    1ae6:	3f ef       	ldi	r19, 0xFF	; 255
    1ae8:	4f e7       	ldi	r20, 0x7F	; 127
    1aea:	57 e4       	ldi	r21, 0x47	; 71
    1aec:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1af0:	18 16       	cp	r1, r24
    1af2:	0c f0       	brlt	.+2      	; 0x1af6 <main+0x110>
    1af4:	43 c0       	rjmp	.+134    	; 0x1b7c <main+0x196>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1af6:	fe 01       	movw	r30, r28
    1af8:	e7 50       	subi	r30, 0x07	; 7
    1afa:	ff 4f       	sbci	r31, 0xFF	; 255
    1afc:	60 81       	ld	r22, Z
    1afe:	71 81       	ldd	r23, Z+1	; 0x01
    1b00:	82 81       	ldd	r24, Z+2	; 0x02
    1b02:	93 81       	ldd	r25, Z+3	; 0x03
    1b04:	20 e0       	ldi	r18, 0x00	; 0
    1b06:	30 e0       	ldi	r19, 0x00	; 0
    1b08:	40 e2       	ldi	r20, 0x20	; 32
    1b0a:	51 e4       	ldi	r21, 0x41	; 65
    1b0c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b10:	dc 01       	movw	r26, r24
    1b12:	cb 01       	movw	r24, r22
    1b14:	8e 01       	movw	r16, r28
    1b16:	0d 50       	subi	r16, 0x0D	; 13
    1b18:	1f 4f       	sbci	r17, 0xFF	; 255
    1b1a:	bc 01       	movw	r22, r24
    1b1c:	cd 01       	movw	r24, r26
    1b1e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b22:	dc 01       	movw	r26, r24
    1b24:	cb 01       	movw	r24, r22
    1b26:	f8 01       	movw	r30, r16
    1b28:	91 83       	std	Z+1, r25	; 0x01
    1b2a:	80 83       	st	Z, r24
    1b2c:	1f c0       	rjmp	.+62     	; 0x1b6c <main+0x186>
    1b2e:	fe 01       	movw	r30, r28
    1b30:	ef 50       	subi	r30, 0x0F	; 15
    1b32:	ff 4f       	sbci	r31, 0xFF	; 255
    1b34:	80 e9       	ldi	r24, 0x90	; 144
    1b36:	91 e0       	ldi	r25, 0x01	; 1
    1b38:	91 83       	std	Z+1, r25	; 0x01
    1b3a:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1b3c:	fe 01       	movw	r30, r28
    1b3e:	ef 50       	subi	r30, 0x0F	; 15
    1b40:	ff 4f       	sbci	r31, 0xFF	; 255
    1b42:	80 81       	ld	r24, Z
    1b44:	91 81       	ldd	r25, Z+1	; 0x01
    1b46:	01 97       	sbiw	r24, 0x01	; 1
    1b48:	f1 f7       	brne	.-4      	; 0x1b46 <main+0x160>
    1b4a:	fe 01       	movw	r30, r28
    1b4c:	ef 50       	subi	r30, 0x0F	; 15
    1b4e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b50:	91 83       	std	Z+1, r25	; 0x01
    1b52:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b54:	de 01       	movw	r26, r28
    1b56:	ad 50       	subi	r26, 0x0D	; 13
    1b58:	bf 4f       	sbci	r27, 0xFF	; 255
    1b5a:	fe 01       	movw	r30, r28
    1b5c:	ed 50       	subi	r30, 0x0D	; 13
    1b5e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b60:	80 81       	ld	r24, Z
    1b62:	91 81       	ldd	r25, Z+1	; 0x01
    1b64:	01 97       	sbiw	r24, 0x01	; 1
    1b66:	11 96       	adiw	r26, 0x01	; 1
    1b68:	9c 93       	st	X, r25
    1b6a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b6c:	fe 01       	movw	r30, r28
    1b6e:	ed 50       	subi	r30, 0x0D	; 13
    1b70:	ff 4f       	sbci	r31, 0xFF	; 255
    1b72:	80 81       	ld	r24, Z
    1b74:	91 81       	ldd	r25, Z+1	; 0x01
    1b76:	00 97       	sbiw	r24, 0x00	; 0
    1b78:	d1 f6       	brne	.-76     	; 0x1b2e <main+0x148>
    1b7a:	27 c0       	rjmp	.+78     	; 0x1bca <main+0x1e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b7c:	8e 01       	movw	r16, r28
    1b7e:	0d 50       	subi	r16, 0x0D	; 13
    1b80:	1f 4f       	sbci	r17, 0xFF	; 255
    1b82:	fe 01       	movw	r30, r28
    1b84:	eb 50       	subi	r30, 0x0B	; 11
    1b86:	ff 4f       	sbci	r31, 0xFF	; 255
    1b88:	60 81       	ld	r22, Z
    1b8a:	71 81       	ldd	r23, Z+1	; 0x01
    1b8c:	82 81       	ldd	r24, Z+2	; 0x02
    1b8e:	93 81       	ldd	r25, Z+3	; 0x03
    1b90:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b94:	dc 01       	movw	r26, r24
    1b96:	cb 01       	movw	r24, r22
    1b98:	f8 01       	movw	r30, r16
    1b9a:	91 83       	std	Z+1, r25	; 0x01
    1b9c:	80 83       	st	Z, r24
    1b9e:	de 01       	movw	r26, r28
    1ba0:	a1 51       	subi	r26, 0x11	; 17
    1ba2:	bf 4f       	sbci	r27, 0xFF	; 255
    1ba4:	fe 01       	movw	r30, r28
    1ba6:	ed 50       	subi	r30, 0x0D	; 13
    1ba8:	ff 4f       	sbci	r31, 0xFF	; 255
    1baa:	80 81       	ld	r24, Z
    1bac:	91 81       	ldd	r25, Z+1	; 0x01
    1bae:	8d 93       	st	X+, r24
    1bb0:	9c 93       	st	X, r25
    1bb2:	fe 01       	movw	r30, r28
    1bb4:	e1 51       	subi	r30, 0x11	; 17
    1bb6:	ff 4f       	sbci	r31, 0xFF	; 255
    1bb8:	80 81       	ld	r24, Z
    1bba:	91 81       	ldd	r25, Z+1	; 0x01
    1bbc:	01 97       	sbiw	r24, 0x01	; 1
    1bbe:	f1 f7       	brne	.-4      	; 0x1bbc <main+0x1d6>
    1bc0:	fe 01       	movw	r30, r28
    1bc2:	e1 51       	subi	r30, 0x11	; 17
    1bc4:	ff 4f       	sbci	r31, 0xFF	; 255
    1bc6:	91 83       	std	Z+1, r25	; 0x01
    1bc8:	80 83       	st	Z, r24
			_delay_ms(50);
			DIO_u8SetValueToAllPins(2, 0, 0, 0, 0, 1, 1, 0, 0); //1
    1bca:	82 e0       	ldi	r24, 0x02	; 2
    1bcc:	60 e0       	ldi	r22, 0x00	; 0
    1bce:	40 e0       	ldi	r20, 0x00	; 0
    1bd0:	20 e0       	ldi	r18, 0x00	; 0
    1bd2:	00 e0       	ldi	r16, 0x00	; 0
    1bd4:	ee 24       	eor	r14, r14
    1bd6:	e3 94       	inc	r14
    1bd8:	cc 24       	eor	r12, r12
    1bda:	c3 94       	inc	r12
    1bdc:	aa 24       	eor	r10, r10
    1bde:	88 24       	eor	r8, r8
    1be0:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <DIO_u8SetValueToAllPins>
    1be4:	fe 01       	movw	r30, r28
    1be6:	e5 51       	subi	r30, 0x15	; 21
    1be8:	ff 4f       	sbci	r31, 0xFF	; 255
    1bea:	80 e0       	ldi	r24, 0x00	; 0
    1bec:	90 e0       	ldi	r25, 0x00	; 0
    1bee:	a8 e4       	ldi	r26, 0x48	; 72
    1bf0:	b2 e4       	ldi	r27, 0x42	; 66
    1bf2:	80 83       	st	Z, r24
    1bf4:	91 83       	std	Z+1, r25	; 0x01
    1bf6:	a2 83       	std	Z+2, r26	; 0x02
    1bf8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1bfa:	8e 01       	movw	r16, r28
    1bfc:	09 51       	subi	r16, 0x19	; 25
    1bfe:	1f 4f       	sbci	r17, 0xFF	; 255
    1c00:	fe 01       	movw	r30, r28
    1c02:	e5 51       	subi	r30, 0x15	; 21
    1c04:	ff 4f       	sbci	r31, 0xFF	; 255
    1c06:	60 81       	ld	r22, Z
    1c08:	71 81       	ldd	r23, Z+1	; 0x01
    1c0a:	82 81       	ldd	r24, Z+2	; 0x02
    1c0c:	93 81       	ldd	r25, Z+3	; 0x03
    1c0e:	20 e0       	ldi	r18, 0x00	; 0
    1c10:	30 e0       	ldi	r19, 0x00	; 0
    1c12:	4a e7       	ldi	r20, 0x7A	; 122
    1c14:	55 e4       	ldi	r21, 0x45	; 69
    1c16:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c1a:	dc 01       	movw	r26, r24
    1c1c:	cb 01       	movw	r24, r22
    1c1e:	f8 01       	movw	r30, r16
    1c20:	80 83       	st	Z, r24
    1c22:	91 83       	std	Z+1, r25	; 0x01
    1c24:	a2 83       	std	Z+2, r26	; 0x02
    1c26:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1c28:	fe 01       	movw	r30, r28
    1c2a:	e9 51       	subi	r30, 0x19	; 25
    1c2c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c2e:	60 81       	ld	r22, Z
    1c30:	71 81       	ldd	r23, Z+1	; 0x01
    1c32:	82 81       	ldd	r24, Z+2	; 0x02
    1c34:	93 81       	ldd	r25, Z+3	; 0x03
    1c36:	20 e0       	ldi	r18, 0x00	; 0
    1c38:	30 e0       	ldi	r19, 0x00	; 0
    1c3a:	40 e8       	ldi	r20, 0x80	; 128
    1c3c:	5f e3       	ldi	r21, 0x3F	; 63
    1c3e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1c42:	88 23       	and	r24, r24
    1c44:	44 f4       	brge	.+16     	; 0x1c56 <main+0x270>
		__ticks = 1;
    1c46:	fe 01       	movw	r30, r28
    1c48:	eb 51       	subi	r30, 0x1B	; 27
    1c4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c4c:	81 e0       	ldi	r24, 0x01	; 1
    1c4e:	90 e0       	ldi	r25, 0x00	; 0
    1c50:	91 83       	std	Z+1, r25	; 0x01
    1c52:	80 83       	st	Z, r24
    1c54:	64 c0       	rjmp	.+200    	; 0x1d1e <main+0x338>
	else if (__tmp > 65535)
    1c56:	fe 01       	movw	r30, r28
    1c58:	e9 51       	subi	r30, 0x19	; 25
    1c5a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c5c:	60 81       	ld	r22, Z
    1c5e:	71 81       	ldd	r23, Z+1	; 0x01
    1c60:	82 81       	ldd	r24, Z+2	; 0x02
    1c62:	93 81       	ldd	r25, Z+3	; 0x03
    1c64:	20 e0       	ldi	r18, 0x00	; 0
    1c66:	3f ef       	ldi	r19, 0xFF	; 255
    1c68:	4f e7       	ldi	r20, 0x7F	; 127
    1c6a:	57 e4       	ldi	r21, 0x47	; 71
    1c6c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1c70:	18 16       	cp	r1, r24
    1c72:	0c f0       	brlt	.+2      	; 0x1c76 <main+0x290>
    1c74:	43 c0       	rjmp	.+134    	; 0x1cfc <main+0x316>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c76:	fe 01       	movw	r30, r28
    1c78:	e5 51       	subi	r30, 0x15	; 21
    1c7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c7c:	60 81       	ld	r22, Z
    1c7e:	71 81       	ldd	r23, Z+1	; 0x01
    1c80:	82 81       	ldd	r24, Z+2	; 0x02
    1c82:	93 81       	ldd	r25, Z+3	; 0x03
    1c84:	20 e0       	ldi	r18, 0x00	; 0
    1c86:	30 e0       	ldi	r19, 0x00	; 0
    1c88:	40 e2       	ldi	r20, 0x20	; 32
    1c8a:	51 e4       	ldi	r21, 0x41	; 65
    1c8c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c90:	dc 01       	movw	r26, r24
    1c92:	cb 01       	movw	r24, r22
    1c94:	8e 01       	movw	r16, r28
    1c96:	0b 51       	subi	r16, 0x1B	; 27
    1c98:	1f 4f       	sbci	r17, 0xFF	; 255
    1c9a:	bc 01       	movw	r22, r24
    1c9c:	cd 01       	movw	r24, r26
    1c9e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1ca2:	dc 01       	movw	r26, r24
    1ca4:	cb 01       	movw	r24, r22
    1ca6:	f8 01       	movw	r30, r16
    1ca8:	91 83       	std	Z+1, r25	; 0x01
    1caa:	80 83       	st	Z, r24
    1cac:	1f c0       	rjmp	.+62     	; 0x1cec <main+0x306>
    1cae:	fe 01       	movw	r30, r28
    1cb0:	ed 51       	subi	r30, 0x1D	; 29
    1cb2:	ff 4f       	sbci	r31, 0xFF	; 255
    1cb4:	80 e9       	ldi	r24, 0x90	; 144
    1cb6:	91 e0       	ldi	r25, 0x01	; 1
    1cb8:	91 83       	std	Z+1, r25	; 0x01
    1cba:	80 83       	st	Z, r24
    1cbc:	fe 01       	movw	r30, r28
    1cbe:	ed 51       	subi	r30, 0x1D	; 29
    1cc0:	ff 4f       	sbci	r31, 0xFF	; 255
    1cc2:	80 81       	ld	r24, Z
    1cc4:	91 81       	ldd	r25, Z+1	; 0x01
    1cc6:	01 97       	sbiw	r24, 0x01	; 1
    1cc8:	f1 f7       	brne	.-4      	; 0x1cc6 <main+0x2e0>
    1cca:	fe 01       	movw	r30, r28
    1ccc:	ed 51       	subi	r30, 0x1D	; 29
    1cce:	ff 4f       	sbci	r31, 0xFF	; 255
    1cd0:	91 83       	std	Z+1, r25	; 0x01
    1cd2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1cd4:	de 01       	movw	r26, r28
    1cd6:	ab 51       	subi	r26, 0x1B	; 27
    1cd8:	bf 4f       	sbci	r27, 0xFF	; 255
    1cda:	fe 01       	movw	r30, r28
    1cdc:	eb 51       	subi	r30, 0x1B	; 27
    1cde:	ff 4f       	sbci	r31, 0xFF	; 255
    1ce0:	80 81       	ld	r24, Z
    1ce2:	91 81       	ldd	r25, Z+1	; 0x01
    1ce4:	01 97       	sbiw	r24, 0x01	; 1
    1ce6:	11 96       	adiw	r26, 0x01	; 1
    1ce8:	9c 93       	st	X, r25
    1cea:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1cec:	fe 01       	movw	r30, r28
    1cee:	eb 51       	subi	r30, 0x1B	; 27
    1cf0:	ff 4f       	sbci	r31, 0xFF	; 255
    1cf2:	80 81       	ld	r24, Z
    1cf4:	91 81       	ldd	r25, Z+1	; 0x01
    1cf6:	00 97       	sbiw	r24, 0x00	; 0
    1cf8:	d1 f6       	brne	.-76     	; 0x1cae <main+0x2c8>
    1cfa:	27 c0       	rjmp	.+78     	; 0x1d4a <main+0x364>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1cfc:	8e 01       	movw	r16, r28
    1cfe:	0b 51       	subi	r16, 0x1B	; 27
    1d00:	1f 4f       	sbci	r17, 0xFF	; 255
    1d02:	fe 01       	movw	r30, r28
    1d04:	e9 51       	subi	r30, 0x19	; 25
    1d06:	ff 4f       	sbci	r31, 0xFF	; 255
    1d08:	60 81       	ld	r22, Z
    1d0a:	71 81       	ldd	r23, Z+1	; 0x01
    1d0c:	82 81       	ldd	r24, Z+2	; 0x02
    1d0e:	93 81       	ldd	r25, Z+3	; 0x03
    1d10:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d14:	dc 01       	movw	r26, r24
    1d16:	cb 01       	movw	r24, r22
    1d18:	f8 01       	movw	r30, r16
    1d1a:	91 83       	std	Z+1, r25	; 0x01
    1d1c:	80 83       	st	Z, r24
    1d1e:	de 01       	movw	r26, r28
    1d20:	af 51       	subi	r26, 0x1F	; 31
    1d22:	bf 4f       	sbci	r27, 0xFF	; 255
    1d24:	fe 01       	movw	r30, r28
    1d26:	eb 51       	subi	r30, 0x1B	; 27
    1d28:	ff 4f       	sbci	r31, 0xFF	; 255
    1d2a:	80 81       	ld	r24, Z
    1d2c:	91 81       	ldd	r25, Z+1	; 0x01
    1d2e:	8d 93       	st	X+, r24
    1d30:	9c 93       	st	X, r25
    1d32:	fe 01       	movw	r30, r28
    1d34:	ef 51       	subi	r30, 0x1F	; 31
    1d36:	ff 4f       	sbci	r31, 0xFF	; 255
    1d38:	80 81       	ld	r24, Z
    1d3a:	91 81       	ldd	r25, Z+1	; 0x01
    1d3c:	01 97       	sbiw	r24, 0x01	; 1
    1d3e:	f1 f7       	brne	.-4      	; 0x1d3c <main+0x356>
    1d40:	fe 01       	movw	r30, r28
    1d42:	ef 51       	subi	r30, 0x1F	; 31
    1d44:	ff 4f       	sbci	r31, 0xFF	; 255
    1d46:	91 83       	std	Z+1, r25	; 0x01
    1d48:	80 83       	st	Z, r24
			_delay_ms(50);
			DIO_u8SetValueToAllPins(2, 1, 1, 0, 1, 1, 0, 1, 0); //2
    1d4a:	82 e0       	ldi	r24, 0x02	; 2
    1d4c:	61 e0       	ldi	r22, 0x01	; 1
    1d4e:	41 e0       	ldi	r20, 0x01	; 1
    1d50:	20 e0       	ldi	r18, 0x00	; 0
    1d52:	01 e0       	ldi	r16, 0x01	; 1
    1d54:	ee 24       	eor	r14, r14
    1d56:	e3 94       	inc	r14
    1d58:	cc 24       	eor	r12, r12
    1d5a:	aa 24       	eor	r10, r10
    1d5c:	a3 94       	inc	r10
    1d5e:	88 24       	eor	r8, r8
    1d60:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <DIO_u8SetValueToAllPins>
    1d64:	fe 01       	movw	r30, r28
    1d66:	e3 52       	subi	r30, 0x23	; 35
    1d68:	ff 4f       	sbci	r31, 0xFF	; 255
    1d6a:	80 e0       	ldi	r24, 0x00	; 0
    1d6c:	90 e0       	ldi	r25, 0x00	; 0
    1d6e:	a8 e4       	ldi	r26, 0x48	; 72
    1d70:	b2 e4       	ldi	r27, 0x42	; 66
    1d72:	80 83       	st	Z, r24
    1d74:	91 83       	std	Z+1, r25	; 0x01
    1d76:	a2 83       	std	Z+2, r26	; 0x02
    1d78:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d7a:	8e 01       	movw	r16, r28
    1d7c:	07 52       	subi	r16, 0x27	; 39
    1d7e:	1f 4f       	sbci	r17, 0xFF	; 255
    1d80:	fe 01       	movw	r30, r28
    1d82:	e3 52       	subi	r30, 0x23	; 35
    1d84:	ff 4f       	sbci	r31, 0xFF	; 255
    1d86:	60 81       	ld	r22, Z
    1d88:	71 81       	ldd	r23, Z+1	; 0x01
    1d8a:	82 81       	ldd	r24, Z+2	; 0x02
    1d8c:	93 81       	ldd	r25, Z+3	; 0x03
    1d8e:	20 e0       	ldi	r18, 0x00	; 0
    1d90:	30 e0       	ldi	r19, 0x00	; 0
    1d92:	4a e7       	ldi	r20, 0x7A	; 122
    1d94:	55 e4       	ldi	r21, 0x45	; 69
    1d96:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d9a:	dc 01       	movw	r26, r24
    1d9c:	cb 01       	movw	r24, r22
    1d9e:	f8 01       	movw	r30, r16
    1da0:	80 83       	st	Z, r24
    1da2:	91 83       	std	Z+1, r25	; 0x01
    1da4:	a2 83       	std	Z+2, r26	; 0x02
    1da6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1da8:	fe 01       	movw	r30, r28
    1daa:	e7 52       	subi	r30, 0x27	; 39
    1dac:	ff 4f       	sbci	r31, 0xFF	; 255
    1dae:	60 81       	ld	r22, Z
    1db0:	71 81       	ldd	r23, Z+1	; 0x01
    1db2:	82 81       	ldd	r24, Z+2	; 0x02
    1db4:	93 81       	ldd	r25, Z+3	; 0x03
    1db6:	20 e0       	ldi	r18, 0x00	; 0
    1db8:	30 e0       	ldi	r19, 0x00	; 0
    1dba:	40 e8       	ldi	r20, 0x80	; 128
    1dbc:	5f e3       	ldi	r21, 0x3F	; 63
    1dbe:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1dc2:	88 23       	and	r24, r24
    1dc4:	44 f4       	brge	.+16     	; 0x1dd6 <main+0x3f0>
		__ticks = 1;
    1dc6:	fe 01       	movw	r30, r28
    1dc8:	e9 52       	subi	r30, 0x29	; 41
    1dca:	ff 4f       	sbci	r31, 0xFF	; 255
    1dcc:	81 e0       	ldi	r24, 0x01	; 1
    1dce:	90 e0       	ldi	r25, 0x00	; 0
    1dd0:	91 83       	std	Z+1, r25	; 0x01
    1dd2:	80 83       	st	Z, r24
    1dd4:	64 c0       	rjmp	.+200    	; 0x1e9e <main+0x4b8>
	else if (__tmp > 65535)
    1dd6:	fe 01       	movw	r30, r28
    1dd8:	e7 52       	subi	r30, 0x27	; 39
    1dda:	ff 4f       	sbci	r31, 0xFF	; 255
    1ddc:	60 81       	ld	r22, Z
    1dde:	71 81       	ldd	r23, Z+1	; 0x01
    1de0:	82 81       	ldd	r24, Z+2	; 0x02
    1de2:	93 81       	ldd	r25, Z+3	; 0x03
    1de4:	20 e0       	ldi	r18, 0x00	; 0
    1de6:	3f ef       	ldi	r19, 0xFF	; 255
    1de8:	4f e7       	ldi	r20, 0x7F	; 127
    1dea:	57 e4       	ldi	r21, 0x47	; 71
    1dec:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1df0:	18 16       	cp	r1, r24
    1df2:	0c f0       	brlt	.+2      	; 0x1df6 <main+0x410>
    1df4:	43 c0       	rjmp	.+134    	; 0x1e7c <main+0x496>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1df6:	fe 01       	movw	r30, r28
    1df8:	e3 52       	subi	r30, 0x23	; 35
    1dfa:	ff 4f       	sbci	r31, 0xFF	; 255
    1dfc:	60 81       	ld	r22, Z
    1dfe:	71 81       	ldd	r23, Z+1	; 0x01
    1e00:	82 81       	ldd	r24, Z+2	; 0x02
    1e02:	93 81       	ldd	r25, Z+3	; 0x03
    1e04:	20 e0       	ldi	r18, 0x00	; 0
    1e06:	30 e0       	ldi	r19, 0x00	; 0
    1e08:	40 e2       	ldi	r20, 0x20	; 32
    1e0a:	51 e4       	ldi	r21, 0x41	; 65
    1e0c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1e10:	dc 01       	movw	r26, r24
    1e12:	cb 01       	movw	r24, r22
    1e14:	8e 01       	movw	r16, r28
    1e16:	09 52       	subi	r16, 0x29	; 41
    1e18:	1f 4f       	sbci	r17, 0xFF	; 255
    1e1a:	bc 01       	movw	r22, r24
    1e1c:	cd 01       	movw	r24, r26
    1e1e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e22:	dc 01       	movw	r26, r24
    1e24:	cb 01       	movw	r24, r22
    1e26:	f8 01       	movw	r30, r16
    1e28:	91 83       	std	Z+1, r25	; 0x01
    1e2a:	80 83       	st	Z, r24
    1e2c:	1f c0       	rjmp	.+62     	; 0x1e6c <main+0x486>
    1e2e:	fe 01       	movw	r30, r28
    1e30:	eb 52       	subi	r30, 0x2B	; 43
    1e32:	ff 4f       	sbci	r31, 0xFF	; 255
    1e34:	80 e9       	ldi	r24, 0x90	; 144
    1e36:	91 e0       	ldi	r25, 0x01	; 1
    1e38:	91 83       	std	Z+1, r25	; 0x01
    1e3a:	80 83       	st	Z, r24
    1e3c:	fe 01       	movw	r30, r28
    1e3e:	eb 52       	subi	r30, 0x2B	; 43
    1e40:	ff 4f       	sbci	r31, 0xFF	; 255
    1e42:	80 81       	ld	r24, Z
    1e44:	91 81       	ldd	r25, Z+1	; 0x01
    1e46:	01 97       	sbiw	r24, 0x01	; 1
    1e48:	f1 f7       	brne	.-4      	; 0x1e46 <main+0x460>
    1e4a:	fe 01       	movw	r30, r28
    1e4c:	eb 52       	subi	r30, 0x2B	; 43
    1e4e:	ff 4f       	sbci	r31, 0xFF	; 255
    1e50:	91 83       	std	Z+1, r25	; 0x01
    1e52:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e54:	de 01       	movw	r26, r28
    1e56:	a9 52       	subi	r26, 0x29	; 41
    1e58:	bf 4f       	sbci	r27, 0xFF	; 255
    1e5a:	fe 01       	movw	r30, r28
    1e5c:	e9 52       	subi	r30, 0x29	; 41
    1e5e:	ff 4f       	sbci	r31, 0xFF	; 255
    1e60:	80 81       	ld	r24, Z
    1e62:	91 81       	ldd	r25, Z+1	; 0x01
    1e64:	01 97       	sbiw	r24, 0x01	; 1
    1e66:	11 96       	adiw	r26, 0x01	; 1
    1e68:	9c 93       	st	X, r25
    1e6a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e6c:	fe 01       	movw	r30, r28
    1e6e:	e9 52       	subi	r30, 0x29	; 41
    1e70:	ff 4f       	sbci	r31, 0xFF	; 255
    1e72:	80 81       	ld	r24, Z
    1e74:	91 81       	ldd	r25, Z+1	; 0x01
    1e76:	00 97       	sbiw	r24, 0x00	; 0
    1e78:	d1 f6       	brne	.-76     	; 0x1e2e <main+0x448>
    1e7a:	27 c0       	rjmp	.+78     	; 0x1eca <main+0x4e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e7c:	8e 01       	movw	r16, r28
    1e7e:	09 52       	subi	r16, 0x29	; 41
    1e80:	1f 4f       	sbci	r17, 0xFF	; 255
    1e82:	fe 01       	movw	r30, r28
    1e84:	e7 52       	subi	r30, 0x27	; 39
    1e86:	ff 4f       	sbci	r31, 0xFF	; 255
    1e88:	60 81       	ld	r22, Z
    1e8a:	71 81       	ldd	r23, Z+1	; 0x01
    1e8c:	82 81       	ldd	r24, Z+2	; 0x02
    1e8e:	93 81       	ldd	r25, Z+3	; 0x03
    1e90:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e94:	dc 01       	movw	r26, r24
    1e96:	cb 01       	movw	r24, r22
    1e98:	f8 01       	movw	r30, r16
    1e9a:	91 83       	std	Z+1, r25	; 0x01
    1e9c:	80 83       	st	Z, r24
    1e9e:	de 01       	movw	r26, r28
    1ea0:	ad 52       	subi	r26, 0x2D	; 45
    1ea2:	bf 4f       	sbci	r27, 0xFF	; 255
    1ea4:	fe 01       	movw	r30, r28
    1ea6:	e9 52       	subi	r30, 0x29	; 41
    1ea8:	ff 4f       	sbci	r31, 0xFF	; 255
    1eaa:	80 81       	ld	r24, Z
    1eac:	91 81       	ldd	r25, Z+1	; 0x01
    1eae:	8d 93       	st	X+, r24
    1eb0:	9c 93       	st	X, r25
    1eb2:	fe 01       	movw	r30, r28
    1eb4:	ed 52       	subi	r30, 0x2D	; 45
    1eb6:	ff 4f       	sbci	r31, 0xFF	; 255
    1eb8:	80 81       	ld	r24, Z
    1eba:	91 81       	ldd	r25, Z+1	; 0x01
    1ebc:	01 97       	sbiw	r24, 0x01	; 1
    1ebe:	f1 f7       	brne	.-4      	; 0x1ebc <main+0x4d6>
    1ec0:	fe 01       	movw	r30, r28
    1ec2:	ed 52       	subi	r30, 0x2D	; 45
    1ec4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ec6:	91 83       	std	Z+1, r25	; 0x01
    1ec8:	80 83       	st	Z, r24
			_delay_ms(50);
			DIO_u8SetValueToAllPins(2, 1, 1, 1, 1, 0, 0, 1, 0); //3
    1eca:	82 e0       	ldi	r24, 0x02	; 2
    1ecc:	61 e0       	ldi	r22, 0x01	; 1
    1ece:	41 e0       	ldi	r20, 0x01	; 1
    1ed0:	21 e0       	ldi	r18, 0x01	; 1
    1ed2:	01 e0       	ldi	r16, 0x01	; 1
    1ed4:	ee 24       	eor	r14, r14
    1ed6:	cc 24       	eor	r12, r12
    1ed8:	aa 24       	eor	r10, r10
    1eda:	a3 94       	inc	r10
    1edc:	88 24       	eor	r8, r8
    1ede:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <DIO_u8SetValueToAllPins>
    1ee2:	fe 01       	movw	r30, r28
    1ee4:	e1 53       	subi	r30, 0x31	; 49
    1ee6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ee8:	80 e0       	ldi	r24, 0x00	; 0
    1eea:	90 e0       	ldi	r25, 0x00	; 0
    1eec:	a8 e4       	ldi	r26, 0x48	; 72
    1eee:	b2 e4       	ldi	r27, 0x42	; 66
    1ef0:	80 83       	st	Z, r24
    1ef2:	91 83       	std	Z+1, r25	; 0x01
    1ef4:	a2 83       	std	Z+2, r26	; 0x02
    1ef6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ef8:	8e 01       	movw	r16, r28
    1efa:	05 53       	subi	r16, 0x35	; 53
    1efc:	1f 4f       	sbci	r17, 0xFF	; 255
    1efe:	fe 01       	movw	r30, r28
    1f00:	e1 53       	subi	r30, 0x31	; 49
    1f02:	ff 4f       	sbci	r31, 0xFF	; 255
    1f04:	60 81       	ld	r22, Z
    1f06:	71 81       	ldd	r23, Z+1	; 0x01
    1f08:	82 81       	ldd	r24, Z+2	; 0x02
    1f0a:	93 81       	ldd	r25, Z+3	; 0x03
    1f0c:	20 e0       	ldi	r18, 0x00	; 0
    1f0e:	30 e0       	ldi	r19, 0x00	; 0
    1f10:	4a e7       	ldi	r20, 0x7A	; 122
    1f12:	55 e4       	ldi	r21, 0x45	; 69
    1f14:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f18:	dc 01       	movw	r26, r24
    1f1a:	cb 01       	movw	r24, r22
    1f1c:	f8 01       	movw	r30, r16
    1f1e:	80 83       	st	Z, r24
    1f20:	91 83       	std	Z+1, r25	; 0x01
    1f22:	a2 83       	std	Z+2, r26	; 0x02
    1f24:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1f26:	fe 01       	movw	r30, r28
    1f28:	e5 53       	subi	r30, 0x35	; 53
    1f2a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f2c:	60 81       	ld	r22, Z
    1f2e:	71 81       	ldd	r23, Z+1	; 0x01
    1f30:	82 81       	ldd	r24, Z+2	; 0x02
    1f32:	93 81       	ldd	r25, Z+3	; 0x03
    1f34:	20 e0       	ldi	r18, 0x00	; 0
    1f36:	30 e0       	ldi	r19, 0x00	; 0
    1f38:	40 e8       	ldi	r20, 0x80	; 128
    1f3a:	5f e3       	ldi	r21, 0x3F	; 63
    1f3c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1f40:	88 23       	and	r24, r24
    1f42:	44 f4       	brge	.+16     	; 0x1f54 <main+0x56e>
		__ticks = 1;
    1f44:	fe 01       	movw	r30, r28
    1f46:	e7 53       	subi	r30, 0x37	; 55
    1f48:	ff 4f       	sbci	r31, 0xFF	; 255
    1f4a:	81 e0       	ldi	r24, 0x01	; 1
    1f4c:	90 e0       	ldi	r25, 0x00	; 0
    1f4e:	91 83       	std	Z+1, r25	; 0x01
    1f50:	80 83       	st	Z, r24
    1f52:	64 c0       	rjmp	.+200    	; 0x201c <main+0x636>
	else if (__tmp > 65535)
    1f54:	fe 01       	movw	r30, r28
    1f56:	e5 53       	subi	r30, 0x35	; 53
    1f58:	ff 4f       	sbci	r31, 0xFF	; 255
    1f5a:	60 81       	ld	r22, Z
    1f5c:	71 81       	ldd	r23, Z+1	; 0x01
    1f5e:	82 81       	ldd	r24, Z+2	; 0x02
    1f60:	93 81       	ldd	r25, Z+3	; 0x03
    1f62:	20 e0       	ldi	r18, 0x00	; 0
    1f64:	3f ef       	ldi	r19, 0xFF	; 255
    1f66:	4f e7       	ldi	r20, 0x7F	; 127
    1f68:	57 e4       	ldi	r21, 0x47	; 71
    1f6a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1f6e:	18 16       	cp	r1, r24
    1f70:	0c f0       	brlt	.+2      	; 0x1f74 <main+0x58e>
    1f72:	43 c0       	rjmp	.+134    	; 0x1ffa <main+0x614>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f74:	fe 01       	movw	r30, r28
    1f76:	e1 53       	subi	r30, 0x31	; 49
    1f78:	ff 4f       	sbci	r31, 0xFF	; 255
    1f7a:	60 81       	ld	r22, Z
    1f7c:	71 81       	ldd	r23, Z+1	; 0x01
    1f7e:	82 81       	ldd	r24, Z+2	; 0x02
    1f80:	93 81       	ldd	r25, Z+3	; 0x03
    1f82:	20 e0       	ldi	r18, 0x00	; 0
    1f84:	30 e0       	ldi	r19, 0x00	; 0
    1f86:	40 e2       	ldi	r20, 0x20	; 32
    1f88:	51 e4       	ldi	r21, 0x41	; 65
    1f8a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f8e:	dc 01       	movw	r26, r24
    1f90:	cb 01       	movw	r24, r22
    1f92:	8e 01       	movw	r16, r28
    1f94:	07 53       	subi	r16, 0x37	; 55
    1f96:	1f 4f       	sbci	r17, 0xFF	; 255
    1f98:	bc 01       	movw	r22, r24
    1f9a:	cd 01       	movw	r24, r26
    1f9c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1fa0:	dc 01       	movw	r26, r24
    1fa2:	cb 01       	movw	r24, r22
    1fa4:	f8 01       	movw	r30, r16
    1fa6:	91 83       	std	Z+1, r25	; 0x01
    1fa8:	80 83       	st	Z, r24
    1faa:	1f c0       	rjmp	.+62     	; 0x1fea <main+0x604>
    1fac:	fe 01       	movw	r30, r28
    1fae:	e9 53       	subi	r30, 0x39	; 57
    1fb0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fb2:	80 e9       	ldi	r24, 0x90	; 144
    1fb4:	91 e0       	ldi	r25, 0x01	; 1
    1fb6:	91 83       	std	Z+1, r25	; 0x01
    1fb8:	80 83       	st	Z, r24
    1fba:	fe 01       	movw	r30, r28
    1fbc:	e9 53       	subi	r30, 0x39	; 57
    1fbe:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc0:	80 81       	ld	r24, Z
    1fc2:	91 81       	ldd	r25, Z+1	; 0x01
    1fc4:	01 97       	sbiw	r24, 0x01	; 1
    1fc6:	f1 f7       	brne	.-4      	; 0x1fc4 <main+0x5de>
    1fc8:	fe 01       	movw	r30, r28
    1fca:	e9 53       	subi	r30, 0x39	; 57
    1fcc:	ff 4f       	sbci	r31, 0xFF	; 255
    1fce:	91 83       	std	Z+1, r25	; 0x01
    1fd0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1fd2:	de 01       	movw	r26, r28
    1fd4:	a7 53       	subi	r26, 0x37	; 55
    1fd6:	bf 4f       	sbci	r27, 0xFF	; 255
    1fd8:	fe 01       	movw	r30, r28
    1fda:	e7 53       	subi	r30, 0x37	; 55
    1fdc:	ff 4f       	sbci	r31, 0xFF	; 255
    1fde:	80 81       	ld	r24, Z
    1fe0:	91 81       	ldd	r25, Z+1	; 0x01
    1fe2:	01 97       	sbiw	r24, 0x01	; 1
    1fe4:	11 96       	adiw	r26, 0x01	; 1
    1fe6:	9c 93       	st	X, r25
    1fe8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1fea:	fe 01       	movw	r30, r28
    1fec:	e7 53       	subi	r30, 0x37	; 55
    1fee:	ff 4f       	sbci	r31, 0xFF	; 255
    1ff0:	80 81       	ld	r24, Z
    1ff2:	91 81       	ldd	r25, Z+1	; 0x01
    1ff4:	00 97       	sbiw	r24, 0x00	; 0
    1ff6:	d1 f6       	brne	.-76     	; 0x1fac <main+0x5c6>
    1ff8:	27 c0       	rjmp	.+78     	; 0x2048 <main+0x662>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ffa:	8e 01       	movw	r16, r28
    1ffc:	07 53       	subi	r16, 0x37	; 55
    1ffe:	1f 4f       	sbci	r17, 0xFF	; 255
    2000:	fe 01       	movw	r30, r28
    2002:	e5 53       	subi	r30, 0x35	; 53
    2004:	ff 4f       	sbci	r31, 0xFF	; 255
    2006:	60 81       	ld	r22, Z
    2008:	71 81       	ldd	r23, Z+1	; 0x01
    200a:	82 81       	ldd	r24, Z+2	; 0x02
    200c:	93 81       	ldd	r25, Z+3	; 0x03
    200e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2012:	dc 01       	movw	r26, r24
    2014:	cb 01       	movw	r24, r22
    2016:	f8 01       	movw	r30, r16
    2018:	91 83       	std	Z+1, r25	; 0x01
    201a:	80 83       	st	Z, r24
    201c:	de 01       	movw	r26, r28
    201e:	ab 53       	subi	r26, 0x3B	; 59
    2020:	bf 4f       	sbci	r27, 0xFF	; 255
    2022:	fe 01       	movw	r30, r28
    2024:	e7 53       	subi	r30, 0x37	; 55
    2026:	ff 4f       	sbci	r31, 0xFF	; 255
    2028:	80 81       	ld	r24, Z
    202a:	91 81       	ldd	r25, Z+1	; 0x01
    202c:	8d 93       	st	X+, r24
    202e:	9c 93       	st	X, r25
    2030:	fe 01       	movw	r30, r28
    2032:	eb 53       	subi	r30, 0x3B	; 59
    2034:	ff 4f       	sbci	r31, 0xFF	; 255
    2036:	80 81       	ld	r24, Z
    2038:	91 81       	ldd	r25, Z+1	; 0x01
    203a:	01 97       	sbiw	r24, 0x01	; 1
    203c:	f1 f7       	brne	.-4      	; 0x203a <main+0x654>
    203e:	fe 01       	movw	r30, r28
    2040:	eb 53       	subi	r30, 0x3B	; 59
    2042:	ff 4f       	sbci	r31, 0xFF	; 255
    2044:	91 83       	std	Z+1, r25	; 0x01
    2046:	80 83       	st	Z, r24
			_delay_ms(50);
			DIO_u8SetValueToAllPins(2, 0, 1, 1, 0, 0, 1, 1, 0); //4
    2048:	82 e0       	ldi	r24, 0x02	; 2
    204a:	60 e0       	ldi	r22, 0x00	; 0
    204c:	41 e0       	ldi	r20, 0x01	; 1
    204e:	21 e0       	ldi	r18, 0x01	; 1
    2050:	00 e0       	ldi	r16, 0x00	; 0
    2052:	ee 24       	eor	r14, r14
    2054:	cc 24       	eor	r12, r12
    2056:	c3 94       	inc	r12
    2058:	aa 24       	eor	r10, r10
    205a:	a3 94       	inc	r10
    205c:	88 24       	eor	r8, r8
    205e:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <DIO_u8SetValueToAllPins>
    2062:	fe 01       	movw	r30, r28
    2064:	ef 53       	subi	r30, 0x3F	; 63
    2066:	ff 4f       	sbci	r31, 0xFF	; 255
    2068:	80 e0       	ldi	r24, 0x00	; 0
    206a:	90 e0       	ldi	r25, 0x00	; 0
    206c:	a8 e4       	ldi	r26, 0x48	; 72
    206e:	b2 e4       	ldi	r27, 0x42	; 66
    2070:	80 83       	st	Z, r24
    2072:	91 83       	std	Z+1, r25	; 0x01
    2074:	a2 83       	std	Z+2, r26	; 0x02
    2076:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2078:	8e 01       	movw	r16, r28
    207a:	03 54       	subi	r16, 0x43	; 67
    207c:	1f 4f       	sbci	r17, 0xFF	; 255
    207e:	fe 01       	movw	r30, r28
    2080:	ef 53       	subi	r30, 0x3F	; 63
    2082:	ff 4f       	sbci	r31, 0xFF	; 255
    2084:	60 81       	ld	r22, Z
    2086:	71 81       	ldd	r23, Z+1	; 0x01
    2088:	82 81       	ldd	r24, Z+2	; 0x02
    208a:	93 81       	ldd	r25, Z+3	; 0x03
    208c:	20 e0       	ldi	r18, 0x00	; 0
    208e:	30 e0       	ldi	r19, 0x00	; 0
    2090:	4a e7       	ldi	r20, 0x7A	; 122
    2092:	55 e4       	ldi	r21, 0x45	; 69
    2094:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2098:	dc 01       	movw	r26, r24
    209a:	cb 01       	movw	r24, r22
    209c:	f8 01       	movw	r30, r16
    209e:	80 83       	st	Z, r24
    20a0:	91 83       	std	Z+1, r25	; 0x01
    20a2:	a2 83       	std	Z+2, r26	; 0x02
    20a4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    20a6:	fe 01       	movw	r30, r28
    20a8:	e3 54       	subi	r30, 0x43	; 67
    20aa:	ff 4f       	sbci	r31, 0xFF	; 255
    20ac:	60 81       	ld	r22, Z
    20ae:	71 81       	ldd	r23, Z+1	; 0x01
    20b0:	82 81       	ldd	r24, Z+2	; 0x02
    20b2:	93 81       	ldd	r25, Z+3	; 0x03
    20b4:	20 e0       	ldi	r18, 0x00	; 0
    20b6:	30 e0       	ldi	r19, 0x00	; 0
    20b8:	40 e8       	ldi	r20, 0x80	; 128
    20ba:	5f e3       	ldi	r21, 0x3F	; 63
    20bc:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    20c0:	88 23       	and	r24, r24
    20c2:	44 f4       	brge	.+16     	; 0x20d4 <main+0x6ee>
		__ticks = 1;
    20c4:	fe 01       	movw	r30, r28
    20c6:	e5 54       	subi	r30, 0x45	; 69
    20c8:	ff 4f       	sbci	r31, 0xFF	; 255
    20ca:	81 e0       	ldi	r24, 0x01	; 1
    20cc:	90 e0       	ldi	r25, 0x00	; 0
    20ce:	91 83       	std	Z+1, r25	; 0x01
    20d0:	80 83       	st	Z, r24
    20d2:	64 c0       	rjmp	.+200    	; 0x219c <main+0x7b6>
	else if (__tmp > 65535)
    20d4:	fe 01       	movw	r30, r28
    20d6:	e3 54       	subi	r30, 0x43	; 67
    20d8:	ff 4f       	sbci	r31, 0xFF	; 255
    20da:	60 81       	ld	r22, Z
    20dc:	71 81       	ldd	r23, Z+1	; 0x01
    20de:	82 81       	ldd	r24, Z+2	; 0x02
    20e0:	93 81       	ldd	r25, Z+3	; 0x03
    20e2:	20 e0       	ldi	r18, 0x00	; 0
    20e4:	3f ef       	ldi	r19, 0xFF	; 255
    20e6:	4f e7       	ldi	r20, 0x7F	; 127
    20e8:	57 e4       	ldi	r21, 0x47	; 71
    20ea:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    20ee:	18 16       	cp	r1, r24
    20f0:	0c f0       	brlt	.+2      	; 0x20f4 <main+0x70e>
    20f2:	43 c0       	rjmp	.+134    	; 0x217a <main+0x794>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    20f4:	fe 01       	movw	r30, r28
    20f6:	ef 53       	subi	r30, 0x3F	; 63
    20f8:	ff 4f       	sbci	r31, 0xFF	; 255
    20fa:	60 81       	ld	r22, Z
    20fc:	71 81       	ldd	r23, Z+1	; 0x01
    20fe:	82 81       	ldd	r24, Z+2	; 0x02
    2100:	93 81       	ldd	r25, Z+3	; 0x03
    2102:	20 e0       	ldi	r18, 0x00	; 0
    2104:	30 e0       	ldi	r19, 0x00	; 0
    2106:	40 e2       	ldi	r20, 0x20	; 32
    2108:	51 e4       	ldi	r21, 0x41	; 65
    210a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    210e:	dc 01       	movw	r26, r24
    2110:	cb 01       	movw	r24, r22
    2112:	8e 01       	movw	r16, r28
    2114:	05 54       	subi	r16, 0x45	; 69
    2116:	1f 4f       	sbci	r17, 0xFF	; 255
    2118:	bc 01       	movw	r22, r24
    211a:	cd 01       	movw	r24, r26
    211c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2120:	dc 01       	movw	r26, r24
    2122:	cb 01       	movw	r24, r22
    2124:	f8 01       	movw	r30, r16
    2126:	91 83       	std	Z+1, r25	; 0x01
    2128:	80 83       	st	Z, r24
    212a:	1f c0       	rjmp	.+62     	; 0x216a <main+0x784>
    212c:	fe 01       	movw	r30, r28
    212e:	e7 54       	subi	r30, 0x47	; 71
    2130:	ff 4f       	sbci	r31, 0xFF	; 255
    2132:	80 e9       	ldi	r24, 0x90	; 144
    2134:	91 e0       	ldi	r25, 0x01	; 1
    2136:	91 83       	std	Z+1, r25	; 0x01
    2138:	80 83       	st	Z, r24
    213a:	fe 01       	movw	r30, r28
    213c:	e7 54       	subi	r30, 0x47	; 71
    213e:	ff 4f       	sbci	r31, 0xFF	; 255
    2140:	80 81       	ld	r24, Z
    2142:	91 81       	ldd	r25, Z+1	; 0x01
    2144:	01 97       	sbiw	r24, 0x01	; 1
    2146:	f1 f7       	brne	.-4      	; 0x2144 <main+0x75e>
    2148:	fe 01       	movw	r30, r28
    214a:	e7 54       	subi	r30, 0x47	; 71
    214c:	ff 4f       	sbci	r31, 0xFF	; 255
    214e:	91 83       	std	Z+1, r25	; 0x01
    2150:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2152:	de 01       	movw	r26, r28
    2154:	a5 54       	subi	r26, 0x45	; 69
    2156:	bf 4f       	sbci	r27, 0xFF	; 255
    2158:	fe 01       	movw	r30, r28
    215a:	e5 54       	subi	r30, 0x45	; 69
    215c:	ff 4f       	sbci	r31, 0xFF	; 255
    215e:	80 81       	ld	r24, Z
    2160:	91 81       	ldd	r25, Z+1	; 0x01
    2162:	01 97       	sbiw	r24, 0x01	; 1
    2164:	11 96       	adiw	r26, 0x01	; 1
    2166:	9c 93       	st	X, r25
    2168:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    216a:	fe 01       	movw	r30, r28
    216c:	e5 54       	subi	r30, 0x45	; 69
    216e:	ff 4f       	sbci	r31, 0xFF	; 255
    2170:	80 81       	ld	r24, Z
    2172:	91 81       	ldd	r25, Z+1	; 0x01
    2174:	00 97       	sbiw	r24, 0x00	; 0
    2176:	d1 f6       	brne	.-76     	; 0x212c <main+0x746>
    2178:	27 c0       	rjmp	.+78     	; 0x21c8 <main+0x7e2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    217a:	8e 01       	movw	r16, r28
    217c:	05 54       	subi	r16, 0x45	; 69
    217e:	1f 4f       	sbci	r17, 0xFF	; 255
    2180:	fe 01       	movw	r30, r28
    2182:	e3 54       	subi	r30, 0x43	; 67
    2184:	ff 4f       	sbci	r31, 0xFF	; 255
    2186:	60 81       	ld	r22, Z
    2188:	71 81       	ldd	r23, Z+1	; 0x01
    218a:	82 81       	ldd	r24, Z+2	; 0x02
    218c:	93 81       	ldd	r25, Z+3	; 0x03
    218e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2192:	dc 01       	movw	r26, r24
    2194:	cb 01       	movw	r24, r22
    2196:	f8 01       	movw	r30, r16
    2198:	91 83       	std	Z+1, r25	; 0x01
    219a:	80 83       	st	Z, r24
    219c:	de 01       	movw	r26, r28
    219e:	a9 54       	subi	r26, 0x49	; 73
    21a0:	bf 4f       	sbci	r27, 0xFF	; 255
    21a2:	fe 01       	movw	r30, r28
    21a4:	e5 54       	subi	r30, 0x45	; 69
    21a6:	ff 4f       	sbci	r31, 0xFF	; 255
    21a8:	80 81       	ld	r24, Z
    21aa:	91 81       	ldd	r25, Z+1	; 0x01
    21ac:	8d 93       	st	X+, r24
    21ae:	9c 93       	st	X, r25
    21b0:	fe 01       	movw	r30, r28
    21b2:	e9 54       	subi	r30, 0x49	; 73
    21b4:	ff 4f       	sbci	r31, 0xFF	; 255
    21b6:	80 81       	ld	r24, Z
    21b8:	91 81       	ldd	r25, Z+1	; 0x01
    21ba:	01 97       	sbiw	r24, 0x01	; 1
    21bc:	f1 f7       	brne	.-4      	; 0x21ba <main+0x7d4>
    21be:	fe 01       	movw	r30, r28
    21c0:	e9 54       	subi	r30, 0x49	; 73
    21c2:	ff 4f       	sbci	r31, 0xFF	; 255
    21c4:	91 83       	std	Z+1, r25	; 0x01
    21c6:	80 83       	st	Z, r24
			_delay_ms(50);
			DIO_u8SetValueToAllPins(2, 1, 0, 1, 1, 0, 1, 1, 0); //5
    21c8:	82 e0       	ldi	r24, 0x02	; 2
    21ca:	61 e0       	ldi	r22, 0x01	; 1
    21cc:	40 e0       	ldi	r20, 0x00	; 0
    21ce:	21 e0       	ldi	r18, 0x01	; 1
    21d0:	01 e0       	ldi	r16, 0x01	; 1
    21d2:	ee 24       	eor	r14, r14
    21d4:	cc 24       	eor	r12, r12
    21d6:	c3 94       	inc	r12
    21d8:	aa 24       	eor	r10, r10
    21da:	a3 94       	inc	r10
    21dc:	88 24       	eor	r8, r8
    21de:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <DIO_u8SetValueToAllPins>
    21e2:	fe 01       	movw	r30, r28
    21e4:	ed 54       	subi	r30, 0x4D	; 77
    21e6:	ff 4f       	sbci	r31, 0xFF	; 255
    21e8:	80 e0       	ldi	r24, 0x00	; 0
    21ea:	90 e0       	ldi	r25, 0x00	; 0
    21ec:	a8 e4       	ldi	r26, 0x48	; 72
    21ee:	b2 e4       	ldi	r27, 0x42	; 66
    21f0:	80 83       	st	Z, r24
    21f2:	91 83       	std	Z+1, r25	; 0x01
    21f4:	a2 83       	std	Z+2, r26	; 0x02
    21f6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21f8:	8e 01       	movw	r16, r28
    21fa:	01 55       	subi	r16, 0x51	; 81
    21fc:	1f 4f       	sbci	r17, 0xFF	; 255
    21fe:	fe 01       	movw	r30, r28
    2200:	ed 54       	subi	r30, 0x4D	; 77
    2202:	ff 4f       	sbci	r31, 0xFF	; 255
    2204:	60 81       	ld	r22, Z
    2206:	71 81       	ldd	r23, Z+1	; 0x01
    2208:	82 81       	ldd	r24, Z+2	; 0x02
    220a:	93 81       	ldd	r25, Z+3	; 0x03
    220c:	20 e0       	ldi	r18, 0x00	; 0
    220e:	30 e0       	ldi	r19, 0x00	; 0
    2210:	4a e7       	ldi	r20, 0x7A	; 122
    2212:	55 e4       	ldi	r21, 0x45	; 69
    2214:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2218:	dc 01       	movw	r26, r24
    221a:	cb 01       	movw	r24, r22
    221c:	f8 01       	movw	r30, r16
    221e:	80 83       	st	Z, r24
    2220:	91 83       	std	Z+1, r25	; 0x01
    2222:	a2 83       	std	Z+2, r26	; 0x02
    2224:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2226:	fe 01       	movw	r30, r28
    2228:	e1 55       	subi	r30, 0x51	; 81
    222a:	ff 4f       	sbci	r31, 0xFF	; 255
    222c:	60 81       	ld	r22, Z
    222e:	71 81       	ldd	r23, Z+1	; 0x01
    2230:	82 81       	ldd	r24, Z+2	; 0x02
    2232:	93 81       	ldd	r25, Z+3	; 0x03
    2234:	20 e0       	ldi	r18, 0x00	; 0
    2236:	30 e0       	ldi	r19, 0x00	; 0
    2238:	40 e8       	ldi	r20, 0x80	; 128
    223a:	5f e3       	ldi	r21, 0x3F	; 63
    223c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2240:	88 23       	and	r24, r24
    2242:	44 f4       	brge	.+16     	; 0x2254 <main+0x86e>
		__ticks = 1;
    2244:	fe 01       	movw	r30, r28
    2246:	e3 55       	subi	r30, 0x53	; 83
    2248:	ff 4f       	sbci	r31, 0xFF	; 255
    224a:	81 e0       	ldi	r24, 0x01	; 1
    224c:	90 e0       	ldi	r25, 0x00	; 0
    224e:	91 83       	std	Z+1, r25	; 0x01
    2250:	80 83       	st	Z, r24
    2252:	64 c0       	rjmp	.+200    	; 0x231c <main+0x936>
	else if (__tmp > 65535)
    2254:	fe 01       	movw	r30, r28
    2256:	e1 55       	subi	r30, 0x51	; 81
    2258:	ff 4f       	sbci	r31, 0xFF	; 255
    225a:	60 81       	ld	r22, Z
    225c:	71 81       	ldd	r23, Z+1	; 0x01
    225e:	82 81       	ldd	r24, Z+2	; 0x02
    2260:	93 81       	ldd	r25, Z+3	; 0x03
    2262:	20 e0       	ldi	r18, 0x00	; 0
    2264:	3f ef       	ldi	r19, 0xFF	; 255
    2266:	4f e7       	ldi	r20, 0x7F	; 127
    2268:	57 e4       	ldi	r21, 0x47	; 71
    226a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    226e:	18 16       	cp	r1, r24
    2270:	0c f0       	brlt	.+2      	; 0x2274 <main+0x88e>
    2272:	43 c0       	rjmp	.+134    	; 0x22fa <main+0x914>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2274:	fe 01       	movw	r30, r28
    2276:	ed 54       	subi	r30, 0x4D	; 77
    2278:	ff 4f       	sbci	r31, 0xFF	; 255
    227a:	60 81       	ld	r22, Z
    227c:	71 81       	ldd	r23, Z+1	; 0x01
    227e:	82 81       	ldd	r24, Z+2	; 0x02
    2280:	93 81       	ldd	r25, Z+3	; 0x03
    2282:	20 e0       	ldi	r18, 0x00	; 0
    2284:	30 e0       	ldi	r19, 0x00	; 0
    2286:	40 e2       	ldi	r20, 0x20	; 32
    2288:	51 e4       	ldi	r21, 0x41	; 65
    228a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    228e:	dc 01       	movw	r26, r24
    2290:	cb 01       	movw	r24, r22
    2292:	8e 01       	movw	r16, r28
    2294:	03 55       	subi	r16, 0x53	; 83
    2296:	1f 4f       	sbci	r17, 0xFF	; 255
    2298:	bc 01       	movw	r22, r24
    229a:	cd 01       	movw	r24, r26
    229c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    22a0:	dc 01       	movw	r26, r24
    22a2:	cb 01       	movw	r24, r22
    22a4:	f8 01       	movw	r30, r16
    22a6:	91 83       	std	Z+1, r25	; 0x01
    22a8:	80 83       	st	Z, r24
    22aa:	1f c0       	rjmp	.+62     	; 0x22ea <main+0x904>
    22ac:	fe 01       	movw	r30, r28
    22ae:	e5 55       	subi	r30, 0x55	; 85
    22b0:	ff 4f       	sbci	r31, 0xFF	; 255
    22b2:	80 e9       	ldi	r24, 0x90	; 144
    22b4:	91 e0       	ldi	r25, 0x01	; 1
    22b6:	91 83       	std	Z+1, r25	; 0x01
    22b8:	80 83       	st	Z, r24
    22ba:	fe 01       	movw	r30, r28
    22bc:	e5 55       	subi	r30, 0x55	; 85
    22be:	ff 4f       	sbci	r31, 0xFF	; 255
    22c0:	80 81       	ld	r24, Z
    22c2:	91 81       	ldd	r25, Z+1	; 0x01
    22c4:	01 97       	sbiw	r24, 0x01	; 1
    22c6:	f1 f7       	brne	.-4      	; 0x22c4 <main+0x8de>
    22c8:	fe 01       	movw	r30, r28
    22ca:	e5 55       	subi	r30, 0x55	; 85
    22cc:	ff 4f       	sbci	r31, 0xFF	; 255
    22ce:	91 83       	std	Z+1, r25	; 0x01
    22d0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    22d2:	de 01       	movw	r26, r28
    22d4:	a3 55       	subi	r26, 0x53	; 83
    22d6:	bf 4f       	sbci	r27, 0xFF	; 255
    22d8:	fe 01       	movw	r30, r28
    22da:	e3 55       	subi	r30, 0x53	; 83
    22dc:	ff 4f       	sbci	r31, 0xFF	; 255
    22de:	80 81       	ld	r24, Z
    22e0:	91 81       	ldd	r25, Z+1	; 0x01
    22e2:	01 97       	sbiw	r24, 0x01	; 1
    22e4:	11 96       	adiw	r26, 0x01	; 1
    22e6:	9c 93       	st	X, r25
    22e8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    22ea:	fe 01       	movw	r30, r28
    22ec:	e3 55       	subi	r30, 0x53	; 83
    22ee:	ff 4f       	sbci	r31, 0xFF	; 255
    22f0:	80 81       	ld	r24, Z
    22f2:	91 81       	ldd	r25, Z+1	; 0x01
    22f4:	00 97       	sbiw	r24, 0x00	; 0
    22f6:	d1 f6       	brne	.-76     	; 0x22ac <main+0x8c6>
    22f8:	27 c0       	rjmp	.+78     	; 0x2348 <main+0x962>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22fa:	8e 01       	movw	r16, r28
    22fc:	03 55       	subi	r16, 0x53	; 83
    22fe:	1f 4f       	sbci	r17, 0xFF	; 255
    2300:	fe 01       	movw	r30, r28
    2302:	e1 55       	subi	r30, 0x51	; 81
    2304:	ff 4f       	sbci	r31, 0xFF	; 255
    2306:	60 81       	ld	r22, Z
    2308:	71 81       	ldd	r23, Z+1	; 0x01
    230a:	82 81       	ldd	r24, Z+2	; 0x02
    230c:	93 81       	ldd	r25, Z+3	; 0x03
    230e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2312:	dc 01       	movw	r26, r24
    2314:	cb 01       	movw	r24, r22
    2316:	f8 01       	movw	r30, r16
    2318:	91 83       	std	Z+1, r25	; 0x01
    231a:	80 83       	st	Z, r24
    231c:	de 01       	movw	r26, r28
    231e:	a7 55       	subi	r26, 0x57	; 87
    2320:	bf 4f       	sbci	r27, 0xFF	; 255
    2322:	fe 01       	movw	r30, r28
    2324:	e3 55       	subi	r30, 0x53	; 83
    2326:	ff 4f       	sbci	r31, 0xFF	; 255
    2328:	80 81       	ld	r24, Z
    232a:	91 81       	ldd	r25, Z+1	; 0x01
    232c:	8d 93       	st	X+, r24
    232e:	9c 93       	st	X, r25
    2330:	fe 01       	movw	r30, r28
    2332:	e7 55       	subi	r30, 0x57	; 87
    2334:	ff 4f       	sbci	r31, 0xFF	; 255
    2336:	80 81       	ld	r24, Z
    2338:	91 81       	ldd	r25, Z+1	; 0x01
    233a:	01 97       	sbiw	r24, 0x01	; 1
    233c:	f1 f7       	brne	.-4      	; 0x233a <main+0x954>
    233e:	fe 01       	movw	r30, r28
    2340:	e7 55       	subi	r30, 0x57	; 87
    2342:	ff 4f       	sbci	r31, 0xFF	; 255
    2344:	91 83       	std	Z+1, r25	; 0x01
    2346:	80 83       	st	Z, r24
			_delay_ms(50);
			DIO_u8SetValueToAllPins(2, 1, 0, 1, 1, 1, 1, 1, 0); //6
    2348:	82 e0       	ldi	r24, 0x02	; 2
    234a:	61 e0       	ldi	r22, 0x01	; 1
    234c:	40 e0       	ldi	r20, 0x00	; 0
    234e:	21 e0       	ldi	r18, 0x01	; 1
    2350:	01 e0       	ldi	r16, 0x01	; 1
    2352:	ee 24       	eor	r14, r14
    2354:	e3 94       	inc	r14
    2356:	cc 24       	eor	r12, r12
    2358:	c3 94       	inc	r12
    235a:	aa 24       	eor	r10, r10
    235c:	a3 94       	inc	r10
    235e:	88 24       	eor	r8, r8
    2360:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <DIO_u8SetValueToAllPins>
    2364:	fe 01       	movw	r30, r28
    2366:	eb 55       	subi	r30, 0x5B	; 91
    2368:	ff 4f       	sbci	r31, 0xFF	; 255
    236a:	80 e0       	ldi	r24, 0x00	; 0
    236c:	90 e0       	ldi	r25, 0x00	; 0
    236e:	a8 e4       	ldi	r26, 0x48	; 72
    2370:	b2 e4       	ldi	r27, 0x42	; 66
    2372:	80 83       	st	Z, r24
    2374:	91 83       	std	Z+1, r25	; 0x01
    2376:	a2 83       	std	Z+2, r26	; 0x02
    2378:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    237a:	8e 01       	movw	r16, r28
    237c:	0f 55       	subi	r16, 0x5F	; 95
    237e:	1f 4f       	sbci	r17, 0xFF	; 255
    2380:	fe 01       	movw	r30, r28
    2382:	eb 55       	subi	r30, 0x5B	; 91
    2384:	ff 4f       	sbci	r31, 0xFF	; 255
    2386:	60 81       	ld	r22, Z
    2388:	71 81       	ldd	r23, Z+1	; 0x01
    238a:	82 81       	ldd	r24, Z+2	; 0x02
    238c:	93 81       	ldd	r25, Z+3	; 0x03
    238e:	20 e0       	ldi	r18, 0x00	; 0
    2390:	30 e0       	ldi	r19, 0x00	; 0
    2392:	4a e7       	ldi	r20, 0x7A	; 122
    2394:	55 e4       	ldi	r21, 0x45	; 69
    2396:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    239a:	dc 01       	movw	r26, r24
    239c:	cb 01       	movw	r24, r22
    239e:	f8 01       	movw	r30, r16
    23a0:	80 83       	st	Z, r24
    23a2:	91 83       	std	Z+1, r25	; 0x01
    23a4:	a2 83       	std	Z+2, r26	; 0x02
    23a6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    23a8:	fe 01       	movw	r30, r28
    23aa:	ef 55       	subi	r30, 0x5F	; 95
    23ac:	ff 4f       	sbci	r31, 0xFF	; 255
    23ae:	60 81       	ld	r22, Z
    23b0:	71 81       	ldd	r23, Z+1	; 0x01
    23b2:	82 81       	ldd	r24, Z+2	; 0x02
    23b4:	93 81       	ldd	r25, Z+3	; 0x03
    23b6:	20 e0       	ldi	r18, 0x00	; 0
    23b8:	30 e0       	ldi	r19, 0x00	; 0
    23ba:	40 e8       	ldi	r20, 0x80	; 128
    23bc:	5f e3       	ldi	r21, 0x3F	; 63
    23be:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    23c2:	88 23       	and	r24, r24
    23c4:	44 f4       	brge	.+16     	; 0x23d6 <main+0x9f0>
		__ticks = 1;
    23c6:	fe 01       	movw	r30, r28
    23c8:	e1 56       	subi	r30, 0x61	; 97
    23ca:	ff 4f       	sbci	r31, 0xFF	; 255
    23cc:	81 e0       	ldi	r24, 0x01	; 1
    23ce:	90 e0       	ldi	r25, 0x00	; 0
    23d0:	91 83       	std	Z+1, r25	; 0x01
    23d2:	80 83       	st	Z, r24
    23d4:	64 c0       	rjmp	.+200    	; 0x249e <main+0xab8>
	else if (__tmp > 65535)
    23d6:	fe 01       	movw	r30, r28
    23d8:	ef 55       	subi	r30, 0x5F	; 95
    23da:	ff 4f       	sbci	r31, 0xFF	; 255
    23dc:	60 81       	ld	r22, Z
    23de:	71 81       	ldd	r23, Z+1	; 0x01
    23e0:	82 81       	ldd	r24, Z+2	; 0x02
    23e2:	93 81       	ldd	r25, Z+3	; 0x03
    23e4:	20 e0       	ldi	r18, 0x00	; 0
    23e6:	3f ef       	ldi	r19, 0xFF	; 255
    23e8:	4f e7       	ldi	r20, 0x7F	; 127
    23ea:	57 e4       	ldi	r21, 0x47	; 71
    23ec:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    23f0:	18 16       	cp	r1, r24
    23f2:	0c f0       	brlt	.+2      	; 0x23f6 <main+0xa10>
    23f4:	43 c0       	rjmp	.+134    	; 0x247c <main+0xa96>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    23f6:	fe 01       	movw	r30, r28
    23f8:	eb 55       	subi	r30, 0x5B	; 91
    23fa:	ff 4f       	sbci	r31, 0xFF	; 255
    23fc:	60 81       	ld	r22, Z
    23fe:	71 81       	ldd	r23, Z+1	; 0x01
    2400:	82 81       	ldd	r24, Z+2	; 0x02
    2402:	93 81       	ldd	r25, Z+3	; 0x03
    2404:	20 e0       	ldi	r18, 0x00	; 0
    2406:	30 e0       	ldi	r19, 0x00	; 0
    2408:	40 e2       	ldi	r20, 0x20	; 32
    240a:	51 e4       	ldi	r21, 0x41	; 65
    240c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2410:	dc 01       	movw	r26, r24
    2412:	cb 01       	movw	r24, r22
    2414:	8e 01       	movw	r16, r28
    2416:	01 56       	subi	r16, 0x61	; 97
    2418:	1f 4f       	sbci	r17, 0xFF	; 255
    241a:	bc 01       	movw	r22, r24
    241c:	cd 01       	movw	r24, r26
    241e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2422:	dc 01       	movw	r26, r24
    2424:	cb 01       	movw	r24, r22
    2426:	f8 01       	movw	r30, r16
    2428:	91 83       	std	Z+1, r25	; 0x01
    242a:	80 83       	st	Z, r24
    242c:	1f c0       	rjmp	.+62     	; 0x246c <main+0xa86>
    242e:	fe 01       	movw	r30, r28
    2430:	e3 56       	subi	r30, 0x63	; 99
    2432:	ff 4f       	sbci	r31, 0xFF	; 255
    2434:	80 e9       	ldi	r24, 0x90	; 144
    2436:	91 e0       	ldi	r25, 0x01	; 1
    2438:	91 83       	std	Z+1, r25	; 0x01
    243a:	80 83       	st	Z, r24
    243c:	fe 01       	movw	r30, r28
    243e:	e3 56       	subi	r30, 0x63	; 99
    2440:	ff 4f       	sbci	r31, 0xFF	; 255
    2442:	80 81       	ld	r24, Z
    2444:	91 81       	ldd	r25, Z+1	; 0x01
    2446:	01 97       	sbiw	r24, 0x01	; 1
    2448:	f1 f7       	brne	.-4      	; 0x2446 <main+0xa60>
    244a:	fe 01       	movw	r30, r28
    244c:	e3 56       	subi	r30, 0x63	; 99
    244e:	ff 4f       	sbci	r31, 0xFF	; 255
    2450:	91 83       	std	Z+1, r25	; 0x01
    2452:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2454:	de 01       	movw	r26, r28
    2456:	a1 56       	subi	r26, 0x61	; 97
    2458:	bf 4f       	sbci	r27, 0xFF	; 255
    245a:	fe 01       	movw	r30, r28
    245c:	e1 56       	subi	r30, 0x61	; 97
    245e:	ff 4f       	sbci	r31, 0xFF	; 255
    2460:	80 81       	ld	r24, Z
    2462:	91 81       	ldd	r25, Z+1	; 0x01
    2464:	01 97       	sbiw	r24, 0x01	; 1
    2466:	11 96       	adiw	r26, 0x01	; 1
    2468:	9c 93       	st	X, r25
    246a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    246c:	fe 01       	movw	r30, r28
    246e:	e1 56       	subi	r30, 0x61	; 97
    2470:	ff 4f       	sbci	r31, 0xFF	; 255
    2472:	80 81       	ld	r24, Z
    2474:	91 81       	ldd	r25, Z+1	; 0x01
    2476:	00 97       	sbiw	r24, 0x00	; 0
    2478:	d1 f6       	brne	.-76     	; 0x242e <main+0xa48>
    247a:	27 c0       	rjmp	.+78     	; 0x24ca <main+0xae4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    247c:	8e 01       	movw	r16, r28
    247e:	01 56       	subi	r16, 0x61	; 97
    2480:	1f 4f       	sbci	r17, 0xFF	; 255
    2482:	fe 01       	movw	r30, r28
    2484:	ef 55       	subi	r30, 0x5F	; 95
    2486:	ff 4f       	sbci	r31, 0xFF	; 255
    2488:	60 81       	ld	r22, Z
    248a:	71 81       	ldd	r23, Z+1	; 0x01
    248c:	82 81       	ldd	r24, Z+2	; 0x02
    248e:	93 81       	ldd	r25, Z+3	; 0x03
    2490:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2494:	dc 01       	movw	r26, r24
    2496:	cb 01       	movw	r24, r22
    2498:	f8 01       	movw	r30, r16
    249a:	91 83       	std	Z+1, r25	; 0x01
    249c:	80 83       	st	Z, r24
    249e:	de 01       	movw	r26, r28
    24a0:	a5 56       	subi	r26, 0x65	; 101
    24a2:	bf 4f       	sbci	r27, 0xFF	; 255
    24a4:	fe 01       	movw	r30, r28
    24a6:	e1 56       	subi	r30, 0x61	; 97
    24a8:	ff 4f       	sbci	r31, 0xFF	; 255
    24aa:	80 81       	ld	r24, Z
    24ac:	91 81       	ldd	r25, Z+1	; 0x01
    24ae:	8d 93       	st	X+, r24
    24b0:	9c 93       	st	X, r25
    24b2:	fe 01       	movw	r30, r28
    24b4:	e5 56       	subi	r30, 0x65	; 101
    24b6:	ff 4f       	sbci	r31, 0xFF	; 255
    24b8:	80 81       	ld	r24, Z
    24ba:	91 81       	ldd	r25, Z+1	; 0x01
    24bc:	01 97       	sbiw	r24, 0x01	; 1
    24be:	f1 f7       	brne	.-4      	; 0x24bc <main+0xad6>
    24c0:	fe 01       	movw	r30, r28
    24c2:	e5 56       	subi	r30, 0x65	; 101
    24c4:	ff 4f       	sbci	r31, 0xFF	; 255
    24c6:	91 83       	std	Z+1, r25	; 0x01
    24c8:	80 83       	st	Z, r24
			_delay_ms(50);
			DIO_u8SetValueToAllPins(2, 1, 1, 1, 0, 0, 0, 0, 0); //7
    24ca:	82 e0       	ldi	r24, 0x02	; 2
    24cc:	61 e0       	ldi	r22, 0x01	; 1
    24ce:	41 e0       	ldi	r20, 0x01	; 1
    24d0:	21 e0       	ldi	r18, 0x01	; 1
    24d2:	00 e0       	ldi	r16, 0x00	; 0
    24d4:	ee 24       	eor	r14, r14
    24d6:	cc 24       	eor	r12, r12
    24d8:	aa 24       	eor	r10, r10
    24da:	88 24       	eor	r8, r8
    24dc:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <DIO_u8SetValueToAllPins>
    24e0:	fe 01       	movw	r30, r28
    24e2:	e9 56       	subi	r30, 0x69	; 105
    24e4:	ff 4f       	sbci	r31, 0xFF	; 255
    24e6:	80 e0       	ldi	r24, 0x00	; 0
    24e8:	90 e0       	ldi	r25, 0x00	; 0
    24ea:	a8 e4       	ldi	r26, 0x48	; 72
    24ec:	b2 e4       	ldi	r27, 0x42	; 66
    24ee:	80 83       	st	Z, r24
    24f0:	91 83       	std	Z+1, r25	; 0x01
    24f2:	a2 83       	std	Z+2, r26	; 0x02
    24f4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    24f6:	8e 01       	movw	r16, r28
    24f8:	0d 56       	subi	r16, 0x6D	; 109
    24fa:	1f 4f       	sbci	r17, 0xFF	; 255
    24fc:	fe 01       	movw	r30, r28
    24fe:	e9 56       	subi	r30, 0x69	; 105
    2500:	ff 4f       	sbci	r31, 0xFF	; 255
    2502:	60 81       	ld	r22, Z
    2504:	71 81       	ldd	r23, Z+1	; 0x01
    2506:	82 81       	ldd	r24, Z+2	; 0x02
    2508:	93 81       	ldd	r25, Z+3	; 0x03
    250a:	20 e0       	ldi	r18, 0x00	; 0
    250c:	30 e0       	ldi	r19, 0x00	; 0
    250e:	4a e7       	ldi	r20, 0x7A	; 122
    2510:	55 e4       	ldi	r21, 0x45	; 69
    2512:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2516:	dc 01       	movw	r26, r24
    2518:	cb 01       	movw	r24, r22
    251a:	f8 01       	movw	r30, r16
    251c:	80 83       	st	Z, r24
    251e:	91 83       	std	Z+1, r25	; 0x01
    2520:	a2 83       	std	Z+2, r26	; 0x02
    2522:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2524:	fe 01       	movw	r30, r28
    2526:	ed 56       	subi	r30, 0x6D	; 109
    2528:	ff 4f       	sbci	r31, 0xFF	; 255
    252a:	60 81       	ld	r22, Z
    252c:	71 81       	ldd	r23, Z+1	; 0x01
    252e:	82 81       	ldd	r24, Z+2	; 0x02
    2530:	93 81       	ldd	r25, Z+3	; 0x03
    2532:	20 e0       	ldi	r18, 0x00	; 0
    2534:	30 e0       	ldi	r19, 0x00	; 0
    2536:	40 e8       	ldi	r20, 0x80	; 128
    2538:	5f e3       	ldi	r21, 0x3F	; 63
    253a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    253e:	88 23       	and	r24, r24
    2540:	44 f4       	brge	.+16     	; 0x2552 <main+0xb6c>
		__ticks = 1;
    2542:	fe 01       	movw	r30, r28
    2544:	ef 56       	subi	r30, 0x6F	; 111
    2546:	ff 4f       	sbci	r31, 0xFF	; 255
    2548:	81 e0       	ldi	r24, 0x01	; 1
    254a:	90 e0       	ldi	r25, 0x00	; 0
    254c:	91 83       	std	Z+1, r25	; 0x01
    254e:	80 83       	st	Z, r24
    2550:	64 c0       	rjmp	.+200    	; 0x261a <main+0xc34>
	else if (__tmp > 65535)
    2552:	fe 01       	movw	r30, r28
    2554:	ed 56       	subi	r30, 0x6D	; 109
    2556:	ff 4f       	sbci	r31, 0xFF	; 255
    2558:	60 81       	ld	r22, Z
    255a:	71 81       	ldd	r23, Z+1	; 0x01
    255c:	82 81       	ldd	r24, Z+2	; 0x02
    255e:	93 81       	ldd	r25, Z+3	; 0x03
    2560:	20 e0       	ldi	r18, 0x00	; 0
    2562:	3f ef       	ldi	r19, 0xFF	; 255
    2564:	4f e7       	ldi	r20, 0x7F	; 127
    2566:	57 e4       	ldi	r21, 0x47	; 71
    2568:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    256c:	18 16       	cp	r1, r24
    256e:	0c f0       	brlt	.+2      	; 0x2572 <main+0xb8c>
    2570:	43 c0       	rjmp	.+134    	; 0x25f8 <main+0xc12>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2572:	fe 01       	movw	r30, r28
    2574:	e9 56       	subi	r30, 0x69	; 105
    2576:	ff 4f       	sbci	r31, 0xFF	; 255
    2578:	60 81       	ld	r22, Z
    257a:	71 81       	ldd	r23, Z+1	; 0x01
    257c:	82 81       	ldd	r24, Z+2	; 0x02
    257e:	93 81       	ldd	r25, Z+3	; 0x03
    2580:	20 e0       	ldi	r18, 0x00	; 0
    2582:	30 e0       	ldi	r19, 0x00	; 0
    2584:	40 e2       	ldi	r20, 0x20	; 32
    2586:	51 e4       	ldi	r21, 0x41	; 65
    2588:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    258c:	dc 01       	movw	r26, r24
    258e:	cb 01       	movw	r24, r22
    2590:	8e 01       	movw	r16, r28
    2592:	0f 56       	subi	r16, 0x6F	; 111
    2594:	1f 4f       	sbci	r17, 0xFF	; 255
    2596:	bc 01       	movw	r22, r24
    2598:	cd 01       	movw	r24, r26
    259a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    259e:	dc 01       	movw	r26, r24
    25a0:	cb 01       	movw	r24, r22
    25a2:	f8 01       	movw	r30, r16
    25a4:	91 83       	std	Z+1, r25	; 0x01
    25a6:	80 83       	st	Z, r24
    25a8:	1f c0       	rjmp	.+62     	; 0x25e8 <main+0xc02>
    25aa:	fe 01       	movw	r30, r28
    25ac:	e1 57       	subi	r30, 0x71	; 113
    25ae:	ff 4f       	sbci	r31, 0xFF	; 255
    25b0:	80 e9       	ldi	r24, 0x90	; 144
    25b2:	91 e0       	ldi	r25, 0x01	; 1
    25b4:	91 83       	std	Z+1, r25	; 0x01
    25b6:	80 83       	st	Z, r24
    25b8:	fe 01       	movw	r30, r28
    25ba:	e1 57       	subi	r30, 0x71	; 113
    25bc:	ff 4f       	sbci	r31, 0xFF	; 255
    25be:	80 81       	ld	r24, Z
    25c0:	91 81       	ldd	r25, Z+1	; 0x01
    25c2:	01 97       	sbiw	r24, 0x01	; 1
    25c4:	f1 f7       	brne	.-4      	; 0x25c2 <main+0xbdc>
    25c6:	fe 01       	movw	r30, r28
    25c8:	e1 57       	subi	r30, 0x71	; 113
    25ca:	ff 4f       	sbci	r31, 0xFF	; 255
    25cc:	91 83       	std	Z+1, r25	; 0x01
    25ce:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25d0:	de 01       	movw	r26, r28
    25d2:	af 56       	subi	r26, 0x6F	; 111
    25d4:	bf 4f       	sbci	r27, 0xFF	; 255
    25d6:	fe 01       	movw	r30, r28
    25d8:	ef 56       	subi	r30, 0x6F	; 111
    25da:	ff 4f       	sbci	r31, 0xFF	; 255
    25dc:	80 81       	ld	r24, Z
    25de:	91 81       	ldd	r25, Z+1	; 0x01
    25e0:	01 97       	sbiw	r24, 0x01	; 1
    25e2:	11 96       	adiw	r26, 0x01	; 1
    25e4:	9c 93       	st	X, r25
    25e6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25e8:	fe 01       	movw	r30, r28
    25ea:	ef 56       	subi	r30, 0x6F	; 111
    25ec:	ff 4f       	sbci	r31, 0xFF	; 255
    25ee:	80 81       	ld	r24, Z
    25f0:	91 81       	ldd	r25, Z+1	; 0x01
    25f2:	00 97       	sbiw	r24, 0x00	; 0
    25f4:	d1 f6       	brne	.-76     	; 0x25aa <main+0xbc4>
    25f6:	27 c0       	rjmp	.+78     	; 0x2646 <main+0xc60>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    25f8:	8e 01       	movw	r16, r28
    25fa:	0f 56       	subi	r16, 0x6F	; 111
    25fc:	1f 4f       	sbci	r17, 0xFF	; 255
    25fe:	fe 01       	movw	r30, r28
    2600:	ed 56       	subi	r30, 0x6D	; 109
    2602:	ff 4f       	sbci	r31, 0xFF	; 255
    2604:	60 81       	ld	r22, Z
    2606:	71 81       	ldd	r23, Z+1	; 0x01
    2608:	82 81       	ldd	r24, Z+2	; 0x02
    260a:	93 81       	ldd	r25, Z+3	; 0x03
    260c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2610:	dc 01       	movw	r26, r24
    2612:	cb 01       	movw	r24, r22
    2614:	f8 01       	movw	r30, r16
    2616:	91 83       	std	Z+1, r25	; 0x01
    2618:	80 83       	st	Z, r24
    261a:	de 01       	movw	r26, r28
    261c:	a3 57       	subi	r26, 0x73	; 115
    261e:	bf 4f       	sbci	r27, 0xFF	; 255
    2620:	fe 01       	movw	r30, r28
    2622:	ef 56       	subi	r30, 0x6F	; 111
    2624:	ff 4f       	sbci	r31, 0xFF	; 255
    2626:	80 81       	ld	r24, Z
    2628:	91 81       	ldd	r25, Z+1	; 0x01
    262a:	8d 93       	st	X+, r24
    262c:	9c 93       	st	X, r25
    262e:	fe 01       	movw	r30, r28
    2630:	e3 57       	subi	r30, 0x73	; 115
    2632:	ff 4f       	sbci	r31, 0xFF	; 255
    2634:	80 81       	ld	r24, Z
    2636:	91 81       	ldd	r25, Z+1	; 0x01
    2638:	01 97       	sbiw	r24, 0x01	; 1
    263a:	f1 f7       	brne	.-4      	; 0x2638 <main+0xc52>
    263c:	fe 01       	movw	r30, r28
    263e:	e3 57       	subi	r30, 0x73	; 115
    2640:	ff 4f       	sbci	r31, 0xFF	; 255
    2642:	91 83       	std	Z+1, r25	; 0x01
    2644:	80 83       	st	Z, r24
			_delay_ms(50);
			DIO_u8SetValueToAllPins(2, 1, 1, 1, 1, 1, 1, 1, 0); //8
    2646:	82 e0       	ldi	r24, 0x02	; 2
    2648:	61 e0       	ldi	r22, 0x01	; 1
    264a:	41 e0       	ldi	r20, 0x01	; 1
    264c:	21 e0       	ldi	r18, 0x01	; 1
    264e:	01 e0       	ldi	r16, 0x01	; 1
    2650:	ee 24       	eor	r14, r14
    2652:	e3 94       	inc	r14
    2654:	cc 24       	eor	r12, r12
    2656:	c3 94       	inc	r12
    2658:	aa 24       	eor	r10, r10
    265a:	a3 94       	inc	r10
    265c:	88 24       	eor	r8, r8
    265e:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <DIO_u8SetValueToAllPins>
    2662:	fe 01       	movw	r30, r28
    2664:	e7 57       	subi	r30, 0x77	; 119
    2666:	ff 4f       	sbci	r31, 0xFF	; 255
    2668:	80 e0       	ldi	r24, 0x00	; 0
    266a:	90 e0       	ldi	r25, 0x00	; 0
    266c:	a8 e4       	ldi	r26, 0x48	; 72
    266e:	b2 e4       	ldi	r27, 0x42	; 66
    2670:	80 83       	st	Z, r24
    2672:	91 83       	std	Z+1, r25	; 0x01
    2674:	a2 83       	std	Z+2, r26	; 0x02
    2676:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2678:	8e 01       	movw	r16, r28
    267a:	0b 57       	subi	r16, 0x7B	; 123
    267c:	1f 4f       	sbci	r17, 0xFF	; 255
    267e:	fe 01       	movw	r30, r28
    2680:	e7 57       	subi	r30, 0x77	; 119
    2682:	ff 4f       	sbci	r31, 0xFF	; 255
    2684:	60 81       	ld	r22, Z
    2686:	71 81       	ldd	r23, Z+1	; 0x01
    2688:	82 81       	ldd	r24, Z+2	; 0x02
    268a:	93 81       	ldd	r25, Z+3	; 0x03
    268c:	20 e0       	ldi	r18, 0x00	; 0
    268e:	30 e0       	ldi	r19, 0x00	; 0
    2690:	4a e7       	ldi	r20, 0x7A	; 122
    2692:	55 e4       	ldi	r21, 0x45	; 69
    2694:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2698:	dc 01       	movw	r26, r24
    269a:	cb 01       	movw	r24, r22
    269c:	f8 01       	movw	r30, r16
    269e:	80 83       	st	Z, r24
    26a0:	91 83       	std	Z+1, r25	; 0x01
    26a2:	a2 83       	std	Z+2, r26	; 0x02
    26a4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    26a6:	fe 01       	movw	r30, r28
    26a8:	eb 57       	subi	r30, 0x7B	; 123
    26aa:	ff 4f       	sbci	r31, 0xFF	; 255
    26ac:	60 81       	ld	r22, Z
    26ae:	71 81       	ldd	r23, Z+1	; 0x01
    26b0:	82 81       	ldd	r24, Z+2	; 0x02
    26b2:	93 81       	ldd	r25, Z+3	; 0x03
    26b4:	20 e0       	ldi	r18, 0x00	; 0
    26b6:	30 e0       	ldi	r19, 0x00	; 0
    26b8:	40 e8       	ldi	r20, 0x80	; 128
    26ba:	5f e3       	ldi	r21, 0x3F	; 63
    26bc:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    26c0:	88 23       	and	r24, r24
    26c2:	44 f4       	brge	.+16     	; 0x26d4 <main+0xcee>
		__ticks = 1;
    26c4:	fe 01       	movw	r30, r28
    26c6:	ed 57       	subi	r30, 0x7D	; 125
    26c8:	ff 4f       	sbci	r31, 0xFF	; 255
    26ca:	81 e0       	ldi	r24, 0x01	; 1
    26cc:	90 e0       	ldi	r25, 0x00	; 0
    26ce:	91 83       	std	Z+1, r25	; 0x01
    26d0:	80 83       	st	Z, r24
    26d2:	64 c0       	rjmp	.+200    	; 0x279c <main+0xdb6>
	else if (__tmp > 65535)
    26d4:	fe 01       	movw	r30, r28
    26d6:	eb 57       	subi	r30, 0x7B	; 123
    26d8:	ff 4f       	sbci	r31, 0xFF	; 255
    26da:	60 81       	ld	r22, Z
    26dc:	71 81       	ldd	r23, Z+1	; 0x01
    26de:	82 81       	ldd	r24, Z+2	; 0x02
    26e0:	93 81       	ldd	r25, Z+3	; 0x03
    26e2:	20 e0       	ldi	r18, 0x00	; 0
    26e4:	3f ef       	ldi	r19, 0xFF	; 255
    26e6:	4f e7       	ldi	r20, 0x7F	; 127
    26e8:	57 e4       	ldi	r21, 0x47	; 71
    26ea:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    26ee:	18 16       	cp	r1, r24
    26f0:	0c f0       	brlt	.+2      	; 0x26f4 <main+0xd0e>
    26f2:	43 c0       	rjmp	.+134    	; 0x277a <main+0xd94>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26f4:	fe 01       	movw	r30, r28
    26f6:	e7 57       	subi	r30, 0x77	; 119
    26f8:	ff 4f       	sbci	r31, 0xFF	; 255
    26fa:	60 81       	ld	r22, Z
    26fc:	71 81       	ldd	r23, Z+1	; 0x01
    26fe:	82 81       	ldd	r24, Z+2	; 0x02
    2700:	93 81       	ldd	r25, Z+3	; 0x03
    2702:	20 e0       	ldi	r18, 0x00	; 0
    2704:	30 e0       	ldi	r19, 0x00	; 0
    2706:	40 e2       	ldi	r20, 0x20	; 32
    2708:	51 e4       	ldi	r21, 0x41	; 65
    270a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    270e:	dc 01       	movw	r26, r24
    2710:	cb 01       	movw	r24, r22
    2712:	8e 01       	movw	r16, r28
    2714:	0d 57       	subi	r16, 0x7D	; 125
    2716:	1f 4f       	sbci	r17, 0xFF	; 255
    2718:	bc 01       	movw	r22, r24
    271a:	cd 01       	movw	r24, r26
    271c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2720:	dc 01       	movw	r26, r24
    2722:	cb 01       	movw	r24, r22
    2724:	f8 01       	movw	r30, r16
    2726:	91 83       	std	Z+1, r25	; 0x01
    2728:	80 83       	st	Z, r24
    272a:	1f c0       	rjmp	.+62     	; 0x276a <main+0xd84>
    272c:	fe 01       	movw	r30, r28
    272e:	ef 57       	subi	r30, 0x7F	; 127
    2730:	ff 4f       	sbci	r31, 0xFF	; 255
    2732:	80 e9       	ldi	r24, 0x90	; 144
    2734:	91 e0       	ldi	r25, 0x01	; 1
    2736:	91 83       	std	Z+1, r25	; 0x01
    2738:	80 83       	st	Z, r24
    273a:	fe 01       	movw	r30, r28
    273c:	ef 57       	subi	r30, 0x7F	; 127
    273e:	ff 4f       	sbci	r31, 0xFF	; 255
    2740:	80 81       	ld	r24, Z
    2742:	91 81       	ldd	r25, Z+1	; 0x01
    2744:	01 97       	sbiw	r24, 0x01	; 1
    2746:	f1 f7       	brne	.-4      	; 0x2744 <main+0xd5e>
    2748:	fe 01       	movw	r30, r28
    274a:	ef 57       	subi	r30, 0x7F	; 127
    274c:	ff 4f       	sbci	r31, 0xFF	; 255
    274e:	91 83       	std	Z+1, r25	; 0x01
    2750:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2752:	de 01       	movw	r26, r28
    2754:	ad 57       	subi	r26, 0x7D	; 125
    2756:	bf 4f       	sbci	r27, 0xFF	; 255
    2758:	fe 01       	movw	r30, r28
    275a:	ed 57       	subi	r30, 0x7D	; 125
    275c:	ff 4f       	sbci	r31, 0xFF	; 255
    275e:	80 81       	ld	r24, Z
    2760:	91 81       	ldd	r25, Z+1	; 0x01
    2762:	01 97       	sbiw	r24, 0x01	; 1
    2764:	11 96       	adiw	r26, 0x01	; 1
    2766:	9c 93       	st	X, r25
    2768:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    276a:	fe 01       	movw	r30, r28
    276c:	ed 57       	subi	r30, 0x7D	; 125
    276e:	ff 4f       	sbci	r31, 0xFF	; 255
    2770:	80 81       	ld	r24, Z
    2772:	91 81       	ldd	r25, Z+1	; 0x01
    2774:	00 97       	sbiw	r24, 0x00	; 0
    2776:	d1 f6       	brne	.-76     	; 0x272c <main+0xd46>
    2778:	27 c0       	rjmp	.+78     	; 0x27c8 <main+0xde2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    277a:	8e 01       	movw	r16, r28
    277c:	0d 57       	subi	r16, 0x7D	; 125
    277e:	1f 4f       	sbci	r17, 0xFF	; 255
    2780:	fe 01       	movw	r30, r28
    2782:	eb 57       	subi	r30, 0x7B	; 123
    2784:	ff 4f       	sbci	r31, 0xFF	; 255
    2786:	60 81       	ld	r22, Z
    2788:	71 81       	ldd	r23, Z+1	; 0x01
    278a:	82 81       	ldd	r24, Z+2	; 0x02
    278c:	93 81       	ldd	r25, Z+3	; 0x03
    278e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2792:	dc 01       	movw	r26, r24
    2794:	cb 01       	movw	r24, r22
    2796:	f8 01       	movw	r30, r16
    2798:	91 83       	std	Z+1, r25	; 0x01
    279a:	80 83       	st	Z, r24
    279c:	de 01       	movw	r26, r28
    279e:	a1 58       	subi	r26, 0x81	; 129
    27a0:	bf 4f       	sbci	r27, 0xFF	; 255
    27a2:	fe 01       	movw	r30, r28
    27a4:	ed 57       	subi	r30, 0x7D	; 125
    27a6:	ff 4f       	sbci	r31, 0xFF	; 255
    27a8:	80 81       	ld	r24, Z
    27aa:	91 81       	ldd	r25, Z+1	; 0x01
    27ac:	8d 93       	st	X+, r24
    27ae:	9c 93       	st	X, r25
    27b0:	fe 01       	movw	r30, r28
    27b2:	e1 58       	subi	r30, 0x81	; 129
    27b4:	ff 4f       	sbci	r31, 0xFF	; 255
    27b6:	80 81       	ld	r24, Z
    27b8:	91 81       	ldd	r25, Z+1	; 0x01
    27ba:	01 97       	sbiw	r24, 0x01	; 1
    27bc:	f1 f7       	brne	.-4      	; 0x27ba <main+0xdd4>
    27be:	fe 01       	movw	r30, r28
    27c0:	e1 58       	subi	r30, 0x81	; 129
    27c2:	ff 4f       	sbci	r31, 0xFF	; 255
    27c4:	91 83       	std	Z+1, r25	; 0x01
    27c6:	80 83       	st	Z, r24
			_delay_ms(50);
			DIO_u8SetValueToAllPins(2, 1, 1, 1, 1, 0, 1, 1, 0); //9
    27c8:	82 e0       	ldi	r24, 0x02	; 2
    27ca:	61 e0       	ldi	r22, 0x01	; 1
    27cc:	41 e0       	ldi	r20, 0x01	; 1
    27ce:	21 e0       	ldi	r18, 0x01	; 1
    27d0:	01 e0       	ldi	r16, 0x01	; 1
    27d2:	ee 24       	eor	r14, r14
    27d4:	cc 24       	eor	r12, r12
    27d6:	c3 94       	inc	r12
    27d8:	aa 24       	eor	r10, r10
    27da:	a3 94       	inc	r10
    27dc:	88 24       	eor	r8, r8
    27de:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <DIO_u8SetValueToAllPins>
    27e2:	fe 01       	movw	r30, r28
    27e4:	e5 58       	subi	r30, 0x85	; 133
    27e6:	ff 4f       	sbci	r31, 0xFF	; 255
    27e8:	80 e0       	ldi	r24, 0x00	; 0
    27ea:	90 e0       	ldi	r25, 0x00	; 0
    27ec:	a8 e4       	ldi	r26, 0x48	; 72
    27ee:	b2 e4       	ldi	r27, 0x42	; 66
    27f0:	80 83       	st	Z, r24
    27f2:	91 83       	std	Z+1, r25	; 0x01
    27f4:	a2 83       	std	Z+2, r26	; 0x02
    27f6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    27f8:	8e 01       	movw	r16, r28
    27fa:	09 58       	subi	r16, 0x89	; 137
    27fc:	1f 4f       	sbci	r17, 0xFF	; 255
    27fe:	fe 01       	movw	r30, r28
    2800:	e5 58       	subi	r30, 0x85	; 133
    2802:	ff 4f       	sbci	r31, 0xFF	; 255
    2804:	60 81       	ld	r22, Z
    2806:	71 81       	ldd	r23, Z+1	; 0x01
    2808:	82 81       	ldd	r24, Z+2	; 0x02
    280a:	93 81       	ldd	r25, Z+3	; 0x03
    280c:	20 e0       	ldi	r18, 0x00	; 0
    280e:	30 e0       	ldi	r19, 0x00	; 0
    2810:	4a e7       	ldi	r20, 0x7A	; 122
    2812:	55 e4       	ldi	r21, 0x45	; 69
    2814:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2818:	dc 01       	movw	r26, r24
    281a:	cb 01       	movw	r24, r22
    281c:	f8 01       	movw	r30, r16
    281e:	80 83       	st	Z, r24
    2820:	91 83       	std	Z+1, r25	; 0x01
    2822:	a2 83       	std	Z+2, r26	; 0x02
    2824:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2826:	fe 01       	movw	r30, r28
    2828:	e9 58       	subi	r30, 0x89	; 137
    282a:	ff 4f       	sbci	r31, 0xFF	; 255
    282c:	60 81       	ld	r22, Z
    282e:	71 81       	ldd	r23, Z+1	; 0x01
    2830:	82 81       	ldd	r24, Z+2	; 0x02
    2832:	93 81       	ldd	r25, Z+3	; 0x03
    2834:	20 e0       	ldi	r18, 0x00	; 0
    2836:	30 e0       	ldi	r19, 0x00	; 0
    2838:	40 e8       	ldi	r20, 0x80	; 128
    283a:	5f e3       	ldi	r21, 0x3F	; 63
    283c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2840:	88 23       	and	r24, r24
    2842:	44 f4       	brge	.+16     	; 0x2854 <main+0xe6e>
		__ticks = 1;
    2844:	fe 01       	movw	r30, r28
    2846:	eb 58       	subi	r30, 0x8B	; 139
    2848:	ff 4f       	sbci	r31, 0xFF	; 255
    284a:	81 e0       	ldi	r24, 0x01	; 1
    284c:	90 e0       	ldi	r25, 0x00	; 0
    284e:	91 83       	std	Z+1, r25	; 0x01
    2850:	80 83       	st	Z, r24
    2852:	64 c0       	rjmp	.+200    	; 0x291c <main+0xf36>
	else if (__tmp > 65535)
    2854:	fe 01       	movw	r30, r28
    2856:	e9 58       	subi	r30, 0x89	; 137
    2858:	ff 4f       	sbci	r31, 0xFF	; 255
    285a:	60 81       	ld	r22, Z
    285c:	71 81       	ldd	r23, Z+1	; 0x01
    285e:	82 81       	ldd	r24, Z+2	; 0x02
    2860:	93 81       	ldd	r25, Z+3	; 0x03
    2862:	20 e0       	ldi	r18, 0x00	; 0
    2864:	3f ef       	ldi	r19, 0xFF	; 255
    2866:	4f e7       	ldi	r20, 0x7F	; 127
    2868:	57 e4       	ldi	r21, 0x47	; 71
    286a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    286e:	18 16       	cp	r1, r24
    2870:	0c f0       	brlt	.+2      	; 0x2874 <main+0xe8e>
    2872:	43 c0       	rjmp	.+134    	; 0x28fa <main+0xf14>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2874:	fe 01       	movw	r30, r28
    2876:	e5 58       	subi	r30, 0x85	; 133
    2878:	ff 4f       	sbci	r31, 0xFF	; 255
    287a:	60 81       	ld	r22, Z
    287c:	71 81       	ldd	r23, Z+1	; 0x01
    287e:	82 81       	ldd	r24, Z+2	; 0x02
    2880:	93 81       	ldd	r25, Z+3	; 0x03
    2882:	20 e0       	ldi	r18, 0x00	; 0
    2884:	30 e0       	ldi	r19, 0x00	; 0
    2886:	40 e2       	ldi	r20, 0x20	; 32
    2888:	51 e4       	ldi	r21, 0x41	; 65
    288a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    288e:	dc 01       	movw	r26, r24
    2890:	cb 01       	movw	r24, r22
    2892:	8e 01       	movw	r16, r28
    2894:	0b 58       	subi	r16, 0x8B	; 139
    2896:	1f 4f       	sbci	r17, 0xFF	; 255
    2898:	bc 01       	movw	r22, r24
    289a:	cd 01       	movw	r24, r26
    289c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    28a0:	dc 01       	movw	r26, r24
    28a2:	cb 01       	movw	r24, r22
    28a4:	f8 01       	movw	r30, r16
    28a6:	91 83       	std	Z+1, r25	; 0x01
    28a8:	80 83       	st	Z, r24
    28aa:	1f c0       	rjmp	.+62     	; 0x28ea <main+0xf04>
    28ac:	fe 01       	movw	r30, r28
    28ae:	ed 58       	subi	r30, 0x8D	; 141
    28b0:	ff 4f       	sbci	r31, 0xFF	; 255
    28b2:	80 e9       	ldi	r24, 0x90	; 144
    28b4:	91 e0       	ldi	r25, 0x01	; 1
    28b6:	91 83       	std	Z+1, r25	; 0x01
    28b8:	80 83       	st	Z, r24
    28ba:	fe 01       	movw	r30, r28
    28bc:	ed 58       	subi	r30, 0x8D	; 141
    28be:	ff 4f       	sbci	r31, 0xFF	; 255
    28c0:	80 81       	ld	r24, Z
    28c2:	91 81       	ldd	r25, Z+1	; 0x01
    28c4:	01 97       	sbiw	r24, 0x01	; 1
    28c6:	f1 f7       	brne	.-4      	; 0x28c4 <main+0xede>
    28c8:	fe 01       	movw	r30, r28
    28ca:	ed 58       	subi	r30, 0x8D	; 141
    28cc:	ff 4f       	sbci	r31, 0xFF	; 255
    28ce:	91 83       	std	Z+1, r25	; 0x01
    28d0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    28d2:	de 01       	movw	r26, r28
    28d4:	ab 58       	subi	r26, 0x8B	; 139
    28d6:	bf 4f       	sbci	r27, 0xFF	; 255
    28d8:	fe 01       	movw	r30, r28
    28da:	eb 58       	subi	r30, 0x8B	; 139
    28dc:	ff 4f       	sbci	r31, 0xFF	; 255
    28de:	80 81       	ld	r24, Z
    28e0:	91 81       	ldd	r25, Z+1	; 0x01
    28e2:	01 97       	sbiw	r24, 0x01	; 1
    28e4:	11 96       	adiw	r26, 0x01	; 1
    28e6:	9c 93       	st	X, r25
    28e8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    28ea:	fe 01       	movw	r30, r28
    28ec:	eb 58       	subi	r30, 0x8B	; 139
    28ee:	ff 4f       	sbci	r31, 0xFF	; 255
    28f0:	80 81       	ld	r24, Z
    28f2:	91 81       	ldd	r25, Z+1	; 0x01
    28f4:	00 97       	sbiw	r24, 0x00	; 0
    28f6:	d1 f6       	brne	.-76     	; 0x28ac <main+0xec6>
    28f8:	95 c8       	rjmp	.-3798   	; 0x1a24 <main+0x3e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    28fa:	8e 01       	movw	r16, r28
    28fc:	0b 58       	subi	r16, 0x8B	; 139
    28fe:	1f 4f       	sbci	r17, 0xFF	; 255
    2900:	fe 01       	movw	r30, r28
    2902:	e9 58       	subi	r30, 0x89	; 137
    2904:	ff 4f       	sbci	r31, 0xFF	; 255
    2906:	60 81       	ld	r22, Z
    2908:	71 81       	ldd	r23, Z+1	; 0x01
    290a:	82 81       	ldd	r24, Z+2	; 0x02
    290c:	93 81       	ldd	r25, Z+3	; 0x03
    290e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2912:	dc 01       	movw	r26, r24
    2914:	cb 01       	movw	r24, r22
    2916:	f8 01       	movw	r30, r16
    2918:	91 83       	std	Z+1, r25	; 0x01
    291a:	80 83       	st	Z, r24
    291c:	de 01       	movw	r26, r28
    291e:	af 58       	subi	r26, 0x8F	; 143
    2920:	bf 4f       	sbci	r27, 0xFF	; 255
    2922:	fe 01       	movw	r30, r28
    2924:	eb 58       	subi	r30, 0x8B	; 139
    2926:	ff 4f       	sbci	r31, 0xFF	; 255
    2928:	80 81       	ld	r24, Z
    292a:	91 81       	ldd	r25, Z+1	; 0x01
    292c:	11 96       	adiw	r26, 0x01	; 1
    292e:	9c 93       	st	X, r25
    2930:	8e 93       	st	-X, r24
    2932:	fe 01       	movw	r30, r28
    2934:	ef 58       	subi	r30, 0x8F	; 143
    2936:	ff 4f       	sbci	r31, 0xFF	; 255
    2938:	80 81       	ld	r24, Z
    293a:	91 81       	ldd	r25, Z+1	; 0x01
    293c:	01 97       	sbiw	r24, 0x01	; 1
    293e:	f1 f7       	brne	.-4      	; 0x293c <main+0xf56>
    2940:	fe 01       	movw	r30, r28
    2942:	ef 58       	subi	r30, 0x8F	; 143
    2944:	ff 4f       	sbci	r31, 0xFF	; 255
    2946:	91 83       	std	Z+1, r25	; 0x01
    2948:	80 83       	st	Z, r24
    294a:	6c c8       	rjmp	.-3880   	; 0x1a24 <main+0x3e>
			_delay_ms(50);
		}


		else if(Pin_Value1){
    294c:	80 91 68 00 	lds	r24, 0x0068
    2950:	88 23       	and	r24, r24
    2952:	09 f4       	brne	.+2      	; 0x2956 <main+0xf70>
    2954:	d6 c4       	rjmp	.+2476   	; 0x3302 <main+0x191c>
			DIO_u8SetValueToAllPins(2, 1, 1, 1, 0, 1, 1, 1, 0); // A
    2956:	82 e0       	ldi	r24, 0x02	; 2
    2958:	61 e0       	ldi	r22, 0x01	; 1
    295a:	41 e0       	ldi	r20, 0x01	; 1
    295c:	21 e0       	ldi	r18, 0x01	; 1
    295e:	00 e0       	ldi	r16, 0x00	; 0
    2960:	ee 24       	eor	r14, r14
    2962:	e3 94       	inc	r14
    2964:	cc 24       	eor	r12, r12
    2966:	c3 94       	inc	r12
    2968:	aa 24       	eor	r10, r10
    296a:	a3 94       	inc	r10
    296c:	88 24       	eor	r8, r8
    296e:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <DIO_u8SetValueToAllPins>
    2972:	fe 01       	movw	r30, r28
    2974:	e3 59       	subi	r30, 0x93	; 147
    2976:	ff 4f       	sbci	r31, 0xFF	; 255
    2978:	80 e0       	ldi	r24, 0x00	; 0
    297a:	90 e0       	ldi	r25, 0x00	; 0
    297c:	a8 e4       	ldi	r26, 0x48	; 72
    297e:	b2 e4       	ldi	r27, 0x42	; 66
    2980:	80 83       	st	Z, r24
    2982:	91 83       	std	Z+1, r25	; 0x01
    2984:	a2 83       	std	Z+2, r26	; 0x02
    2986:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2988:	8e 01       	movw	r16, r28
    298a:	07 59       	subi	r16, 0x97	; 151
    298c:	1f 4f       	sbci	r17, 0xFF	; 255
    298e:	fe 01       	movw	r30, r28
    2990:	e3 59       	subi	r30, 0x93	; 147
    2992:	ff 4f       	sbci	r31, 0xFF	; 255
    2994:	60 81       	ld	r22, Z
    2996:	71 81       	ldd	r23, Z+1	; 0x01
    2998:	82 81       	ldd	r24, Z+2	; 0x02
    299a:	93 81       	ldd	r25, Z+3	; 0x03
    299c:	20 e0       	ldi	r18, 0x00	; 0
    299e:	30 e0       	ldi	r19, 0x00	; 0
    29a0:	4a e7       	ldi	r20, 0x7A	; 122
    29a2:	55 e4       	ldi	r21, 0x45	; 69
    29a4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    29a8:	dc 01       	movw	r26, r24
    29aa:	cb 01       	movw	r24, r22
    29ac:	f8 01       	movw	r30, r16
    29ae:	80 83       	st	Z, r24
    29b0:	91 83       	std	Z+1, r25	; 0x01
    29b2:	a2 83       	std	Z+2, r26	; 0x02
    29b4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    29b6:	fe 01       	movw	r30, r28
    29b8:	e7 59       	subi	r30, 0x97	; 151
    29ba:	ff 4f       	sbci	r31, 0xFF	; 255
    29bc:	60 81       	ld	r22, Z
    29be:	71 81       	ldd	r23, Z+1	; 0x01
    29c0:	82 81       	ldd	r24, Z+2	; 0x02
    29c2:	93 81       	ldd	r25, Z+3	; 0x03
    29c4:	20 e0       	ldi	r18, 0x00	; 0
    29c6:	30 e0       	ldi	r19, 0x00	; 0
    29c8:	40 e8       	ldi	r20, 0x80	; 128
    29ca:	5f e3       	ldi	r21, 0x3F	; 63
    29cc:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    29d0:	88 23       	and	r24, r24
    29d2:	44 f4       	brge	.+16     	; 0x29e4 <main+0xffe>
		__ticks = 1;
    29d4:	fe 01       	movw	r30, r28
    29d6:	e9 59       	subi	r30, 0x99	; 153
    29d8:	ff 4f       	sbci	r31, 0xFF	; 255
    29da:	81 e0       	ldi	r24, 0x01	; 1
    29dc:	90 e0       	ldi	r25, 0x00	; 0
    29de:	91 83       	std	Z+1, r25	; 0x01
    29e0:	80 83       	st	Z, r24
    29e2:	64 c0       	rjmp	.+200    	; 0x2aac <main+0x10c6>
	else if (__tmp > 65535)
    29e4:	fe 01       	movw	r30, r28
    29e6:	e7 59       	subi	r30, 0x97	; 151
    29e8:	ff 4f       	sbci	r31, 0xFF	; 255
    29ea:	60 81       	ld	r22, Z
    29ec:	71 81       	ldd	r23, Z+1	; 0x01
    29ee:	82 81       	ldd	r24, Z+2	; 0x02
    29f0:	93 81       	ldd	r25, Z+3	; 0x03
    29f2:	20 e0       	ldi	r18, 0x00	; 0
    29f4:	3f ef       	ldi	r19, 0xFF	; 255
    29f6:	4f e7       	ldi	r20, 0x7F	; 127
    29f8:	57 e4       	ldi	r21, 0x47	; 71
    29fa:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    29fe:	18 16       	cp	r1, r24
    2a00:	0c f0       	brlt	.+2      	; 0x2a04 <main+0x101e>
    2a02:	43 c0       	rjmp	.+134    	; 0x2a8a <main+0x10a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a04:	fe 01       	movw	r30, r28
    2a06:	e3 59       	subi	r30, 0x93	; 147
    2a08:	ff 4f       	sbci	r31, 0xFF	; 255
    2a0a:	60 81       	ld	r22, Z
    2a0c:	71 81       	ldd	r23, Z+1	; 0x01
    2a0e:	82 81       	ldd	r24, Z+2	; 0x02
    2a10:	93 81       	ldd	r25, Z+3	; 0x03
    2a12:	20 e0       	ldi	r18, 0x00	; 0
    2a14:	30 e0       	ldi	r19, 0x00	; 0
    2a16:	40 e2       	ldi	r20, 0x20	; 32
    2a18:	51 e4       	ldi	r21, 0x41	; 65
    2a1a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2a1e:	dc 01       	movw	r26, r24
    2a20:	cb 01       	movw	r24, r22
    2a22:	8e 01       	movw	r16, r28
    2a24:	09 59       	subi	r16, 0x99	; 153
    2a26:	1f 4f       	sbci	r17, 0xFF	; 255
    2a28:	bc 01       	movw	r22, r24
    2a2a:	cd 01       	movw	r24, r26
    2a2c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2a30:	dc 01       	movw	r26, r24
    2a32:	cb 01       	movw	r24, r22
    2a34:	f8 01       	movw	r30, r16
    2a36:	91 83       	std	Z+1, r25	; 0x01
    2a38:	80 83       	st	Z, r24
    2a3a:	1f c0       	rjmp	.+62     	; 0x2a7a <main+0x1094>
    2a3c:	fe 01       	movw	r30, r28
    2a3e:	eb 59       	subi	r30, 0x9B	; 155
    2a40:	ff 4f       	sbci	r31, 0xFF	; 255
    2a42:	80 e9       	ldi	r24, 0x90	; 144
    2a44:	91 e0       	ldi	r25, 0x01	; 1
    2a46:	91 83       	std	Z+1, r25	; 0x01
    2a48:	80 83       	st	Z, r24
    2a4a:	fe 01       	movw	r30, r28
    2a4c:	eb 59       	subi	r30, 0x9B	; 155
    2a4e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a50:	80 81       	ld	r24, Z
    2a52:	91 81       	ldd	r25, Z+1	; 0x01
    2a54:	01 97       	sbiw	r24, 0x01	; 1
    2a56:	f1 f7       	brne	.-4      	; 0x2a54 <main+0x106e>
    2a58:	fe 01       	movw	r30, r28
    2a5a:	eb 59       	subi	r30, 0x9B	; 155
    2a5c:	ff 4f       	sbci	r31, 0xFF	; 255
    2a5e:	91 83       	std	Z+1, r25	; 0x01
    2a60:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a62:	de 01       	movw	r26, r28
    2a64:	a9 59       	subi	r26, 0x99	; 153
    2a66:	bf 4f       	sbci	r27, 0xFF	; 255
    2a68:	fe 01       	movw	r30, r28
    2a6a:	e9 59       	subi	r30, 0x99	; 153
    2a6c:	ff 4f       	sbci	r31, 0xFF	; 255
    2a6e:	80 81       	ld	r24, Z
    2a70:	91 81       	ldd	r25, Z+1	; 0x01
    2a72:	01 97       	sbiw	r24, 0x01	; 1
    2a74:	11 96       	adiw	r26, 0x01	; 1
    2a76:	9c 93       	st	X, r25
    2a78:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a7a:	fe 01       	movw	r30, r28
    2a7c:	e9 59       	subi	r30, 0x99	; 153
    2a7e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a80:	80 81       	ld	r24, Z
    2a82:	91 81       	ldd	r25, Z+1	; 0x01
    2a84:	00 97       	sbiw	r24, 0x00	; 0
    2a86:	d1 f6       	brne	.-76     	; 0x2a3c <main+0x1056>
    2a88:	27 c0       	rjmp	.+78     	; 0x2ad8 <main+0x10f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a8a:	8e 01       	movw	r16, r28
    2a8c:	09 59       	subi	r16, 0x99	; 153
    2a8e:	1f 4f       	sbci	r17, 0xFF	; 255
    2a90:	fe 01       	movw	r30, r28
    2a92:	e7 59       	subi	r30, 0x97	; 151
    2a94:	ff 4f       	sbci	r31, 0xFF	; 255
    2a96:	60 81       	ld	r22, Z
    2a98:	71 81       	ldd	r23, Z+1	; 0x01
    2a9a:	82 81       	ldd	r24, Z+2	; 0x02
    2a9c:	93 81       	ldd	r25, Z+3	; 0x03
    2a9e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2aa2:	dc 01       	movw	r26, r24
    2aa4:	cb 01       	movw	r24, r22
    2aa6:	f8 01       	movw	r30, r16
    2aa8:	91 83       	std	Z+1, r25	; 0x01
    2aaa:	80 83       	st	Z, r24
    2aac:	de 01       	movw	r26, r28
    2aae:	ad 59       	subi	r26, 0x9D	; 157
    2ab0:	bf 4f       	sbci	r27, 0xFF	; 255
    2ab2:	fe 01       	movw	r30, r28
    2ab4:	e9 59       	subi	r30, 0x99	; 153
    2ab6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ab8:	80 81       	ld	r24, Z
    2aba:	91 81       	ldd	r25, Z+1	; 0x01
    2abc:	8d 93       	st	X+, r24
    2abe:	9c 93       	st	X, r25
    2ac0:	fe 01       	movw	r30, r28
    2ac2:	ed 59       	subi	r30, 0x9D	; 157
    2ac4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ac6:	80 81       	ld	r24, Z
    2ac8:	91 81       	ldd	r25, Z+1	; 0x01
    2aca:	01 97       	sbiw	r24, 0x01	; 1
    2acc:	f1 f7       	brne	.-4      	; 0x2aca <main+0x10e4>
    2ace:	fe 01       	movw	r30, r28
    2ad0:	ed 59       	subi	r30, 0x9D	; 157
    2ad2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ad4:	91 83       	std	Z+1, r25	; 0x01
    2ad6:	80 83       	st	Z, r24
			_delay_ms(50);
			DIO_u8SetValueToAllPins(2, 0, 0, 1, 1, 1, 1, 1, 0); // b
    2ad8:	82 e0       	ldi	r24, 0x02	; 2
    2ada:	60 e0       	ldi	r22, 0x00	; 0
    2adc:	40 e0       	ldi	r20, 0x00	; 0
    2ade:	21 e0       	ldi	r18, 0x01	; 1
    2ae0:	01 e0       	ldi	r16, 0x01	; 1
    2ae2:	ee 24       	eor	r14, r14
    2ae4:	e3 94       	inc	r14
    2ae6:	cc 24       	eor	r12, r12
    2ae8:	c3 94       	inc	r12
    2aea:	aa 24       	eor	r10, r10
    2aec:	a3 94       	inc	r10
    2aee:	88 24       	eor	r8, r8
    2af0:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <DIO_u8SetValueToAllPins>
    2af4:	fe 01       	movw	r30, r28
    2af6:	e1 5a       	subi	r30, 0xA1	; 161
    2af8:	ff 4f       	sbci	r31, 0xFF	; 255
    2afa:	80 e0       	ldi	r24, 0x00	; 0
    2afc:	90 e0       	ldi	r25, 0x00	; 0
    2afe:	a8 e4       	ldi	r26, 0x48	; 72
    2b00:	b2 e4       	ldi	r27, 0x42	; 66
    2b02:	80 83       	st	Z, r24
    2b04:	91 83       	std	Z+1, r25	; 0x01
    2b06:	a2 83       	std	Z+2, r26	; 0x02
    2b08:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b0a:	8e 01       	movw	r16, r28
    2b0c:	05 5a       	subi	r16, 0xA5	; 165
    2b0e:	1f 4f       	sbci	r17, 0xFF	; 255
    2b10:	fe 01       	movw	r30, r28
    2b12:	e1 5a       	subi	r30, 0xA1	; 161
    2b14:	ff 4f       	sbci	r31, 0xFF	; 255
    2b16:	60 81       	ld	r22, Z
    2b18:	71 81       	ldd	r23, Z+1	; 0x01
    2b1a:	82 81       	ldd	r24, Z+2	; 0x02
    2b1c:	93 81       	ldd	r25, Z+3	; 0x03
    2b1e:	20 e0       	ldi	r18, 0x00	; 0
    2b20:	30 e0       	ldi	r19, 0x00	; 0
    2b22:	4a e7       	ldi	r20, 0x7A	; 122
    2b24:	55 e4       	ldi	r21, 0x45	; 69
    2b26:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2b2a:	dc 01       	movw	r26, r24
    2b2c:	cb 01       	movw	r24, r22
    2b2e:	f8 01       	movw	r30, r16
    2b30:	80 83       	st	Z, r24
    2b32:	91 83       	std	Z+1, r25	; 0x01
    2b34:	a2 83       	std	Z+2, r26	; 0x02
    2b36:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2b38:	fe 01       	movw	r30, r28
    2b3a:	e5 5a       	subi	r30, 0xA5	; 165
    2b3c:	ff 4f       	sbci	r31, 0xFF	; 255
    2b3e:	60 81       	ld	r22, Z
    2b40:	71 81       	ldd	r23, Z+1	; 0x01
    2b42:	82 81       	ldd	r24, Z+2	; 0x02
    2b44:	93 81       	ldd	r25, Z+3	; 0x03
    2b46:	20 e0       	ldi	r18, 0x00	; 0
    2b48:	30 e0       	ldi	r19, 0x00	; 0
    2b4a:	40 e8       	ldi	r20, 0x80	; 128
    2b4c:	5f e3       	ldi	r21, 0x3F	; 63
    2b4e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2b52:	88 23       	and	r24, r24
    2b54:	44 f4       	brge	.+16     	; 0x2b66 <main+0x1180>
		__ticks = 1;
    2b56:	fe 01       	movw	r30, r28
    2b58:	e7 5a       	subi	r30, 0xA7	; 167
    2b5a:	ff 4f       	sbci	r31, 0xFF	; 255
    2b5c:	81 e0       	ldi	r24, 0x01	; 1
    2b5e:	90 e0       	ldi	r25, 0x00	; 0
    2b60:	91 83       	std	Z+1, r25	; 0x01
    2b62:	80 83       	st	Z, r24
    2b64:	64 c0       	rjmp	.+200    	; 0x2c2e <main+0x1248>
	else if (__tmp > 65535)
    2b66:	fe 01       	movw	r30, r28
    2b68:	e5 5a       	subi	r30, 0xA5	; 165
    2b6a:	ff 4f       	sbci	r31, 0xFF	; 255
    2b6c:	60 81       	ld	r22, Z
    2b6e:	71 81       	ldd	r23, Z+1	; 0x01
    2b70:	82 81       	ldd	r24, Z+2	; 0x02
    2b72:	93 81       	ldd	r25, Z+3	; 0x03
    2b74:	20 e0       	ldi	r18, 0x00	; 0
    2b76:	3f ef       	ldi	r19, 0xFF	; 255
    2b78:	4f e7       	ldi	r20, 0x7F	; 127
    2b7a:	57 e4       	ldi	r21, 0x47	; 71
    2b7c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2b80:	18 16       	cp	r1, r24
    2b82:	0c f0       	brlt	.+2      	; 0x2b86 <main+0x11a0>
    2b84:	43 c0       	rjmp	.+134    	; 0x2c0c <main+0x1226>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b86:	fe 01       	movw	r30, r28
    2b88:	e1 5a       	subi	r30, 0xA1	; 161
    2b8a:	ff 4f       	sbci	r31, 0xFF	; 255
    2b8c:	60 81       	ld	r22, Z
    2b8e:	71 81       	ldd	r23, Z+1	; 0x01
    2b90:	82 81       	ldd	r24, Z+2	; 0x02
    2b92:	93 81       	ldd	r25, Z+3	; 0x03
    2b94:	20 e0       	ldi	r18, 0x00	; 0
    2b96:	30 e0       	ldi	r19, 0x00	; 0
    2b98:	40 e2       	ldi	r20, 0x20	; 32
    2b9a:	51 e4       	ldi	r21, 0x41	; 65
    2b9c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2ba0:	dc 01       	movw	r26, r24
    2ba2:	cb 01       	movw	r24, r22
    2ba4:	8e 01       	movw	r16, r28
    2ba6:	07 5a       	subi	r16, 0xA7	; 167
    2ba8:	1f 4f       	sbci	r17, 0xFF	; 255
    2baa:	bc 01       	movw	r22, r24
    2bac:	cd 01       	movw	r24, r26
    2bae:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2bb2:	dc 01       	movw	r26, r24
    2bb4:	cb 01       	movw	r24, r22
    2bb6:	f8 01       	movw	r30, r16
    2bb8:	91 83       	std	Z+1, r25	; 0x01
    2bba:	80 83       	st	Z, r24
    2bbc:	1f c0       	rjmp	.+62     	; 0x2bfc <main+0x1216>
    2bbe:	fe 01       	movw	r30, r28
    2bc0:	e9 5a       	subi	r30, 0xA9	; 169
    2bc2:	ff 4f       	sbci	r31, 0xFF	; 255
    2bc4:	80 e9       	ldi	r24, 0x90	; 144
    2bc6:	91 e0       	ldi	r25, 0x01	; 1
    2bc8:	91 83       	std	Z+1, r25	; 0x01
    2bca:	80 83       	st	Z, r24
    2bcc:	fe 01       	movw	r30, r28
    2bce:	e9 5a       	subi	r30, 0xA9	; 169
    2bd0:	ff 4f       	sbci	r31, 0xFF	; 255
    2bd2:	80 81       	ld	r24, Z
    2bd4:	91 81       	ldd	r25, Z+1	; 0x01
    2bd6:	01 97       	sbiw	r24, 0x01	; 1
    2bd8:	f1 f7       	brne	.-4      	; 0x2bd6 <main+0x11f0>
    2bda:	fe 01       	movw	r30, r28
    2bdc:	e9 5a       	subi	r30, 0xA9	; 169
    2bde:	ff 4f       	sbci	r31, 0xFF	; 255
    2be0:	91 83       	std	Z+1, r25	; 0x01
    2be2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2be4:	de 01       	movw	r26, r28
    2be6:	a7 5a       	subi	r26, 0xA7	; 167
    2be8:	bf 4f       	sbci	r27, 0xFF	; 255
    2bea:	fe 01       	movw	r30, r28
    2bec:	e7 5a       	subi	r30, 0xA7	; 167
    2bee:	ff 4f       	sbci	r31, 0xFF	; 255
    2bf0:	80 81       	ld	r24, Z
    2bf2:	91 81       	ldd	r25, Z+1	; 0x01
    2bf4:	01 97       	sbiw	r24, 0x01	; 1
    2bf6:	11 96       	adiw	r26, 0x01	; 1
    2bf8:	9c 93       	st	X, r25
    2bfa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2bfc:	fe 01       	movw	r30, r28
    2bfe:	e7 5a       	subi	r30, 0xA7	; 167
    2c00:	ff 4f       	sbci	r31, 0xFF	; 255
    2c02:	80 81       	ld	r24, Z
    2c04:	91 81       	ldd	r25, Z+1	; 0x01
    2c06:	00 97       	sbiw	r24, 0x00	; 0
    2c08:	d1 f6       	brne	.-76     	; 0x2bbe <main+0x11d8>
    2c0a:	27 c0       	rjmp	.+78     	; 0x2c5a <main+0x1274>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c0c:	8e 01       	movw	r16, r28
    2c0e:	07 5a       	subi	r16, 0xA7	; 167
    2c10:	1f 4f       	sbci	r17, 0xFF	; 255
    2c12:	fe 01       	movw	r30, r28
    2c14:	e5 5a       	subi	r30, 0xA5	; 165
    2c16:	ff 4f       	sbci	r31, 0xFF	; 255
    2c18:	60 81       	ld	r22, Z
    2c1a:	71 81       	ldd	r23, Z+1	; 0x01
    2c1c:	82 81       	ldd	r24, Z+2	; 0x02
    2c1e:	93 81       	ldd	r25, Z+3	; 0x03
    2c20:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2c24:	dc 01       	movw	r26, r24
    2c26:	cb 01       	movw	r24, r22
    2c28:	f8 01       	movw	r30, r16
    2c2a:	91 83       	std	Z+1, r25	; 0x01
    2c2c:	80 83       	st	Z, r24
    2c2e:	de 01       	movw	r26, r28
    2c30:	ab 5a       	subi	r26, 0xAB	; 171
    2c32:	bf 4f       	sbci	r27, 0xFF	; 255
    2c34:	fe 01       	movw	r30, r28
    2c36:	e7 5a       	subi	r30, 0xA7	; 167
    2c38:	ff 4f       	sbci	r31, 0xFF	; 255
    2c3a:	80 81       	ld	r24, Z
    2c3c:	91 81       	ldd	r25, Z+1	; 0x01
    2c3e:	8d 93       	st	X+, r24
    2c40:	9c 93       	st	X, r25
    2c42:	fe 01       	movw	r30, r28
    2c44:	eb 5a       	subi	r30, 0xAB	; 171
    2c46:	ff 4f       	sbci	r31, 0xFF	; 255
    2c48:	80 81       	ld	r24, Z
    2c4a:	91 81       	ldd	r25, Z+1	; 0x01
    2c4c:	01 97       	sbiw	r24, 0x01	; 1
    2c4e:	f1 f7       	brne	.-4      	; 0x2c4c <main+0x1266>
    2c50:	fe 01       	movw	r30, r28
    2c52:	eb 5a       	subi	r30, 0xAB	; 171
    2c54:	ff 4f       	sbci	r31, 0xFF	; 255
    2c56:	91 83       	std	Z+1, r25	; 0x01
    2c58:	80 83       	st	Z, r24
			_delay_ms(50);
			DIO_u8SetValueToAllPins(2, 1, 0, 0, 1, 1, 1, 0, 0); // C
    2c5a:	82 e0       	ldi	r24, 0x02	; 2
    2c5c:	61 e0       	ldi	r22, 0x01	; 1
    2c5e:	40 e0       	ldi	r20, 0x00	; 0
    2c60:	20 e0       	ldi	r18, 0x00	; 0
    2c62:	01 e0       	ldi	r16, 0x01	; 1
    2c64:	ee 24       	eor	r14, r14
    2c66:	e3 94       	inc	r14
    2c68:	cc 24       	eor	r12, r12
    2c6a:	c3 94       	inc	r12
    2c6c:	aa 24       	eor	r10, r10
    2c6e:	88 24       	eor	r8, r8
    2c70:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <DIO_u8SetValueToAllPins>
    2c74:	fe 01       	movw	r30, r28
    2c76:	ef 5a       	subi	r30, 0xAF	; 175
    2c78:	ff 4f       	sbci	r31, 0xFF	; 255
    2c7a:	80 e0       	ldi	r24, 0x00	; 0
    2c7c:	90 e0       	ldi	r25, 0x00	; 0
    2c7e:	a8 e4       	ldi	r26, 0x48	; 72
    2c80:	b2 e4       	ldi	r27, 0x42	; 66
    2c82:	80 83       	st	Z, r24
    2c84:	91 83       	std	Z+1, r25	; 0x01
    2c86:	a2 83       	std	Z+2, r26	; 0x02
    2c88:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c8a:	8e 01       	movw	r16, r28
    2c8c:	03 5b       	subi	r16, 0xB3	; 179
    2c8e:	1f 4f       	sbci	r17, 0xFF	; 255
    2c90:	fe 01       	movw	r30, r28
    2c92:	ef 5a       	subi	r30, 0xAF	; 175
    2c94:	ff 4f       	sbci	r31, 0xFF	; 255
    2c96:	60 81       	ld	r22, Z
    2c98:	71 81       	ldd	r23, Z+1	; 0x01
    2c9a:	82 81       	ldd	r24, Z+2	; 0x02
    2c9c:	93 81       	ldd	r25, Z+3	; 0x03
    2c9e:	20 e0       	ldi	r18, 0x00	; 0
    2ca0:	30 e0       	ldi	r19, 0x00	; 0
    2ca2:	4a e7       	ldi	r20, 0x7A	; 122
    2ca4:	55 e4       	ldi	r21, 0x45	; 69
    2ca6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2caa:	dc 01       	movw	r26, r24
    2cac:	cb 01       	movw	r24, r22
    2cae:	f8 01       	movw	r30, r16
    2cb0:	80 83       	st	Z, r24
    2cb2:	91 83       	std	Z+1, r25	; 0x01
    2cb4:	a2 83       	std	Z+2, r26	; 0x02
    2cb6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2cb8:	fe 01       	movw	r30, r28
    2cba:	e3 5b       	subi	r30, 0xB3	; 179
    2cbc:	ff 4f       	sbci	r31, 0xFF	; 255
    2cbe:	60 81       	ld	r22, Z
    2cc0:	71 81       	ldd	r23, Z+1	; 0x01
    2cc2:	82 81       	ldd	r24, Z+2	; 0x02
    2cc4:	93 81       	ldd	r25, Z+3	; 0x03
    2cc6:	20 e0       	ldi	r18, 0x00	; 0
    2cc8:	30 e0       	ldi	r19, 0x00	; 0
    2cca:	40 e8       	ldi	r20, 0x80	; 128
    2ccc:	5f e3       	ldi	r21, 0x3F	; 63
    2cce:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2cd2:	88 23       	and	r24, r24
    2cd4:	44 f4       	brge	.+16     	; 0x2ce6 <main+0x1300>
		__ticks = 1;
    2cd6:	fe 01       	movw	r30, r28
    2cd8:	e5 5b       	subi	r30, 0xB5	; 181
    2cda:	ff 4f       	sbci	r31, 0xFF	; 255
    2cdc:	81 e0       	ldi	r24, 0x01	; 1
    2cde:	90 e0       	ldi	r25, 0x00	; 0
    2ce0:	91 83       	std	Z+1, r25	; 0x01
    2ce2:	80 83       	st	Z, r24
    2ce4:	64 c0       	rjmp	.+200    	; 0x2dae <main+0x13c8>
	else if (__tmp > 65535)
    2ce6:	fe 01       	movw	r30, r28
    2ce8:	e3 5b       	subi	r30, 0xB3	; 179
    2cea:	ff 4f       	sbci	r31, 0xFF	; 255
    2cec:	60 81       	ld	r22, Z
    2cee:	71 81       	ldd	r23, Z+1	; 0x01
    2cf0:	82 81       	ldd	r24, Z+2	; 0x02
    2cf2:	93 81       	ldd	r25, Z+3	; 0x03
    2cf4:	20 e0       	ldi	r18, 0x00	; 0
    2cf6:	3f ef       	ldi	r19, 0xFF	; 255
    2cf8:	4f e7       	ldi	r20, 0x7F	; 127
    2cfa:	57 e4       	ldi	r21, 0x47	; 71
    2cfc:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2d00:	18 16       	cp	r1, r24
    2d02:	0c f0       	brlt	.+2      	; 0x2d06 <main+0x1320>
    2d04:	43 c0       	rjmp	.+134    	; 0x2d8c <main+0x13a6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d06:	fe 01       	movw	r30, r28
    2d08:	ef 5a       	subi	r30, 0xAF	; 175
    2d0a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d0c:	60 81       	ld	r22, Z
    2d0e:	71 81       	ldd	r23, Z+1	; 0x01
    2d10:	82 81       	ldd	r24, Z+2	; 0x02
    2d12:	93 81       	ldd	r25, Z+3	; 0x03
    2d14:	20 e0       	ldi	r18, 0x00	; 0
    2d16:	30 e0       	ldi	r19, 0x00	; 0
    2d18:	40 e2       	ldi	r20, 0x20	; 32
    2d1a:	51 e4       	ldi	r21, 0x41	; 65
    2d1c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2d20:	dc 01       	movw	r26, r24
    2d22:	cb 01       	movw	r24, r22
    2d24:	8e 01       	movw	r16, r28
    2d26:	05 5b       	subi	r16, 0xB5	; 181
    2d28:	1f 4f       	sbci	r17, 0xFF	; 255
    2d2a:	bc 01       	movw	r22, r24
    2d2c:	cd 01       	movw	r24, r26
    2d2e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2d32:	dc 01       	movw	r26, r24
    2d34:	cb 01       	movw	r24, r22
    2d36:	f8 01       	movw	r30, r16
    2d38:	91 83       	std	Z+1, r25	; 0x01
    2d3a:	80 83       	st	Z, r24
    2d3c:	1f c0       	rjmp	.+62     	; 0x2d7c <main+0x1396>
    2d3e:	fe 01       	movw	r30, r28
    2d40:	e7 5b       	subi	r30, 0xB7	; 183
    2d42:	ff 4f       	sbci	r31, 0xFF	; 255
    2d44:	80 e9       	ldi	r24, 0x90	; 144
    2d46:	91 e0       	ldi	r25, 0x01	; 1
    2d48:	91 83       	std	Z+1, r25	; 0x01
    2d4a:	80 83       	st	Z, r24
    2d4c:	fe 01       	movw	r30, r28
    2d4e:	e7 5b       	subi	r30, 0xB7	; 183
    2d50:	ff 4f       	sbci	r31, 0xFF	; 255
    2d52:	80 81       	ld	r24, Z
    2d54:	91 81       	ldd	r25, Z+1	; 0x01
    2d56:	01 97       	sbiw	r24, 0x01	; 1
    2d58:	f1 f7       	brne	.-4      	; 0x2d56 <main+0x1370>
    2d5a:	fe 01       	movw	r30, r28
    2d5c:	e7 5b       	subi	r30, 0xB7	; 183
    2d5e:	ff 4f       	sbci	r31, 0xFF	; 255
    2d60:	91 83       	std	Z+1, r25	; 0x01
    2d62:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d64:	de 01       	movw	r26, r28
    2d66:	a5 5b       	subi	r26, 0xB5	; 181
    2d68:	bf 4f       	sbci	r27, 0xFF	; 255
    2d6a:	fe 01       	movw	r30, r28
    2d6c:	e5 5b       	subi	r30, 0xB5	; 181
    2d6e:	ff 4f       	sbci	r31, 0xFF	; 255
    2d70:	80 81       	ld	r24, Z
    2d72:	91 81       	ldd	r25, Z+1	; 0x01
    2d74:	01 97       	sbiw	r24, 0x01	; 1
    2d76:	11 96       	adiw	r26, 0x01	; 1
    2d78:	9c 93       	st	X, r25
    2d7a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d7c:	fe 01       	movw	r30, r28
    2d7e:	e5 5b       	subi	r30, 0xB5	; 181
    2d80:	ff 4f       	sbci	r31, 0xFF	; 255
    2d82:	80 81       	ld	r24, Z
    2d84:	91 81       	ldd	r25, Z+1	; 0x01
    2d86:	00 97       	sbiw	r24, 0x00	; 0
    2d88:	d1 f6       	brne	.-76     	; 0x2d3e <main+0x1358>
    2d8a:	27 c0       	rjmp	.+78     	; 0x2dda <main+0x13f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d8c:	8e 01       	movw	r16, r28
    2d8e:	05 5b       	subi	r16, 0xB5	; 181
    2d90:	1f 4f       	sbci	r17, 0xFF	; 255
    2d92:	fe 01       	movw	r30, r28
    2d94:	e3 5b       	subi	r30, 0xB3	; 179
    2d96:	ff 4f       	sbci	r31, 0xFF	; 255
    2d98:	60 81       	ld	r22, Z
    2d9a:	71 81       	ldd	r23, Z+1	; 0x01
    2d9c:	82 81       	ldd	r24, Z+2	; 0x02
    2d9e:	93 81       	ldd	r25, Z+3	; 0x03
    2da0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2da4:	dc 01       	movw	r26, r24
    2da6:	cb 01       	movw	r24, r22
    2da8:	f8 01       	movw	r30, r16
    2daa:	91 83       	std	Z+1, r25	; 0x01
    2dac:	80 83       	st	Z, r24
    2dae:	de 01       	movw	r26, r28
    2db0:	a9 5b       	subi	r26, 0xB9	; 185
    2db2:	bf 4f       	sbci	r27, 0xFF	; 255
    2db4:	fe 01       	movw	r30, r28
    2db6:	e5 5b       	subi	r30, 0xB5	; 181
    2db8:	ff 4f       	sbci	r31, 0xFF	; 255
    2dba:	80 81       	ld	r24, Z
    2dbc:	91 81       	ldd	r25, Z+1	; 0x01
    2dbe:	8d 93       	st	X+, r24
    2dc0:	9c 93       	st	X, r25
    2dc2:	fe 01       	movw	r30, r28
    2dc4:	e9 5b       	subi	r30, 0xB9	; 185
    2dc6:	ff 4f       	sbci	r31, 0xFF	; 255
    2dc8:	80 81       	ld	r24, Z
    2dca:	91 81       	ldd	r25, Z+1	; 0x01
    2dcc:	01 97       	sbiw	r24, 0x01	; 1
    2dce:	f1 f7       	brne	.-4      	; 0x2dcc <main+0x13e6>
    2dd0:	fe 01       	movw	r30, r28
    2dd2:	e9 5b       	subi	r30, 0xB9	; 185
    2dd4:	ff 4f       	sbci	r31, 0xFF	; 255
    2dd6:	91 83       	std	Z+1, r25	; 0x01
    2dd8:	80 83       	st	Z, r24
			_delay_ms(50);
			DIO_u8SetValueToAllPins(2, 0, 1, 1, 1, 1, 0, 1, 0); // d
    2dda:	82 e0       	ldi	r24, 0x02	; 2
    2ddc:	60 e0       	ldi	r22, 0x00	; 0
    2dde:	41 e0       	ldi	r20, 0x01	; 1
    2de0:	21 e0       	ldi	r18, 0x01	; 1
    2de2:	01 e0       	ldi	r16, 0x01	; 1
    2de4:	ee 24       	eor	r14, r14
    2de6:	e3 94       	inc	r14
    2de8:	cc 24       	eor	r12, r12
    2dea:	aa 24       	eor	r10, r10
    2dec:	a3 94       	inc	r10
    2dee:	88 24       	eor	r8, r8
    2df0:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <DIO_u8SetValueToAllPins>
    2df4:	fe 01       	movw	r30, r28
    2df6:	ed 5b       	subi	r30, 0xBD	; 189
    2df8:	ff 4f       	sbci	r31, 0xFF	; 255
    2dfa:	80 e0       	ldi	r24, 0x00	; 0
    2dfc:	90 e0       	ldi	r25, 0x00	; 0
    2dfe:	a8 e4       	ldi	r26, 0x48	; 72
    2e00:	b2 e4       	ldi	r27, 0x42	; 66
    2e02:	80 83       	st	Z, r24
    2e04:	91 83       	std	Z+1, r25	; 0x01
    2e06:	a2 83       	std	Z+2, r26	; 0x02
    2e08:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e0a:	8e 01       	movw	r16, r28
    2e0c:	01 5c       	subi	r16, 0xC1	; 193
    2e0e:	1f 4f       	sbci	r17, 0xFF	; 255
    2e10:	fe 01       	movw	r30, r28
    2e12:	ed 5b       	subi	r30, 0xBD	; 189
    2e14:	ff 4f       	sbci	r31, 0xFF	; 255
    2e16:	60 81       	ld	r22, Z
    2e18:	71 81       	ldd	r23, Z+1	; 0x01
    2e1a:	82 81       	ldd	r24, Z+2	; 0x02
    2e1c:	93 81       	ldd	r25, Z+3	; 0x03
    2e1e:	20 e0       	ldi	r18, 0x00	; 0
    2e20:	30 e0       	ldi	r19, 0x00	; 0
    2e22:	4a e7       	ldi	r20, 0x7A	; 122
    2e24:	55 e4       	ldi	r21, 0x45	; 69
    2e26:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2e2a:	dc 01       	movw	r26, r24
    2e2c:	cb 01       	movw	r24, r22
    2e2e:	f8 01       	movw	r30, r16
    2e30:	80 83       	st	Z, r24
    2e32:	91 83       	std	Z+1, r25	; 0x01
    2e34:	a2 83       	std	Z+2, r26	; 0x02
    2e36:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2e38:	fe 01       	movw	r30, r28
    2e3a:	ff 96       	adiw	r30, 0x3f	; 63
    2e3c:	60 81       	ld	r22, Z
    2e3e:	71 81       	ldd	r23, Z+1	; 0x01
    2e40:	82 81       	ldd	r24, Z+2	; 0x02
    2e42:	93 81       	ldd	r25, Z+3	; 0x03
    2e44:	20 e0       	ldi	r18, 0x00	; 0
    2e46:	30 e0       	ldi	r19, 0x00	; 0
    2e48:	40 e8       	ldi	r20, 0x80	; 128
    2e4a:	5f e3       	ldi	r21, 0x3F	; 63
    2e4c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2e50:	88 23       	and	r24, r24
    2e52:	2c f4       	brge	.+10     	; 0x2e5e <main+0x1478>
		__ticks = 1;
    2e54:	81 e0       	ldi	r24, 0x01	; 1
    2e56:	90 e0       	ldi	r25, 0x00	; 0
    2e58:	9e af       	std	Y+62, r25	; 0x3e
    2e5a:	8d af       	std	Y+61, r24	; 0x3d
    2e5c:	46 c0       	rjmp	.+140    	; 0x2eea <main+0x1504>
	else if (__tmp > 65535)
    2e5e:	fe 01       	movw	r30, r28
    2e60:	ff 96       	adiw	r30, 0x3f	; 63
    2e62:	60 81       	ld	r22, Z
    2e64:	71 81       	ldd	r23, Z+1	; 0x01
    2e66:	82 81       	ldd	r24, Z+2	; 0x02
    2e68:	93 81       	ldd	r25, Z+3	; 0x03
    2e6a:	20 e0       	ldi	r18, 0x00	; 0
    2e6c:	3f ef       	ldi	r19, 0xFF	; 255
    2e6e:	4f e7       	ldi	r20, 0x7F	; 127
    2e70:	57 e4       	ldi	r21, 0x47	; 71
    2e72:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2e76:	18 16       	cp	r1, r24
    2e78:	64 f5       	brge	.+88     	; 0x2ed2 <main+0x14ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e7a:	fe 01       	movw	r30, r28
    2e7c:	ed 5b       	subi	r30, 0xBD	; 189
    2e7e:	ff 4f       	sbci	r31, 0xFF	; 255
    2e80:	60 81       	ld	r22, Z
    2e82:	71 81       	ldd	r23, Z+1	; 0x01
    2e84:	82 81       	ldd	r24, Z+2	; 0x02
    2e86:	93 81       	ldd	r25, Z+3	; 0x03
    2e88:	20 e0       	ldi	r18, 0x00	; 0
    2e8a:	30 e0       	ldi	r19, 0x00	; 0
    2e8c:	40 e2       	ldi	r20, 0x20	; 32
    2e8e:	51 e4       	ldi	r21, 0x41	; 65
    2e90:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2e94:	dc 01       	movw	r26, r24
    2e96:	cb 01       	movw	r24, r22
    2e98:	bc 01       	movw	r22, r24
    2e9a:	cd 01       	movw	r24, r26
    2e9c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2ea0:	dc 01       	movw	r26, r24
    2ea2:	cb 01       	movw	r24, r22
    2ea4:	9e af       	std	Y+62, r25	; 0x3e
    2ea6:	8d af       	std	Y+61, r24	; 0x3d
    2ea8:	0f c0       	rjmp	.+30     	; 0x2ec8 <main+0x14e2>
    2eaa:	80 e9       	ldi	r24, 0x90	; 144
    2eac:	91 e0       	ldi	r25, 0x01	; 1
    2eae:	9c af       	std	Y+60, r25	; 0x3c
    2eb0:	8b af       	std	Y+59, r24	; 0x3b
    2eb2:	8b ad       	ldd	r24, Y+59	; 0x3b
    2eb4:	9c ad       	ldd	r25, Y+60	; 0x3c
    2eb6:	01 97       	sbiw	r24, 0x01	; 1
    2eb8:	f1 f7       	brne	.-4      	; 0x2eb6 <main+0x14d0>
    2eba:	9c af       	std	Y+60, r25	; 0x3c
    2ebc:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ebe:	8d ad       	ldd	r24, Y+61	; 0x3d
    2ec0:	9e ad       	ldd	r25, Y+62	; 0x3e
    2ec2:	01 97       	sbiw	r24, 0x01	; 1
    2ec4:	9e af       	std	Y+62, r25	; 0x3e
    2ec6:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ec8:	8d ad       	ldd	r24, Y+61	; 0x3d
    2eca:	9e ad       	ldd	r25, Y+62	; 0x3e
    2ecc:	00 97       	sbiw	r24, 0x00	; 0
    2ece:	69 f7       	brne	.-38     	; 0x2eaa <main+0x14c4>
    2ed0:	16 c0       	rjmp	.+44     	; 0x2efe <main+0x1518>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ed2:	fe 01       	movw	r30, r28
    2ed4:	ff 96       	adiw	r30, 0x3f	; 63
    2ed6:	60 81       	ld	r22, Z
    2ed8:	71 81       	ldd	r23, Z+1	; 0x01
    2eda:	82 81       	ldd	r24, Z+2	; 0x02
    2edc:	93 81       	ldd	r25, Z+3	; 0x03
    2ede:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2ee2:	dc 01       	movw	r26, r24
    2ee4:	cb 01       	movw	r24, r22
    2ee6:	9e af       	std	Y+62, r25	; 0x3e
    2ee8:	8d af       	std	Y+61, r24	; 0x3d
    2eea:	8d ad       	ldd	r24, Y+61	; 0x3d
    2eec:	9e ad       	ldd	r25, Y+62	; 0x3e
    2eee:	9a af       	std	Y+58, r25	; 0x3a
    2ef0:	89 af       	std	Y+57, r24	; 0x39
    2ef2:	89 ad       	ldd	r24, Y+57	; 0x39
    2ef4:	9a ad       	ldd	r25, Y+58	; 0x3a
    2ef6:	01 97       	sbiw	r24, 0x01	; 1
    2ef8:	f1 f7       	brne	.-4      	; 0x2ef6 <main+0x1510>
    2efa:	9a af       	std	Y+58, r25	; 0x3a
    2efc:	89 af       	std	Y+57, r24	; 0x39
			_delay_ms(50);
			DIO_u8SetValueToAllPins(2, 1, 0, 0, 1, 1, 1, 1, 0); // E
    2efe:	82 e0       	ldi	r24, 0x02	; 2
    2f00:	61 e0       	ldi	r22, 0x01	; 1
    2f02:	40 e0       	ldi	r20, 0x00	; 0
    2f04:	20 e0       	ldi	r18, 0x00	; 0
    2f06:	01 e0       	ldi	r16, 0x01	; 1
    2f08:	ee 24       	eor	r14, r14
    2f0a:	e3 94       	inc	r14
    2f0c:	cc 24       	eor	r12, r12
    2f0e:	c3 94       	inc	r12
    2f10:	aa 24       	eor	r10, r10
    2f12:	a3 94       	inc	r10
    2f14:	88 24       	eor	r8, r8
    2f16:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <DIO_u8SetValueToAllPins>
    2f1a:	80 e0       	ldi	r24, 0x00	; 0
    2f1c:	90 e0       	ldi	r25, 0x00	; 0
    2f1e:	a8 e4       	ldi	r26, 0x48	; 72
    2f20:	b2 e4       	ldi	r27, 0x42	; 66
    2f22:	8d ab       	std	Y+53, r24	; 0x35
    2f24:	9e ab       	std	Y+54, r25	; 0x36
    2f26:	af ab       	std	Y+55, r26	; 0x37
    2f28:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f2a:	6d a9       	ldd	r22, Y+53	; 0x35
    2f2c:	7e a9       	ldd	r23, Y+54	; 0x36
    2f2e:	8f a9       	ldd	r24, Y+55	; 0x37
    2f30:	98 ad       	ldd	r25, Y+56	; 0x38
    2f32:	20 e0       	ldi	r18, 0x00	; 0
    2f34:	30 e0       	ldi	r19, 0x00	; 0
    2f36:	4a e7       	ldi	r20, 0x7A	; 122
    2f38:	55 e4       	ldi	r21, 0x45	; 69
    2f3a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2f3e:	dc 01       	movw	r26, r24
    2f40:	cb 01       	movw	r24, r22
    2f42:	89 ab       	std	Y+49, r24	; 0x31
    2f44:	9a ab       	std	Y+50, r25	; 0x32
    2f46:	ab ab       	std	Y+51, r26	; 0x33
    2f48:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2f4a:	69 a9       	ldd	r22, Y+49	; 0x31
    2f4c:	7a a9       	ldd	r23, Y+50	; 0x32
    2f4e:	8b a9       	ldd	r24, Y+51	; 0x33
    2f50:	9c a9       	ldd	r25, Y+52	; 0x34
    2f52:	20 e0       	ldi	r18, 0x00	; 0
    2f54:	30 e0       	ldi	r19, 0x00	; 0
    2f56:	40 e8       	ldi	r20, 0x80	; 128
    2f58:	5f e3       	ldi	r21, 0x3F	; 63
    2f5a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2f5e:	88 23       	and	r24, r24
    2f60:	2c f4       	brge	.+10     	; 0x2f6c <main+0x1586>
		__ticks = 1;
    2f62:	81 e0       	ldi	r24, 0x01	; 1
    2f64:	90 e0       	ldi	r25, 0x00	; 0
    2f66:	98 ab       	std	Y+48, r25	; 0x30
    2f68:	8f a7       	std	Y+47, r24	; 0x2f
    2f6a:	3f c0       	rjmp	.+126    	; 0x2fea <main+0x1604>
	else if (__tmp > 65535)
    2f6c:	69 a9       	ldd	r22, Y+49	; 0x31
    2f6e:	7a a9       	ldd	r23, Y+50	; 0x32
    2f70:	8b a9       	ldd	r24, Y+51	; 0x33
    2f72:	9c a9       	ldd	r25, Y+52	; 0x34
    2f74:	20 e0       	ldi	r18, 0x00	; 0
    2f76:	3f ef       	ldi	r19, 0xFF	; 255
    2f78:	4f e7       	ldi	r20, 0x7F	; 127
    2f7a:	57 e4       	ldi	r21, 0x47	; 71
    2f7c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2f80:	18 16       	cp	r1, r24
    2f82:	4c f5       	brge	.+82     	; 0x2fd6 <main+0x15f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f84:	6d a9       	ldd	r22, Y+53	; 0x35
    2f86:	7e a9       	ldd	r23, Y+54	; 0x36
    2f88:	8f a9       	ldd	r24, Y+55	; 0x37
    2f8a:	98 ad       	ldd	r25, Y+56	; 0x38
    2f8c:	20 e0       	ldi	r18, 0x00	; 0
    2f8e:	30 e0       	ldi	r19, 0x00	; 0
    2f90:	40 e2       	ldi	r20, 0x20	; 32
    2f92:	51 e4       	ldi	r21, 0x41	; 65
    2f94:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2f98:	dc 01       	movw	r26, r24
    2f9a:	cb 01       	movw	r24, r22
    2f9c:	bc 01       	movw	r22, r24
    2f9e:	cd 01       	movw	r24, r26
    2fa0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2fa4:	dc 01       	movw	r26, r24
    2fa6:	cb 01       	movw	r24, r22
    2fa8:	98 ab       	std	Y+48, r25	; 0x30
    2faa:	8f a7       	std	Y+47, r24	; 0x2f
    2fac:	0f c0       	rjmp	.+30     	; 0x2fcc <main+0x15e6>
    2fae:	80 e9       	ldi	r24, 0x90	; 144
    2fb0:	91 e0       	ldi	r25, 0x01	; 1
    2fb2:	9e a7       	std	Y+46, r25	; 0x2e
    2fb4:	8d a7       	std	Y+45, r24	; 0x2d
    2fb6:	8d a5       	ldd	r24, Y+45	; 0x2d
    2fb8:	9e a5       	ldd	r25, Y+46	; 0x2e
    2fba:	01 97       	sbiw	r24, 0x01	; 1
    2fbc:	f1 f7       	brne	.-4      	; 0x2fba <main+0x15d4>
    2fbe:	9e a7       	std	Y+46, r25	; 0x2e
    2fc0:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2fc2:	8f a5       	ldd	r24, Y+47	; 0x2f
    2fc4:	98 a9       	ldd	r25, Y+48	; 0x30
    2fc6:	01 97       	sbiw	r24, 0x01	; 1
    2fc8:	98 ab       	std	Y+48, r25	; 0x30
    2fca:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2fcc:	8f a5       	ldd	r24, Y+47	; 0x2f
    2fce:	98 a9       	ldd	r25, Y+48	; 0x30
    2fd0:	00 97       	sbiw	r24, 0x00	; 0
    2fd2:	69 f7       	brne	.-38     	; 0x2fae <main+0x15c8>
    2fd4:	14 c0       	rjmp	.+40     	; 0x2ffe <main+0x1618>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2fd6:	69 a9       	ldd	r22, Y+49	; 0x31
    2fd8:	7a a9       	ldd	r23, Y+50	; 0x32
    2fda:	8b a9       	ldd	r24, Y+51	; 0x33
    2fdc:	9c a9       	ldd	r25, Y+52	; 0x34
    2fde:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2fe2:	dc 01       	movw	r26, r24
    2fe4:	cb 01       	movw	r24, r22
    2fe6:	98 ab       	std	Y+48, r25	; 0x30
    2fe8:	8f a7       	std	Y+47, r24	; 0x2f
    2fea:	8f a5       	ldd	r24, Y+47	; 0x2f
    2fec:	98 a9       	ldd	r25, Y+48	; 0x30
    2fee:	9c a7       	std	Y+44, r25	; 0x2c
    2ff0:	8b a7       	std	Y+43, r24	; 0x2b
    2ff2:	8b a5       	ldd	r24, Y+43	; 0x2b
    2ff4:	9c a5       	ldd	r25, Y+44	; 0x2c
    2ff6:	01 97       	sbiw	r24, 0x01	; 1
    2ff8:	f1 f7       	brne	.-4      	; 0x2ff6 <main+0x1610>
    2ffa:	9c a7       	std	Y+44, r25	; 0x2c
    2ffc:	8b a7       	std	Y+43, r24	; 0x2b
			_delay_ms(50);
			DIO_u8SetValueToAllPins(2, 1, 0, 0, 0, 1, 1, 1, 0); // F
    2ffe:	82 e0       	ldi	r24, 0x02	; 2
    3000:	61 e0       	ldi	r22, 0x01	; 1
    3002:	40 e0       	ldi	r20, 0x00	; 0
    3004:	20 e0       	ldi	r18, 0x00	; 0
    3006:	00 e0       	ldi	r16, 0x00	; 0
    3008:	ee 24       	eor	r14, r14
    300a:	e3 94       	inc	r14
    300c:	cc 24       	eor	r12, r12
    300e:	c3 94       	inc	r12
    3010:	aa 24       	eor	r10, r10
    3012:	a3 94       	inc	r10
    3014:	88 24       	eor	r8, r8
    3016:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <DIO_u8SetValueToAllPins>
    301a:	80 e0       	ldi	r24, 0x00	; 0
    301c:	90 e0       	ldi	r25, 0x00	; 0
    301e:	a8 e4       	ldi	r26, 0x48	; 72
    3020:	b2 e4       	ldi	r27, 0x42	; 66
    3022:	8f a3       	std	Y+39, r24	; 0x27
    3024:	98 a7       	std	Y+40, r25	; 0x28
    3026:	a9 a7       	std	Y+41, r26	; 0x29
    3028:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    302a:	6f a1       	ldd	r22, Y+39	; 0x27
    302c:	78 a5       	ldd	r23, Y+40	; 0x28
    302e:	89 a5       	ldd	r24, Y+41	; 0x29
    3030:	9a a5       	ldd	r25, Y+42	; 0x2a
    3032:	20 e0       	ldi	r18, 0x00	; 0
    3034:	30 e0       	ldi	r19, 0x00	; 0
    3036:	4a e7       	ldi	r20, 0x7A	; 122
    3038:	55 e4       	ldi	r21, 0x45	; 69
    303a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    303e:	dc 01       	movw	r26, r24
    3040:	cb 01       	movw	r24, r22
    3042:	8b a3       	std	Y+35, r24	; 0x23
    3044:	9c a3       	std	Y+36, r25	; 0x24
    3046:	ad a3       	std	Y+37, r26	; 0x25
    3048:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    304a:	6b a1       	ldd	r22, Y+35	; 0x23
    304c:	7c a1       	ldd	r23, Y+36	; 0x24
    304e:	8d a1       	ldd	r24, Y+37	; 0x25
    3050:	9e a1       	ldd	r25, Y+38	; 0x26
    3052:	20 e0       	ldi	r18, 0x00	; 0
    3054:	30 e0       	ldi	r19, 0x00	; 0
    3056:	40 e8       	ldi	r20, 0x80	; 128
    3058:	5f e3       	ldi	r21, 0x3F	; 63
    305a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    305e:	88 23       	and	r24, r24
    3060:	2c f4       	brge	.+10     	; 0x306c <main+0x1686>
		__ticks = 1;
    3062:	81 e0       	ldi	r24, 0x01	; 1
    3064:	90 e0       	ldi	r25, 0x00	; 0
    3066:	9a a3       	std	Y+34, r25	; 0x22
    3068:	89 a3       	std	Y+33, r24	; 0x21
    306a:	3f c0       	rjmp	.+126    	; 0x30ea <main+0x1704>
	else if (__tmp > 65535)
    306c:	6b a1       	ldd	r22, Y+35	; 0x23
    306e:	7c a1       	ldd	r23, Y+36	; 0x24
    3070:	8d a1       	ldd	r24, Y+37	; 0x25
    3072:	9e a1       	ldd	r25, Y+38	; 0x26
    3074:	20 e0       	ldi	r18, 0x00	; 0
    3076:	3f ef       	ldi	r19, 0xFF	; 255
    3078:	4f e7       	ldi	r20, 0x7F	; 127
    307a:	57 e4       	ldi	r21, 0x47	; 71
    307c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3080:	18 16       	cp	r1, r24
    3082:	4c f5       	brge	.+82     	; 0x30d6 <main+0x16f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3084:	6f a1       	ldd	r22, Y+39	; 0x27
    3086:	78 a5       	ldd	r23, Y+40	; 0x28
    3088:	89 a5       	ldd	r24, Y+41	; 0x29
    308a:	9a a5       	ldd	r25, Y+42	; 0x2a
    308c:	20 e0       	ldi	r18, 0x00	; 0
    308e:	30 e0       	ldi	r19, 0x00	; 0
    3090:	40 e2       	ldi	r20, 0x20	; 32
    3092:	51 e4       	ldi	r21, 0x41	; 65
    3094:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3098:	dc 01       	movw	r26, r24
    309a:	cb 01       	movw	r24, r22
    309c:	bc 01       	movw	r22, r24
    309e:	cd 01       	movw	r24, r26
    30a0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    30a4:	dc 01       	movw	r26, r24
    30a6:	cb 01       	movw	r24, r22
    30a8:	9a a3       	std	Y+34, r25	; 0x22
    30aa:	89 a3       	std	Y+33, r24	; 0x21
    30ac:	0f c0       	rjmp	.+30     	; 0x30cc <main+0x16e6>
    30ae:	80 e9       	ldi	r24, 0x90	; 144
    30b0:	91 e0       	ldi	r25, 0x01	; 1
    30b2:	98 a3       	std	Y+32, r25	; 0x20
    30b4:	8f 8f       	std	Y+31, r24	; 0x1f
    30b6:	8f 8d       	ldd	r24, Y+31	; 0x1f
    30b8:	98 a1       	ldd	r25, Y+32	; 0x20
    30ba:	01 97       	sbiw	r24, 0x01	; 1
    30bc:	f1 f7       	brne	.-4      	; 0x30ba <main+0x16d4>
    30be:	98 a3       	std	Y+32, r25	; 0x20
    30c0:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    30c2:	89 a1       	ldd	r24, Y+33	; 0x21
    30c4:	9a a1       	ldd	r25, Y+34	; 0x22
    30c6:	01 97       	sbiw	r24, 0x01	; 1
    30c8:	9a a3       	std	Y+34, r25	; 0x22
    30ca:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    30cc:	89 a1       	ldd	r24, Y+33	; 0x21
    30ce:	9a a1       	ldd	r25, Y+34	; 0x22
    30d0:	00 97       	sbiw	r24, 0x00	; 0
    30d2:	69 f7       	brne	.-38     	; 0x30ae <main+0x16c8>
    30d4:	14 c0       	rjmp	.+40     	; 0x30fe <main+0x1718>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    30d6:	6b a1       	ldd	r22, Y+35	; 0x23
    30d8:	7c a1       	ldd	r23, Y+36	; 0x24
    30da:	8d a1       	ldd	r24, Y+37	; 0x25
    30dc:	9e a1       	ldd	r25, Y+38	; 0x26
    30de:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    30e2:	dc 01       	movw	r26, r24
    30e4:	cb 01       	movw	r24, r22
    30e6:	9a a3       	std	Y+34, r25	; 0x22
    30e8:	89 a3       	std	Y+33, r24	; 0x21
    30ea:	89 a1       	ldd	r24, Y+33	; 0x21
    30ec:	9a a1       	ldd	r25, Y+34	; 0x22
    30ee:	9e 8f       	std	Y+30, r25	; 0x1e
    30f0:	8d 8f       	std	Y+29, r24	; 0x1d
    30f2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    30f4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    30f6:	01 97       	sbiw	r24, 0x01	; 1
    30f8:	f1 f7       	brne	.-4      	; 0x30f6 <main+0x1710>
    30fa:	9e 8f       	std	Y+30, r25	; 0x1e
    30fc:	8d 8f       	std	Y+29, r24	; 0x1d
			_delay_ms(50);
			DIO_u8SetValueToAllPins(2, 1, 0, 1, 1, 1, 1, 0, 0); // G
    30fe:	82 e0       	ldi	r24, 0x02	; 2
    3100:	61 e0       	ldi	r22, 0x01	; 1
    3102:	40 e0       	ldi	r20, 0x00	; 0
    3104:	21 e0       	ldi	r18, 0x01	; 1
    3106:	01 e0       	ldi	r16, 0x01	; 1
    3108:	ee 24       	eor	r14, r14
    310a:	e3 94       	inc	r14
    310c:	cc 24       	eor	r12, r12
    310e:	c3 94       	inc	r12
    3110:	aa 24       	eor	r10, r10
    3112:	88 24       	eor	r8, r8
    3114:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <DIO_u8SetValueToAllPins>
    3118:	80 e0       	ldi	r24, 0x00	; 0
    311a:	90 e0       	ldi	r25, 0x00	; 0
    311c:	a8 e4       	ldi	r26, 0x48	; 72
    311e:	b2 e4       	ldi	r27, 0x42	; 66
    3120:	89 8f       	std	Y+25, r24	; 0x19
    3122:	9a 8f       	std	Y+26, r25	; 0x1a
    3124:	ab 8f       	std	Y+27, r26	; 0x1b
    3126:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3128:	69 8d       	ldd	r22, Y+25	; 0x19
    312a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    312c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    312e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3130:	20 e0       	ldi	r18, 0x00	; 0
    3132:	30 e0       	ldi	r19, 0x00	; 0
    3134:	4a e7       	ldi	r20, 0x7A	; 122
    3136:	55 e4       	ldi	r21, 0x45	; 69
    3138:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    313c:	dc 01       	movw	r26, r24
    313e:	cb 01       	movw	r24, r22
    3140:	8d 8b       	std	Y+21, r24	; 0x15
    3142:	9e 8b       	std	Y+22, r25	; 0x16
    3144:	af 8b       	std	Y+23, r26	; 0x17
    3146:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3148:	6d 89       	ldd	r22, Y+21	; 0x15
    314a:	7e 89       	ldd	r23, Y+22	; 0x16
    314c:	8f 89       	ldd	r24, Y+23	; 0x17
    314e:	98 8d       	ldd	r25, Y+24	; 0x18
    3150:	20 e0       	ldi	r18, 0x00	; 0
    3152:	30 e0       	ldi	r19, 0x00	; 0
    3154:	40 e8       	ldi	r20, 0x80	; 128
    3156:	5f e3       	ldi	r21, 0x3F	; 63
    3158:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    315c:	88 23       	and	r24, r24
    315e:	2c f4       	brge	.+10     	; 0x316a <main+0x1784>
		__ticks = 1;
    3160:	81 e0       	ldi	r24, 0x01	; 1
    3162:	90 e0       	ldi	r25, 0x00	; 0
    3164:	9c 8b       	std	Y+20, r25	; 0x14
    3166:	8b 8b       	std	Y+19, r24	; 0x13
    3168:	3f c0       	rjmp	.+126    	; 0x31e8 <main+0x1802>
	else if (__tmp > 65535)
    316a:	6d 89       	ldd	r22, Y+21	; 0x15
    316c:	7e 89       	ldd	r23, Y+22	; 0x16
    316e:	8f 89       	ldd	r24, Y+23	; 0x17
    3170:	98 8d       	ldd	r25, Y+24	; 0x18
    3172:	20 e0       	ldi	r18, 0x00	; 0
    3174:	3f ef       	ldi	r19, 0xFF	; 255
    3176:	4f e7       	ldi	r20, 0x7F	; 127
    3178:	57 e4       	ldi	r21, 0x47	; 71
    317a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    317e:	18 16       	cp	r1, r24
    3180:	4c f5       	brge	.+82     	; 0x31d4 <main+0x17ee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3182:	69 8d       	ldd	r22, Y+25	; 0x19
    3184:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3186:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3188:	9c 8d       	ldd	r25, Y+28	; 0x1c
    318a:	20 e0       	ldi	r18, 0x00	; 0
    318c:	30 e0       	ldi	r19, 0x00	; 0
    318e:	40 e2       	ldi	r20, 0x20	; 32
    3190:	51 e4       	ldi	r21, 0x41	; 65
    3192:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3196:	dc 01       	movw	r26, r24
    3198:	cb 01       	movw	r24, r22
    319a:	bc 01       	movw	r22, r24
    319c:	cd 01       	movw	r24, r26
    319e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    31a2:	dc 01       	movw	r26, r24
    31a4:	cb 01       	movw	r24, r22
    31a6:	9c 8b       	std	Y+20, r25	; 0x14
    31a8:	8b 8b       	std	Y+19, r24	; 0x13
    31aa:	0f c0       	rjmp	.+30     	; 0x31ca <main+0x17e4>
    31ac:	80 e9       	ldi	r24, 0x90	; 144
    31ae:	91 e0       	ldi	r25, 0x01	; 1
    31b0:	9a 8b       	std	Y+18, r25	; 0x12
    31b2:	89 8b       	std	Y+17, r24	; 0x11
    31b4:	89 89       	ldd	r24, Y+17	; 0x11
    31b6:	9a 89       	ldd	r25, Y+18	; 0x12
    31b8:	01 97       	sbiw	r24, 0x01	; 1
    31ba:	f1 f7       	brne	.-4      	; 0x31b8 <main+0x17d2>
    31bc:	9a 8b       	std	Y+18, r25	; 0x12
    31be:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    31c0:	8b 89       	ldd	r24, Y+19	; 0x13
    31c2:	9c 89       	ldd	r25, Y+20	; 0x14
    31c4:	01 97       	sbiw	r24, 0x01	; 1
    31c6:	9c 8b       	std	Y+20, r25	; 0x14
    31c8:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    31ca:	8b 89       	ldd	r24, Y+19	; 0x13
    31cc:	9c 89       	ldd	r25, Y+20	; 0x14
    31ce:	00 97       	sbiw	r24, 0x00	; 0
    31d0:	69 f7       	brne	.-38     	; 0x31ac <main+0x17c6>
    31d2:	14 c0       	rjmp	.+40     	; 0x31fc <main+0x1816>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    31d4:	6d 89       	ldd	r22, Y+21	; 0x15
    31d6:	7e 89       	ldd	r23, Y+22	; 0x16
    31d8:	8f 89       	ldd	r24, Y+23	; 0x17
    31da:	98 8d       	ldd	r25, Y+24	; 0x18
    31dc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    31e0:	dc 01       	movw	r26, r24
    31e2:	cb 01       	movw	r24, r22
    31e4:	9c 8b       	std	Y+20, r25	; 0x14
    31e6:	8b 8b       	std	Y+19, r24	; 0x13
    31e8:	8b 89       	ldd	r24, Y+19	; 0x13
    31ea:	9c 89       	ldd	r25, Y+20	; 0x14
    31ec:	98 8b       	std	Y+16, r25	; 0x10
    31ee:	8f 87       	std	Y+15, r24	; 0x0f
    31f0:	8f 85       	ldd	r24, Y+15	; 0x0f
    31f2:	98 89       	ldd	r25, Y+16	; 0x10
    31f4:	01 97       	sbiw	r24, 0x01	; 1
    31f6:	f1 f7       	brne	.-4      	; 0x31f4 <main+0x180e>
    31f8:	98 8b       	std	Y+16, r25	; 0x10
    31fa:	8f 87       	std	Y+15, r24	; 0x0f
			_delay_ms(50);
			DIO_u8SetValueToAllPins(2, 0, 1, 1, 0, 1, 1, 1, 0); // H
    31fc:	82 e0       	ldi	r24, 0x02	; 2
    31fe:	60 e0       	ldi	r22, 0x00	; 0
    3200:	41 e0       	ldi	r20, 0x01	; 1
    3202:	21 e0       	ldi	r18, 0x01	; 1
    3204:	00 e0       	ldi	r16, 0x00	; 0
    3206:	ee 24       	eor	r14, r14
    3208:	e3 94       	inc	r14
    320a:	cc 24       	eor	r12, r12
    320c:	c3 94       	inc	r12
    320e:	aa 24       	eor	r10, r10
    3210:	a3 94       	inc	r10
    3212:	88 24       	eor	r8, r8
    3214:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <DIO_u8SetValueToAllPins>
    3218:	80 e0       	ldi	r24, 0x00	; 0
    321a:	90 e0       	ldi	r25, 0x00	; 0
    321c:	a8 e4       	ldi	r26, 0x48	; 72
    321e:	b2 e4       	ldi	r27, 0x42	; 66
    3220:	8b 87       	std	Y+11, r24	; 0x0b
    3222:	9c 87       	std	Y+12, r25	; 0x0c
    3224:	ad 87       	std	Y+13, r26	; 0x0d
    3226:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3228:	6b 85       	ldd	r22, Y+11	; 0x0b
    322a:	7c 85       	ldd	r23, Y+12	; 0x0c
    322c:	8d 85       	ldd	r24, Y+13	; 0x0d
    322e:	9e 85       	ldd	r25, Y+14	; 0x0e
    3230:	20 e0       	ldi	r18, 0x00	; 0
    3232:	30 e0       	ldi	r19, 0x00	; 0
    3234:	4a e7       	ldi	r20, 0x7A	; 122
    3236:	55 e4       	ldi	r21, 0x45	; 69
    3238:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    323c:	dc 01       	movw	r26, r24
    323e:	cb 01       	movw	r24, r22
    3240:	8f 83       	std	Y+7, r24	; 0x07
    3242:	98 87       	std	Y+8, r25	; 0x08
    3244:	a9 87       	std	Y+9, r26	; 0x09
    3246:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3248:	6f 81       	ldd	r22, Y+7	; 0x07
    324a:	78 85       	ldd	r23, Y+8	; 0x08
    324c:	89 85       	ldd	r24, Y+9	; 0x09
    324e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3250:	20 e0       	ldi	r18, 0x00	; 0
    3252:	30 e0       	ldi	r19, 0x00	; 0
    3254:	40 e8       	ldi	r20, 0x80	; 128
    3256:	5f e3       	ldi	r21, 0x3F	; 63
    3258:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    325c:	88 23       	and	r24, r24
    325e:	2c f4       	brge	.+10     	; 0x326a <main+0x1884>
		__ticks = 1;
    3260:	81 e0       	ldi	r24, 0x01	; 1
    3262:	90 e0       	ldi	r25, 0x00	; 0
    3264:	9e 83       	std	Y+6, r25	; 0x06
    3266:	8d 83       	std	Y+5, r24	; 0x05
    3268:	40 c0       	rjmp	.+128    	; 0x32ea <main+0x1904>
	else if (__tmp > 65535)
    326a:	6f 81       	ldd	r22, Y+7	; 0x07
    326c:	78 85       	ldd	r23, Y+8	; 0x08
    326e:	89 85       	ldd	r24, Y+9	; 0x09
    3270:	9a 85       	ldd	r25, Y+10	; 0x0a
    3272:	20 e0       	ldi	r18, 0x00	; 0
    3274:	3f ef       	ldi	r19, 0xFF	; 255
    3276:	4f e7       	ldi	r20, 0x7F	; 127
    3278:	57 e4       	ldi	r21, 0x47	; 71
    327a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    327e:	18 16       	cp	r1, r24
    3280:	54 f5       	brge	.+84     	; 0x32d6 <main+0x18f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3282:	6b 85       	ldd	r22, Y+11	; 0x0b
    3284:	7c 85       	ldd	r23, Y+12	; 0x0c
    3286:	8d 85       	ldd	r24, Y+13	; 0x0d
    3288:	9e 85       	ldd	r25, Y+14	; 0x0e
    328a:	20 e0       	ldi	r18, 0x00	; 0
    328c:	30 e0       	ldi	r19, 0x00	; 0
    328e:	40 e2       	ldi	r20, 0x20	; 32
    3290:	51 e4       	ldi	r21, 0x41	; 65
    3292:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3296:	dc 01       	movw	r26, r24
    3298:	cb 01       	movw	r24, r22
    329a:	bc 01       	movw	r22, r24
    329c:	cd 01       	movw	r24, r26
    329e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    32a2:	dc 01       	movw	r26, r24
    32a4:	cb 01       	movw	r24, r22
    32a6:	9e 83       	std	Y+6, r25	; 0x06
    32a8:	8d 83       	std	Y+5, r24	; 0x05
    32aa:	0f c0       	rjmp	.+30     	; 0x32ca <main+0x18e4>
    32ac:	80 e9       	ldi	r24, 0x90	; 144
    32ae:	91 e0       	ldi	r25, 0x01	; 1
    32b0:	9c 83       	std	Y+4, r25	; 0x04
    32b2:	8b 83       	std	Y+3, r24	; 0x03
    32b4:	8b 81       	ldd	r24, Y+3	; 0x03
    32b6:	9c 81       	ldd	r25, Y+4	; 0x04
    32b8:	01 97       	sbiw	r24, 0x01	; 1
    32ba:	f1 f7       	brne	.-4      	; 0x32b8 <main+0x18d2>
    32bc:	9c 83       	std	Y+4, r25	; 0x04
    32be:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    32c0:	8d 81       	ldd	r24, Y+5	; 0x05
    32c2:	9e 81       	ldd	r25, Y+6	; 0x06
    32c4:	01 97       	sbiw	r24, 0x01	; 1
    32c6:	9e 83       	std	Y+6, r25	; 0x06
    32c8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    32ca:	8d 81       	ldd	r24, Y+5	; 0x05
    32cc:	9e 81       	ldd	r25, Y+6	; 0x06
    32ce:	00 97       	sbiw	r24, 0x00	; 0
    32d0:	69 f7       	brne	.-38     	; 0x32ac <main+0x18c6>
    32d2:	0c 94 12 0d 	jmp	0x1a24	; 0x1a24 <main+0x3e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    32d6:	6f 81       	ldd	r22, Y+7	; 0x07
    32d8:	78 85       	ldd	r23, Y+8	; 0x08
    32da:	89 85       	ldd	r24, Y+9	; 0x09
    32dc:	9a 85       	ldd	r25, Y+10	; 0x0a
    32de:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    32e2:	dc 01       	movw	r26, r24
    32e4:	cb 01       	movw	r24, r22
    32e6:	9e 83       	std	Y+6, r25	; 0x06
    32e8:	8d 83       	std	Y+5, r24	; 0x05
    32ea:	8d 81       	ldd	r24, Y+5	; 0x05
    32ec:	9e 81       	ldd	r25, Y+6	; 0x06
    32ee:	9a 83       	std	Y+2, r25	; 0x02
    32f0:	89 83       	std	Y+1, r24	; 0x01
    32f2:	89 81       	ldd	r24, Y+1	; 0x01
    32f4:	9a 81       	ldd	r25, Y+2	; 0x02
    32f6:	01 97       	sbiw	r24, 0x01	; 1
    32f8:	f1 f7       	brne	.-4      	; 0x32f6 <main+0x1910>
    32fa:	9a 83       	std	Y+2, r25	; 0x02
    32fc:	89 83       	std	Y+1, r24	; 0x01
    32fe:	0c 94 12 0d 	jmp	0x1a24	; 0x1a24 <main+0x3e>
			_delay_ms(50);
		}

		else{
			DIO_u8SetPortDirection(2, 0);
    3302:	82 e0       	ldi	r24, 0x02	; 2
    3304:	60 e0       	ldi	r22, 0x00	; 0
    3306:	0e 94 dd 08 	call	0x11ba	; 0x11ba <DIO_u8SetPortDirection>
    330a:	0c 94 12 0d 	jmp	0x1a24	; 0x1a24 <main+0x3e>

0000330e <__prologue_saves__>:
    330e:	2f 92       	push	r2
    3310:	3f 92       	push	r3
    3312:	4f 92       	push	r4
    3314:	5f 92       	push	r5
    3316:	6f 92       	push	r6
    3318:	7f 92       	push	r7
    331a:	8f 92       	push	r8
    331c:	9f 92       	push	r9
    331e:	af 92       	push	r10
    3320:	bf 92       	push	r11
    3322:	cf 92       	push	r12
    3324:	df 92       	push	r13
    3326:	ef 92       	push	r14
    3328:	ff 92       	push	r15
    332a:	0f 93       	push	r16
    332c:	1f 93       	push	r17
    332e:	cf 93       	push	r28
    3330:	df 93       	push	r29
    3332:	cd b7       	in	r28, 0x3d	; 61
    3334:	de b7       	in	r29, 0x3e	; 62
    3336:	ca 1b       	sub	r28, r26
    3338:	db 0b       	sbc	r29, r27
    333a:	0f b6       	in	r0, 0x3f	; 63
    333c:	f8 94       	cli
    333e:	de bf       	out	0x3e, r29	; 62
    3340:	0f be       	out	0x3f, r0	; 63
    3342:	cd bf       	out	0x3d, r28	; 61
    3344:	09 94       	ijmp

00003346 <__epilogue_restores__>:
    3346:	2a 88       	ldd	r2, Y+18	; 0x12
    3348:	39 88       	ldd	r3, Y+17	; 0x11
    334a:	48 88       	ldd	r4, Y+16	; 0x10
    334c:	5f 84       	ldd	r5, Y+15	; 0x0f
    334e:	6e 84       	ldd	r6, Y+14	; 0x0e
    3350:	7d 84       	ldd	r7, Y+13	; 0x0d
    3352:	8c 84       	ldd	r8, Y+12	; 0x0c
    3354:	9b 84       	ldd	r9, Y+11	; 0x0b
    3356:	aa 84       	ldd	r10, Y+10	; 0x0a
    3358:	b9 84       	ldd	r11, Y+9	; 0x09
    335a:	c8 84       	ldd	r12, Y+8	; 0x08
    335c:	df 80       	ldd	r13, Y+7	; 0x07
    335e:	ee 80       	ldd	r14, Y+6	; 0x06
    3360:	fd 80       	ldd	r15, Y+5	; 0x05
    3362:	0c 81       	ldd	r16, Y+4	; 0x04
    3364:	1b 81       	ldd	r17, Y+3	; 0x03
    3366:	aa 81       	ldd	r26, Y+2	; 0x02
    3368:	b9 81       	ldd	r27, Y+1	; 0x01
    336a:	ce 0f       	add	r28, r30
    336c:	d1 1d       	adc	r29, r1
    336e:	0f b6       	in	r0, 0x3f	; 63
    3370:	f8 94       	cli
    3372:	de bf       	out	0x3e, r29	; 62
    3374:	0f be       	out	0x3f, r0	; 63
    3376:	cd bf       	out	0x3d, r28	; 61
    3378:	ed 01       	movw	r28, r26
    337a:	08 95       	ret

0000337c <_exit>:
    337c:	f8 94       	cli

0000337e <__stop_program>:
    337e:	ff cf       	rjmp	.-2      	; 0x337e <__stop_program>
